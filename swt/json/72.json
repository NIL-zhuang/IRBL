{
	"variables":[
		"textChangedEvent",
		"extendedModifyEvent",
		"lineBgEvent",
		"segmentEvent",
		"lineStyleEvent",
		"verifyEvent",
		"textChangingEvent",
		"listener",
		"e",
		"StyledText",
		"e",
		"eventListener",
		"extendedModifyEvent",
		"StyledText",
		"e",
		"eventListener",
		"lineBgEvent",
		"e",
		"lineBgEvent",
		"StyledText",
		"e",
		"eventListener",
		"segmentEvent",
		"e",
		"segmentEvent",
		"StyledText",
		"e",
		"eventListener",
		"lineStyleEvent",
		"e",
		"lineStyleEvent",
		"StyledText",
		"e",
		"eventListener",
		"verifyEvent",
		"e",
		"verifyEvent",
		"StyledText",
		"textChangedEvent",
		"e",
		"eventListener",
		"textChangedEvent",
		"StyledText",
		"e",
		"e",
		"eventListener",
		"textChangingEvent",
		"StyledText",
		"textChangedEvent",
		"e",
		"eventListener",
		"textChangedEvent",
		"type",
		"ExtendedModify",
		"LineGetBackground",
		"lineBackground",
		"lineBackground",
		"LineGetSegments",
		"segments",
		"segments",
		"LineGetStyle",
		"styles",
		"styles",
		"VerifyKey",
		"doit",
		"doit",
		"TextChanged",
		"data",
		"TextChanging",
		"data",
		"TextSet",
		"data",
		"listener",
		"e"
	],
	"extendORImplementFiles":[
		"TypedListener"
	],
	"package":[
		"org.eclipse.swt.custom"
	],
	"import":[
		"org.eclipse.swt.events",
		"org.eclipse.swt.widgets",
		"org.eclipse.swt.internal.SWTEventListener"
	],
	"methods":[
		"handleEvent",
		"modifyText",
		"lineGetBackground",
		"lineGetSegments",
		"lineGetStyle",
		"verifyKey",
		"textChanged",
		"textChanging",
		"textSet",
		"ExtendedModifyEvent",
		"LineBackgroundEvent",
		"BidiSegmentEvent",
		"LineStyleEvent",
		"VerifyEvent",
		"TextChangedEvent",
		"TextChangingEvent",
		"TextChangedEvent"
	],
	"methodsBody":{
		"public void handleEvent(Event e)":{
			"methodBody":"{\n    TextChangedEvent textChangedEvent;\n    switch(e.type) {\n        case StyledText.ExtendedModify:\n            ExtendedModifyEvent extendedModifyEvent = new ExtendedModifyEvent((StyledTextEvent) e);\n            ((ExtendedModifyListener) eventListener).modifyText(extendedModifyEvent);\n            break;\n        case StyledText.LineGetBackground:\n            LineBackgroundEvent lineBgEvent = new LineBackgroundEvent((StyledTextEvent) e);\n            ((LineBackgroundListener) eventListener).lineGetBackground(lineBgEvent);\n            ((StyledTextEvent) e).lineBackground = lineBgEvent.lineBackground;\n            break;\n        case StyledText.LineGetSegments:\n            BidiSegmentEvent segmentEvent = new BidiSegmentEvent((StyledTextEvent) e);\n            ((BidiSegmentListener) eventListener).lineGetSegments(segmentEvent);\n            ((StyledTextEvent) e).segments = segmentEvent.segments;\n            break;\n        case StyledText.LineGetStyle:\n            LineStyleEvent lineStyleEvent = new LineStyleEvent((StyledTextEvent) e);\n            ((LineStyleListener) eventListener).lineGetStyle(lineStyleEvent);\n            ((StyledTextEvent) e).styles = lineStyleEvent.styles;\n            break;\n        case StyledText.VerifyKey:\n            VerifyEvent verifyEvent = new VerifyEvent(e);\n            ((VerifyKeyListener) eventListener).verifyKey(verifyEvent);\n            e.doit = verifyEvent.doit;\n            break;\n        case StyledText.TextChanged:\n            textChangedEvent = new TextChangedEvent((StyledTextContent) e.data);\n            ((TextChangeListener) eventListener).textChanged(textChangedEvent);\n            break;\n        case StyledText.TextChanging:\n            TextChangingEvent textChangingEvent = new TextChangingEvent((StyledTextContent) e.data, (StyledTextEvent) e);\n            ((TextChangeListener) eventListener).textChanging(textChangingEvent);\n            break;\n        case StyledText.TextSet:\n            textChangedEvent = new TextChangedEvent((StyledTextContent) e.data);\n            ((TextChangeListener) eventListener).textSet(textChangedEvent);\n            break;\n    }\n}",
			"comments":"/**\n* Process StyledText events by invoking the event's handler.\n*/\n",
			"methodName":"public void handleEvent(Event e)"
		}
	},
	"ClassORInterfaceName":[
		"StyledTextListener"
	]
}
