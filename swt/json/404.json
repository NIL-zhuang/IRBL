{
	"variables":[
		"numerator",
		"denominator",
		"offset",
		"control",
		"alignment",
		"temp",
		"solution",
		"gcd",
		"solution",
		"gcd",
		"string",
		"numerator",
		"numerator",
		"offset",
		"denominator",
		"SWT",
		"SWT",
		"numerator",
		"denominator",
		"offset",
		"control",
		"SWT",
		"control",
		"offset",
		"SWT",
		"control",
		"offset",
		"alignment",
		"numerator",
		"denominator",
		"value",
		"offset",
		"value",
		"m",
		"Math",
		"m",
		"n",
		"Math",
		"n",
		"m",
		"n",
		"temp",
		"m",
		"m",
		"n",
		"n",
		"temp",
		"n",
		"temp",
		"m",
		"m",
		"n",
		"n",
		"temp",
		"n",
		"m",
		"solution",
		"numerator",
		"attachment",
		"denominator",
		"attachment",
		"solution",
		"denominator",
		"attachment",
		"solution",
		"solution",
		"solution",
		"solution",
		"gcd",
		"solution",
		"solution",
		"gcd",
		"solution",
		"offset",
		"attachment",
		"solution",
		"numerator",
		"denominator",
		"offset",
		"value",
		"solution",
		"numerator",
		"attachment",
		"denominator",
		"attachment",
		"solution",
		"denominator",
		"attachment",
		"solution",
		"solution",
		"solution",
		"solution",
		"gcd",
		"solution",
		"solution",
		"gcd",
		"solution",
		"offset",
		"attachment",
		"solution",
		"numerator",
		"denominator",
		"offset",
		"value",
		"denominator",
		"SWT",
		"SWT",
		"numerator",
		"value",
		"denominator",
		"offset",
		"numerator",
		"SWT",
		"SWT",
		"value",
		"offset",
		"denominator",
		"numerator",
		"control",
		"control",
		"numerator",
		"denominator",
		"string",
		"offset",
		"offset",
		"offset",
		"ERROR_CANNOT_BE_ZERO",
		"numerator",
		"denominator",
		"offset",
		"DEFAULT",
		"DEFAULT",
		"control",
		"offset",
		"alignment",
		"numerator",
		"denominator",
		"numerator",
		"denominator",
		"denominator",
		"denominator",
		"numerator",
		"numerator",
		"numerator",
		"denominator",
		"denominator",
		"offset",
		"offset",
		"numerator",
		"denominator",
		"numerator",
		"denominator",
		"denominator",
		"denominator",
		"numerator",
		"numerator",
		"numerator",
		"denominator",
		"denominator",
		"offset",
		"offset",
		"ERROR_CANNOT_BE_ZERO",
		"ERROR_CANNOT_BE_ZERO",
		"numerator",
		"numerator",
		"offset",
		"numerator",
		"denominator",
		"offset",
		"control",
		"control",
		"offset",
		"control",
		"offset",
		"alignment",
		"value",
		"m",
		"n",
		"attachment",
		"value",
		"attachment",
		"value",
		"value",
		"value"
	],
	"extendORImplementFiles":[],
	"package":[
		"org.eclipse.swt.layout"
	],
	"import":[
		"org.eclipse.swt",
		"org.eclipse.swt.widgets"
	],
	"methods":[
		"divide",
		"gcd",
		"minus",
		"minus",
		"plus",
		"plus",
		"solveX",
		"solveY",
		"toString",
		"error",
		"abs",
		"abs",
		"gcd",
		"gcd",
		"error",
		"error",
		"toString",
		"FormAttachment",
		"FormAttachment",
		"FormAttachment",
		"FormAttachment",
		"FormAttachment"
	],
	"methodsBody":{
		"FormAttachment plus(FormAttachment attachment)":{
			"methodBody":"{\n    FormAttachment solution = new FormAttachment();\n    solution.numerator = numerator * attachment.denominator + denominator * attachment.numerator;\n    solution.denominator = denominator * attachment.denominator;\n    int gcd = gcd(solution.denominator, solution.numerator);\n    solution.numerator = solution.numerator / gcd;\n    solution.denominator = solution.denominator / gcd;\n    solution.offset = offset + attachment.offset;\n    return solution;\n}",
			"comments":"",
			"methodName":"FormAttachment plus(FormAttachment attachment)"
		},
		"public String toString()":{
			"methodBody":"{\n    String string = control != null ? control.toString() : numerator + \"/\" + denominator;\n    return \"{y = (\" + string + (offset >= 0 ? \")x + \" + offset : \")x - \" + (-offset)) + \"}\";\n}",
			"comments":"/**\n* Returns a string containing a concise, human-readable\n* description of the receiver.\n*\n* @return a string representation of the event\n*/\n",
			"methodName":"public String toString()"
		},
		"FormAttachment minus(int value)":{
			"methodBody":"{\n    return new FormAttachment(numerator, denominator, offset - value);\n}",
			"comments":"",
			"methodName":"FormAttachment minus(int value)"
		},
		"FormAttachment plus(int value)":{
			"methodBody":"{\n    return new FormAttachment(numerator, denominator, offset + value);\n}",
			"comments":"",
			"methodName":"FormAttachment plus(int value)"
		},
		"FormAttachment divide(int value)":{
			"methodBody":"{\n    return new FormAttachment(numerator, denominator * value, offset / value);\n}",
			"comments":"",
			"methodName":"FormAttachment divide(int value)"
		},
		"int solveY(int value)":{
			"methodBody":"{\n    if (numerator == 0)\n        SWT.error(SWT.ERROR_CANNOT_BE_ZERO);\n    return (value - offset) * denominator / numerator;\n}",
			"comments":"",
			"methodName":"int solveY(int value)"
		},
		"int solveX(int value)":{
			"methodBody":"{\n    if (denominator == 0)\n        SWT.error(SWT.ERROR_CANNOT_BE_ZERO);\n    return ((numerator * value) / denominator) + offset;\n}",
			"comments":"",
			"methodName":"int solveX(int value)"
		},
		"FormAttachment minus(FormAttachment attachment)":{
			"methodBody":"{\n    FormAttachment solution = new FormAttachment();\n    solution.numerator = numerator * attachment.denominator - denominator * attachment.numerator;\n    solution.denominator = denominator * attachment.denominator;\n    int gcd = gcd(solution.denominator, solution.numerator);\n    solution.numerator = solution.numerator / gcd;\n    solution.denominator = solution.denominator / gcd;\n    solution.offset = offset - attachment.offset;\n    return solution;\n}",
			"comments":"",
			"methodName":"FormAttachment minus(FormAttachment attachment)"
		},
		"int gcd(int m, int n)":{
			"methodBody":"{\n    int temp;\n    m = Math.abs(m);\n    n = Math.abs(n);\n    if (m < n) {\n        temp = m;\n        m = n;\n        n = temp;\n    }\n    while (n != 0) {\n        temp = m;\n        m = n;\n        n = temp % n;\n    }\n    return m;\n}",
			"comments":"",
			"methodName":"int gcd(int m, int n)"
		}
	},
	"ClassORInterfaceName":[
		"FormAttachment"
	]
}
