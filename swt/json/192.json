{
	"variables":[
		"BrushTypeSolidColor",
		"BrushTypeHatchFill",
		"BrushTypeTextureFill",
		"BrushTypePathGradient",
		"BrushTypeLinearGradient",
		"CombineModeReplace",
		"CombineModeIntersect",
		"CombineModeUnion",
		"CombineModeXor",
		"CombineModeExclude",
		"CombineModeComplement",
		"FillModeAlternate",
		"FillModeWinding",
		"DashCapFlat",
		"DashCapRound",
		"DashCapTriangle",
		"DashStyleSolid",
		"DashStyleDash",
		"DashStyleDot",
		"DashStyleDashDot",
		"DashStyleDashDotDot",
		"DashStyleCustom",
		"FontStyleRegular",
		"FontStyleBold",
		"FontStyleItalic",
		"FontStyleBoldItalic",
		"FontStyleUnderline",
		"FontStyleStrikeout",
		"FlushIntentionFlush",
		"FlushIntentionSync",
		"HotkeyPrefixNone",
		"HotkeyPrefixShow",
		"HotkeyPrefixHide",
		"LineJoinMiter",
		"LineJoinBevel",
		"LineJoinRound",
		"LineCapFlat",
		"LineCapSquare",
		"LineCapRound",
		"MatrixOrderPrepend",
		"MatrixOrderAppend",
		"QualityModeDefault",
		"QualityModeLow",
		"QualityModeHigh",
		"InterpolationModeDefault",
		"InterpolationModeLowQuality",
		"InterpolationModeHighQuality",
		"InterpolationModeBilinear",
		"InterpolationModeBicubic",
		"InterpolationModeNearestNeighbor",
		"InterpolationModeHighQualityBilinear",
		"InterpolationModeHighQualityBicubic",
		"PathPointTypeStart",
		"PathPointTypeLine",
		"PathPointTypeBezier",
		"PathPointTypePathTypeMask",
		"PathPointTypePathDashMode",
		"PathPointTypePathMarker",
		"PathPointTypeCloseSubpath",
		"PathPointTypeBezier3",
		"PixelFormatIndexed",
		"PixelFormatGDI",
		"PixelFormatAlpha",
		"PixelFormatPAlpha",
		"PixelFormatExtended",
		"PixelFormatCanonical",
		"PixelFormat1bppIndexed",
		"PixelFormat4bppIndexed",
		"PixelFormat8bppIndexed",
		"PixelFormat16bppGrayScale",
		"PixelFormat16bppRGB555",
		"PixelFormat16bppRGB565",
		"PixelFormat16bppARGB1555",
		"PixelFormat24bppRGB",
		"PixelFormat32bppRGB",
		"PixelFormat32bppARGB",
		"PixelFormat32bppPARGB",
		"PixelFormat48bppRGB",
		"PixelFormat64bppARGB",
		"PixelFormat64bppPARGB",
		"PixelFormatMax",
		"PixelOffsetModeNone",
		"PixelOffsetModeHalf",
		"SmoothingModeDefault",
		"SmoothingModeHighSpeed",
		"SmoothingModeHighQuality",
		"SmoothingModeNone",
		"SmoothingModeAntiAlias8x4",
		"SmoothingModeAntiAlias",
		"SmoothingModeAntiAlias8x8",
		"StringFormatFlagsDirectionRightToLeft",
		"StringFormatFlagsDirectionVertical",
		"StringFormatFlagsNoFitBlackBox",
		"StringFormatFlagsDisplayFormatControl",
		"StringFormatFlagsNoFontFallback",
		"StringFormatFlagsMeasureTrailingSpaces",
		"StringFormatFlagsNoWrap",
		"StringFormatFlagsLineLimit",
		"StringFormatFlagsNoClip",
		"TextRenderingHintSystemDefault",
		"TextRenderingHintSingleBitPerPixelGridFit",
		"TextRenderingHintSingleBitPerPixel",
		"TextRenderingHintAntiAliasGridFit",
		"TextRenderingHintAntiAlias",
		"TextRenderingHintClearTypeGridFit",
		"UnitPixel",
		"WrapModeTile",
		"WrapModeTileFlipX",
		"WrapModeTileFlipY",
		"WrapModeTileFlipXY",
		"WrapModeClamp",
		"Library",
		"QualityModeDefault",
		"QualityModeLow",
		"QualityModeHigh",
		"QualityModeHigh",
		"QualityModeHigh",
		"QualityModeHigh",
		"QualityModeHigh",
		"QualityModeHigh",
		"PixelFormatIndexed",
		"PixelFormatGDI",
		"PixelFormatIndexed",
		"PixelFormatGDI",
		"PixelFormatIndexed",
		"PixelFormatGDI",
		"PixelFormatExtended",
		"PixelFormatGDI",
		"PixelFormatGDI",
		"PixelFormatAlpha",
		"PixelFormatGDI",
		"PixelFormatGDI",
		"PixelFormatGDI",
		"PixelFormatAlpha",
		"PixelFormatGDI",
		"PixelFormatCanonical",
		"PixelFormatAlpha",
		"PixelFormatPAlpha",
		"PixelFormatGDI",
		"PixelFormatExtended",
		"PixelFormatAlpha",
		"PixelFormatCanonical",
		"PixelFormatExtended",
		"PixelFormatAlpha",
		"PixelFormatPAlpha",
		"PixelFormatExtended",
		"QualityModeHigh",
		"QualityModeHigh",
		"QualityModeDefault",
		"QualityModeLow",
		"QualityModeHigh",
		"SmoothingModeAntiAlias8x4",
		"token",
		"input",
		"output",
		"token",
		"hbm",
		"hpal",
		"hicon",
		"width",
		"height",
		"stride",
		"format",
		"scan0",
		"bitmap",
		"brush",
		"brush",
		"argb",
		"color",
		"hdc",
		"hfont",
		"familyName",
		"emSize",
		"style",
		"unit",
		"fontCollection",
		"font",
		"font",
		"family",
		"font",
		"font",
		"font",
		"family",
		"family",
		"name",
		"language",
		"hdc",
		"graphics",
		"graphics",
		"pen",
		"x",
		"y",
		"width",
		"height",
		"startAngle",
		"sweepAngle",
		"graphics",
		"pen",
		"x",
		"y",
		"width",
		"height",
		"graphics",
		"image",
		"x",
		"y",
		"graphics",
		"image",
		"destRect",
		"srcx",
		"srcy",
		"srcwidth",
		"srcheight",
		"srcUnit",
		"imageAttributes",
		"callback",
		"callbackData",
		"graphics",
		"pen",
		"x1",
		"y1",
		"x2",
		"y2",
		"graphics",
		"pen",
		"points",
		"count",
		"graphics",
		"pen",
		"path",
		"graphics",
		"pen",
		"points",
		"count",
		"graphics",
		"pen",
		"x",
		"y",
		"width",
		"height",
		"graphics",
		"string",
		"length",
		"font",
		"origin",
		"brush",
		"graphics",
		"string",
		"length",
		"font",
		"origin",
		"format",
		"brush",
		"graphics",
		"brush",
		"x",
		"y",
		"width",
		"height",
		"graphics",
		"brush",
		"path",
		"graphics",
		"intention",
		"graphics",
		"brush",
		"x",
		"y",
		"width",
		"height",
		"startAngle",
		"sweepAngle",
		"graphics",
		"brush",
		"points",
		"count",
		"fillMode",
		"graphics",
		"brush",
		"x",
		"y",
		"width",
		"height",
		"graphics",
		"rect",
		"graphics",
		"rect",
		"graphics",
		"region",
		"graphics",
		"graphics",
		"hdc",
		"graphics",
		"graphics",
		"graphics",
		"graphics",
		"matrix",
		"graphics",
		"string",
		"length",
		"font",
		"origin",
		"boundingBox",
		"graphics",
		"string",
		"length",
		"font",
		"origin",
		"format",
		"boundingBox",
		"graphics",
		"graphics",
		"hrgn",
		"combineMode",
		"graphics",
		"path",
		"graphics",
		"rect",
		"graphics",
		"compositingQuality",
		"graphics",
		"pixelOffsetMode",
		"graphics",
		"smoothingMode",
		"graphics",
		"matrix",
		"graphics",
		"mode",
		"graphics",
		"mode",
		"brushMode",
		"path",
		"path",
		"x",
		"y",
		"width",
		"height",
		"startAngle",
		"sweepAngle",
		"path",
		"x1",
		"y1",
		"x2",
		"y2",
		"x3",
		"y3",
		"x4",
		"y4",
		"path",
		"x1",
		"y1",
		"x2",
		"y2",
		"path",
		"addingPath",
		"connect",
		"path",
		"rect",
		"path",
		"string",
		"length",
		"family",
		"style",
		"emSize",
		"origin",
		"format",
		"path",
		"path",
		"bounds",
		"matrix",
		"pen",
		"path",
		"lastPoint",
		"path",
		"points",
		"count",
		"path",
		"types",
		"count",
		"path",
		"path",
		"x",
		"y",
		"pen",
		"g",
		"path",
		"x",
		"y",
		"g",
		"path",
		"fillmode",
		"hatchStyle",
		"foreColor",
		"backColor",
		"image",
		"image",
		"brush",
		"point1",
		"point2",
		"color1",
		"color2",
		"brush",
		"brush",
		"wrapMode",
		"m11",
		"m12",
		"m21",
		"m22",
		"dx",
		"dy",
		"matrix",
		"matrix",
		"m",
		"matrix",
		"metrix",
		"matrix",
		"matrix1",
		"order",
		"matrix",
		"angle",
		"order",
		"matrix",
		"scaleX",
		"scaleY",
		"order",
		"matrix",
		"shearX",
		"shearY",
		"order",
		"matrix",
		"pts",
		"count",
		"matrix",
		"pts",
		"count",
		"matrix",
		"offsetX",
		"offsetY",
		"order",
		"matrix",
		"m11",
		"m12",
		"m21",
		"m22",
		"dx",
		"dy",
		"path",
		"brush",
		"brush",
		"color",
		"brush",
		"pt",
		"brush",
		"colors",
		"count",
		"brush",
		"path",
		"color",
		"width",
		"pen",
		"pen",
		"pen",
		"brush",
		"pen",
		"dashArray",
		"count",
		"pen",
		"dashStyle",
		"pen",
		"startCap",
		"endCap",
		"dashCap",
		"pen",
		"lineJoin",
		"x",
		"y",
		"point",
		"hRgn",
		"region",
		"region",
		"graphics",
		"color",
		"pen",
		"format",
		"format",
		"format",
		"format",
		"hotkeyPrefix",
		"format",
		"flags",
		"format",
		"firstTabOffset",
		"count",
		"tabStops",
		"image",
		"wrapMode",
		"dstX",
		"dstY",
		"dstWidth",
		"dstHeight",
		"brush",
		"brush",
		"matrix"
	],
	"extendORImplementFiles":[
		"Platform"
	],
	"package":[
		"org.eclipse.swt.internal.gdip"
	],
	"import":[
		"org.eclipse.swt.internal"
	],
	"methods":[
		"GdiplusStartup",
		"GdiplusShutdown",
		"Bitmap_new",
		"Bitmap_new",
		"Bitmap_new",
		"Bitmap_delete",
		"Brush_Clone",
		"Brush_GetType",
		"Color_new",
		"Color_delete",
		"Font_new",
		"Font_new",
		"Font_delete",
		"Font_GetFamily",
		"Font_GetSize",
		"Font_GetStyle",
		"Font_IsAvailable",
		"FontFamily_new",
		"FontFamily_delete",
		"FontFamily_GetFamilyName",
		"Graphics_new",
		"Graphics_delete",
		"Graphics_DrawArc",
		"Graphics_DrawEllipse",
		"Graphics_DrawImage",
		"Graphics_DrawImage",
		"Graphics_DrawLine",
		"Graphics_DrawLines",
		"Graphics_DrawPath",
		"Graphics_DrawPolygon",
		"Graphics_DrawRectangle",
		"Graphics_DrawString",
		"Graphics_DrawString",
		"Graphics_FillEllipse",
		"Graphics_FillPath",
		"Graphics_Flush",
		"Graphics_FillPie",
		"Graphics_FillPolygon",
		"Graphics_FillRectangle",
		"Graphics_GetClipBounds",
		"Graphics_GetClipBounds",
		"Graphics_GetClip",
		"Graphics_GetHDC",
		"Graphics_ReleaseHDC",
		"Graphics_GetInterpolationMode",
		"Graphics_GetSmoothingMode",
		"Graphics_GetTextRenderingHint",
		"Graphics_GetTransform",
		"Graphics_MeasureString",
		"Graphics_MeasureString",
		"Graphics_ResetClip",
		"Graphics_SetClip",
		"Graphics_SetClip",
		"Graphics_SetClip",
		"Graphics_SetCompositingQuality",
		"Graphics_SetPixelOffsetMode",
		"Graphics_SetSmoothingMode",
		"Graphics_SetTransform",
		"Graphics_SetInterpolationMode",
		"Graphics_SetTextRenderingHint",
		"GraphicsPath_new",
		"GraphicsPath_delete",
		"GraphicsPath_AddArc",
		"GraphicsPath_AddBezier",
		"GraphicsPath_AddLine",
		"GraphicsPath_AddPath",
		"GraphicsPath_AddRectangle",
		"GraphicsPath_AddString",
		"GraphicsPath_CloseFigure",
		"GraphicsPath_GetBounds",
		"GraphicsPath_GetLastPoint",
		"GraphicsPath_GetPathPoints",
		"GraphicsPath_GetPathTypes",
		"GraphicsPath_GetPointCount",
		"GraphicsPath_IsOutlineVisible",
		"GraphicsPath_IsVisible",
		"GraphicsPath_SetFillMode",
		"HatchBrush_new",
		"Image_GetWidth",
		"Image_GetHeight",
		"HatchBrush_delete",
		"LinearGradientBrush_new",
		"LinearGradientBrush_delete",
		"LinearGradientBrush_SetWrapMode",
		"Matrix_new",
		"Matrix_delete",
		"Matrix_GetElements",
		"Matrix_Invert",
		"Matrix_IsIdentity",
		"Matrix_Multiply",
		"Matrix_Rotate",
		"Matrix_Scale",
		"Matrix_Shear",
		"Matrix_TransformPoints",
		"Matrix_TransformPoints",
		"Matrix_Translate",
		"Matrix_SetElements",
		"PathGradientBrush_new",
		"PathGradientBrush_delete",
		"PathGradientBrush_SetCenterColor",
		"PathGradientBrush_SetCenterPoint",
		"PathGradientBrush_SetSurroundColors",
		"PathGradientBrush_SetGraphicsPath",
		"Pen_new",
		"Pen_delete",
		"Pen_GetBrush",
		"Pen_SetBrush",
		"Pen_SetDashPattern",
		"Pen_SetDashStyle",
		"Pen_SetLineCap",
		"Pen_SetLineJoin",
		"Point_new",
		"Point_delete",
		"Region_new",
		"Region_new",
		"Region_delete",
		"Region_GetHRGN",
		"SolidBrush_new",
		"SolidBrush_delete",
		"StringFormat_delete",
		"StringFormat_Clone",
		"StringFormat_GenericDefault",
		"StringFormat_GenericTypographic",
		"StringFormat_GetFormatFlags",
		"StringFormat_SetHotkeyPrefix",
		"StringFormat_SetFormatFlags",
		"StringFormat_SetTabStops",
		"TextureBrush_new",
		"TextureBrush_delete",
		"TextureBrush_SetTransform",
		"loadLibrary"
	],
	"methodsBody":{
		"public static final native int Graphics_ResetClip(int graphics)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_ResetClip(int graphics)"
		},
		"public static final native int Graphics_SetTextRenderingHint(int graphics, int mode)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_SetTextRenderingHint(int graphics, int mode)"
		},
		"public static final native int Graphics_SetInterpolationMode(int graphics, int mode)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_SetInterpolationMode(int graphics, int mode)"
		},
		"public static final native int Region_new(int hRgn)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Region_new(int hRgn)"
		},
		"public static final native int Graphics_DrawString(int graphics, char[] string, int length, int font, PointF origin, int brush)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_DrawString(int graphics, char[] string, int length, int font, PointF origin, int brush)"
		},
		"public static final native int GraphicsPath_AddString(int path, char[] string, int length, int family, int style, float emSize, PointF origin, int format)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int GraphicsPath_AddString(int path, char[] string, int length, int family, int style, float emSize, PointF origin, int format)"
		},
		"public static final native int Matrix_Invert(int matrix)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Matrix_Invert(int matrix)"
		},
		"public static final native float Font_GetSize(int font)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native float Font_GetSize(int font)"
		},
		"public static final native int Font_GetFamily(int font, int family)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Font_GetFamily(int font, int family)"
		},
		"public static final native int Graphics_GetClipBounds(int graphics, Rect rect)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_GetClipBounds(int graphics, Rect rect)"
		},
		"public static final native int PathGradientBrush_SetCenterColor(int brush, int color)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int PathGradientBrush_SetCenterColor(int brush, int color)"
		},
		"public static final native int Graphics_new(int hdc)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_new(int hdc)"
		},
		"public static final native void HatchBrush_delete(int brush)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native void HatchBrush_delete(int brush)"
		},
		"public static final native int GdiplusStartup(int[] token, GdiplusStartupInput input, int output)":{
			"methodBody":"",
			"comments":"/** GdiPlus natives */\n",
			"methodName":"public static final native int GdiplusStartup(int[] token, GdiplusStartupInput input, int output)"
		},
		"public static final native int Graphics_FillPolygon(int graphics, int brush, int[] points, int count, int fillMode)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_FillPolygon(int graphics, int brush, int[] points, int count, int fillMode)"
		},
		"public static final native int GraphicsPath_GetPointCount(int path)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int GraphicsPath_GetPointCount(int path)"
		},
		"public static final native int Pen_SetLineCap(int pen, int startCap, int endCap, int dashCap)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Pen_SetLineCap(int pen, int startCap, int endCap, int dashCap)"
		},
		"public static final native int Matrix_Multiply(int matrix, int matrix1, int order)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Matrix_Multiply(int matrix, int matrix1, int order)"
		},
		"public static final native int HatchBrush_new(int hatchStyle, int foreColor, int backColor)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int HatchBrush_new(int hatchStyle, int foreColor, int backColor)"
		},
		"public static final native int StringFormat_Clone(int format)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int StringFormat_Clone(int format)"
		},
		"public static final native int Graphics_GetHDC(int graphics)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_GetHDC(int graphics)"
		},
		"public static final native int Graphics_DrawString(int graphics, char[] string, int length, int font, PointF origin, int format, int brush)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_DrawString(int graphics, char[] string, int length, int font, PointF origin, int format, int brush)"
		},
		"public static final native int Graphics_GetInterpolationMode(int graphics)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_GetInterpolationMode(int graphics)"
		},
		"public static final native int Matrix_GetElements(int matrix, float[] m)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Matrix_GetElements(int matrix, float[] m)"
		},
		"public static final native void StringFormat_delete(int format)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native void StringFormat_delete(int format)"
		},
		"public static final native void TextureBrush_SetTransform(int brush, int matrix)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native void TextureBrush_SetTransform(int brush, int matrix)"
		},
		"public static final native void Bitmap_delete(int bitmap)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native void Bitmap_delete(int bitmap)"
		},
		"public static final native int Graphics_MeasureString(int graphics, char[] string, int length, int font, PointF origin, int format, RectF boundingBox)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_MeasureString(int graphics, char[] string, int length, int font, PointF origin, int format, RectF boundingBox)"
		},
		"public static final native boolean GraphicsPath_IsOutlineVisible(int path, float x, float y, int pen, int g)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native boolean GraphicsPath_IsOutlineVisible(int path, float x, float y, int pen, int g)"
		},
		"public static final native int Graphics_SetTransform(int graphics, int matrix)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_SetTransform(int graphics, int matrix)"
		},
		"public static final native int Matrix_TransformPoints(int matrix, PointF pts, int count)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Matrix_TransformPoints(int matrix, PointF pts, int count)"
		},
		"public static final native int GraphicsPath_AddRectangle(int path, RectF rect)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int GraphicsPath_AddRectangle(int path, RectF rect)"
		},
		"public static final native int Pen_new(int color, float width)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Pen_new(int color, float width)"
		},
		"public static final native int Font_new(int hdc, int hfont)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Font_new(int hdc, int hfont)"
		},
		"public static final native void GraphicsPath_delete(int path)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native void GraphicsPath_delete(int path)"
		},
		"public static final native int Point_new(int x, int y)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Point_new(int x, int y)"
		},
		"public static final native int Region_new()":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Region_new()"
		},
		"public static final native int Bitmap_new(int hbm, int hpal)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Bitmap_new(int hbm, int hpal)"
		},
		"public static final native int Image_GetWidth(int image)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Image_GetWidth(int image)"
		},
		"public static final native int StringFormat_GetFormatFlags(int format)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int StringFormat_GetFormatFlags(int format)"
		},
		"public static final native int Image_GetHeight(int image)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Image_GetHeight(int image)"
		},
		"public static final native int PathGradientBrush_new(int path)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int PathGradientBrush_new(int path)"
		},
		"public static final native int LinearGradientBrush_new(PointF point1, PointF point2, int color1, int color2)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int LinearGradientBrush_new(PointF point1, PointF point2, int color1, int color2)"
		},
		"public static final native int StringFormat_SetFormatFlags(int format, int flags)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int StringFormat_SetFormatFlags(int format, int flags)"
		},
		"public static final native int Graphics_DrawRectangle(int graphics, int pen, int x, int y, int width, int height)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_DrawRectangle(int graphics, int pen, int x, int y, int width, int height)"
		},
		"public static final native int Pen_SetBrush(int pen, int brush)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Pen_SetBrush(int pen, int brush)"
		},
		"public static final native int Font_new(char[] familyName, float emSize, int style, int unit, int fontCollection)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Font_new(char[] familyName, float emSize, int style, int unit, int fontCollection)"
		},
		"public static final native int Graphics_DrawImage(int graphics, int image, int x, int y)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_DrawImage(int graphics, int image, int x, int y)"
		},
		"public static final native int StringFormat_SetHotkeyPrefix(int format, int hotkeyPrefix)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int StringFormat_SetHotkeyPrefix(int format, int hotkeyPrefix)"
		},
		"public static final native void Pen_delete(int pen)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native void Pen_delete(int pen)"
		},
		"public static final native int Pen_GetBrush(int pen)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Pen_GetBrush(int pen)"
		},
		"public static final native int Pen_SetLineJoin(int pen, int lineJoin)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Pen_SetLineJoin(int pen, int lineJoin)"
		},
		"public static final native void GdiplusShutdown(int[] token)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native void GdiplusShutdown(int[] token)"
		},
		"public static final native int Graphics_DrawImage(int graphics, int image, Rect destRect, int srcx, int srcy, int srcwidth, int srcheight, int srcUnit, int imageAttributes, int callback, int callbackData)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_DrawImage(int graphics, int image, Rect destRect, int srcx, int srcy, int srcwidth, int srcheight, int srcUnit, int imageAttributes, int callback, int callbackData)"
		},
		"public static final native int Matrix_Shear(int matrix, float shearX, float shearY, int order)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Matrix_Shear(int matrix, float shearX, float shearY, int order)"
		},
		"public static final native int Matrix_TransformPoints(int matrix, float[] pts, int count)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Matrix_TransformPoints(int matrix, float[] pts, int count)"
		},
		"public static final native int PathGradientBrush_SetCenterPoint(int brush, PointF pt)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int PathGradientBrush_SetCenterPoint(int brush, PointF pt)"
		},
		"public static final native int Matrix_new(float m11, float m12, float m21, float m22, float dx, float dy)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Matrix_new(float m11, float m12, float m21, float m22, float dx, float dy)"
		},
		"public static final native int Graphics_FillPath(int graphics, int brush, int path)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_FillPath(int graphics, int brush, int path)"
		},
		"public static final native int StringFormat_GenericTypographic()":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int StringFormat_GenericTypographic()"
		},
		"public static final native void Font_delete(int font)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native void Font_delete(int font)"
		},
		"public static final native void TextureBrush_delete(int brush)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native void TextureBrush_delete(int brush)"
		},
		"public static final native int Color_new(int argb)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Color_new(int argb)"
		},
		"public static final native int Font_GetStyle(int font)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Font_GetStyle(int font)"
		},
		"public static final native boolean Font_IsAvailable(int font)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native boolean Font_IsAvailable(int font)"
		},
		"public static final native int SolidBrush_new(int color)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int SolidBrush_new(int color)"
		},
		"public static final native int Bitmap_new(int hicon)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Bitmap_new(int hicon)"
		},
		"public static final native int GraphicsPath_AddBezier(int path, float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int GraphicsPath_AddBezier(int path, float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4)"
		},
		"public static final native int GraphicsPath_AddArc(int path, float x, float y, float width, float height, float startAngle, float sweepAngle)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int GraphicsPath_AddArc(int path, float x, float y, float width, float height, float startAngle, float sweepAngle)"
		},
		"public static final native int Graphics_GetTransform(int graphics, int matrix)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_GetTransform(int graphics, int matrix)"
		},
		"public static final native void Color_delete(int color)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native void Color_delete(int color)"
		},
		"public static final native int GraphicsPath_AddPath(int path, int addingPath, boolean connect)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int GraphicsPath_AddPath(int path, int addingPath, boolean connect)"
		},
		"public static final native int GraphicsPath_GetPathTypes(int path, byte[] types, int count)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int GraphicsPath_GetPathTypes(int path, byte[] types, int count)"
		},
		"public static final native int Graphics_DrawArc(int graphics, int pen, int x, int y, int width, int height, float startAngle, float sweepAngle)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_DrawArc(int graphics, int pen, int x, int y, int width, int height, float startAngle, float sweepAngle)"
		},
		"public static final native int Graphics_GetTextRenderingHint(int graphics)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_GetTextRenderingHint(int graphics)"
		},
		"public static final native int Matrix_Rotate(int matrix, float angle, int order)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Matrix_Rotate(int matrix, float angle, int order)"
		},
		"public static final native void Graphics_ReleaseHDC(int graphics, int hdc)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native void Graphics_ReleaseHDC(int graphics, int hdc)"
		},
		"public static final native int FontFamily_GetFamilyName(int family, char[] name, char language)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int FontFamily_GetFamilyName(int family, char[] name, char language)"
		},
		"public static final native int GraphicsPath_GetLastPoint(int path, PointF lastPoint)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int GraphicsPath_GetLastPoint(int path, PointF lastPoint)"
		},
		"public static final native int LinearGradientBrush_SetWrapMode(int brush, int wrapMode)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int LinearGradientBrush_SetWrapMode(int brush, int wrapMode)"
		},
		"public static final native int Matrix_Translate(int matrix, float offsetX, float offsetY, int order)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Matrix_Translate(int matrix, float offsetX, float offsetY, int order)"
		},
		"public static final native int Matrix_Scale(int matrix, float scaleX, float scaleY, int order)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Matrix_Scale(int matrix, float scaleX, float scaleY, int order)"
		},
		"public static final native int GraphicsPath_GetBounds(int path, RectF bounds, int matrix, int pen)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int GraphicsPath_GetBounds(int path, RectF bounds, int matrix, int pen)"
		},
		"public static final native int PathGradientBrush_SetSurroundColors(int brush, int[] colors, int[] count)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int PathGradientBrush_SetSurroundColors(int brush, int[] colors, int[] count)"
		},
		"public static final native void SolidBrush_delete(int pen)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native void SolidBrush_delete(int pen)"
		},
		"public static final native int Graphics_DrawEllipse(int graphics, int pen, int x, int y, int width, int height)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_DrawEllipse(int graphics, int pen, int x, int y, int width, int height)"
		},
		"public static final native int Matrix_SetElements(int matrix, float m11, float m12, float m21, float m22, float dx, float dy)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Matrix_SetElements(int matrix, float m11, float m12, float m21, float m22, float dx, float dy)"
		},
		"public static final native int Graphics_DrawPolygon(int graphics, int pen, int[] points, int count)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_DrawPolygon(int graphics, int pen, int[] points, int count)"
		},
		"public static final native int Graphics_GetClipBounds(int graphics, RectF rect)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_GetClipBounds(int graphics, RectF rect)"
		},
		"public static final native int Graphics_SetClip(int graphics, int hrgn, int combineMode)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_SetClip(int graphics, int hrgn, int combineMode)"
		},
		"public static final native void LinearGradientBrush_delete(int brush)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native void LinearGradientBrush_delete(int brush)"
		},
		"public static final native int Graphics_MeasureString(int graphics, char[] string, int length, int font, PointF origin, RectF boundingBox)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_MeasureString(int graphics, char[] string, int length, int font, PointF origin, RectF boundingBox)"
		},
		"public static final native int GraphicsPath_SetFillMode(int path, int fillmode)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int GraphicsPath_SetFillMode(int path, int fillmode)"
		},
		"public static final native void Point_delete(int point)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native void Point_delete(int point)"
		},
		"public static final native int Pen_SetDashStyle(int pen, int dashStyle)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Pen_SetDashStyle(int pen, int dashStyle)"
		},
		"public static final native int FontFamily_new()":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int FontFamily_new()"
		},
		"public static final native void Matrix_delete(int matrix)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native void Matrix_delete(int matrix)"
		},
		"public static final native int Graphics_FillEllipse(int graphics, int brush, int x, int y, int width, int height)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_FillEllipse(int graphics, int brush, int x, int y, int width, int height)"
		},
		"public static final native int Graphics_FillPie(int graphics, int brush, int x, int y, int width, int height, float startAngle, float sweepAngle)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_FillPie(int graphics, int brush, int x, int y, int width, int height, float startAngle, float sweepAngle)"
		},
		"public static final native int Graphics_DrawLine(int graphics, int pen, int x1, int y1, int x2, int y2)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_DrawLine(int graphics, int pen, int x1, int y1, int x2, int y2)"
		},
		"public static final native int Graphics_DrawLines(int graphics, int pen, int[] points, int count)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_DrawLines(int graphics, int pen, int[] points, int count)"
		},
		"public static final native int Bitmap_new(int width, int height, int stride, int format, int scan0)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Bitmap_new(int width, int height, int stride, int format, int scan0)"
		},
		"public static final native int Brush_Clone(int brush)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Brush_Clone(int brush)"
		},
		"public static final native int Graphics_SetCompositingQuality(int graphics, int compositingQuality)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_SetCompositingQuality(int graphics, int compositingQuality)"
		},
		"public static final native int StringFormat_GenericDefault()":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int StringFormat_GenericDefault()"
		},
		"public static final native int Pen_SetDashPattern(int pen, float[] dashArray, int count)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Pen_SetDashPattern(int pen, float[] dashArray, int count)"
		},
		"public static final native int Graphics_GetClip(int graphics, int region)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_GetClip(int graphics, int region)"
		},
		"public static final native int Graphics_FillRectangle(int graphics, int brush, int x, int y, int width, int height)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_FillRectangle(int graphics, int brush, int x, int y, int width, int height)"
		},
		"public static final native int Graphics_SetPixelOffsetMode(int graphics, int pixelOffsetMode)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_SetPixelOffsetMode(int graphics, int pixelOffsetMode)"
		},
		"public static final native int Graphics_SetSmoothingMode(int graphics, int smoothingMode)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_SetSmoothingMode(int graphics, int smoothingMode)"
		},
		"public static final native boolean Matrix_IsIdentity(int metrix)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native boolean Matrix_IsIdentity(int metrix)"
		},
		"public static final native void PathGradientBrush_delete(int brush)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native void PathGradientBrush_delete(int brush)"
		},
		"public static final native int PathGradientBrush_SetGraphicsPath(int brush, int path)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int PathGradientBrush_SetGraphicsPath(int brush, int path)"
		},
		"public static final native int StringFormat_SetTabStops(int format, float firstTabOffset, int count, float[] tabStops)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int StringFormat_SetTabStops(int format, float firstTabOffset, int count, float[] tabStops)"
		},
		"public static final native int Graphics_SetClip(int graphics, RectF rect)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_SetClip(int graphics, RectF rect)"
		},
		"public static final native void Graphics_Flush(int graphics, int intention)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native void Graphics_Flush(int graphics, int intention)"
		},
		"public static final native int Graphics_GetSmoothingMode(int graphics)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_GetSmoothingMode(int graphics)"
		},
		"public static final native int GraphicsPath_new(int brushMode)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int GraphicsPath_new(int brushMode)"
		},
		"public static final native int GraphicsPath_AddLine(int path, float x1, float y1, float x2, float y2)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int GraphicsPath_AddLine(int path, float x1, float y1, float x2, float y2)"
		},
		"public static final native int Brush_GetType(int brush)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Brush_GetType(int brush)"
		},
		"public static final native void FontFamily_delete(int family)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native void FontFamily_delete(int family)"
		},
		"public static final native void Graphics_delete(int graphics)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native void Graphics_delete(int graphics)"
		},
		"public static final native int Region_GetHRGN(int region, int graphics)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Region_GetHRGN(int region, int graphics)"
		},
		"public static final native int Graphics_SetClip(int graphics, int path)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_SetClip(int graphics, int path)"
		},
		"public static final native int TextureBrush_new(int image, int wrapMode, float dstX, float dstY, float dstWidth, float dstHeight)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int TextureBrush_new(int image, int wrapMode, float dstX, float dstY, float dstWidth, float dstHeight)"
		},
		"public static final native int GraphicsPath_GetPathPoints(int path, float[] points, int count)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int GraphicsPath_GetPathPoints(int path, float[] points, int count)"
		},
		"public static final native void Region_delete(int region)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native void Region_delete(int region)"
		},
		"public static final native int GraphicsPath_CloseFigure(int path)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int GraphicsPath_CloseFigure(int path)"
		},
		"public static final native int Graphics_DrawPath(int graphics, int pen, int path)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native int Graphics_DrawPath(int graphics, int pen, int path)"
		},
		"public static final native boolean GraphicsPath_IsVisible(int path, float x, float y, int g)":{
			"methodBody":"",
			"comments":"",
			"methodName":"public static final native boolean GraphicsPath_IsVisible(int path, float x, float y, int g)"
		}
	},
	"ClassORInterfaceName":[
		"Gdip"
	]
}
