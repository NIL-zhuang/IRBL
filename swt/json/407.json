{
	"variables":[
		"verticalAlignment",
		"horizontalAlignment",
		"widthHint",
		"heightHint",
		"horizontalIndent",
		"verticalIndent",
		"horizontalSpan",
		"verticalSpan",
		"grabExcessHorizontalSpace",
		"grabExcessVerticalSpace",
		"minimumWidth",
		"minimumHeight",
		"exclude",
		"BEGINNING",
		"CENTER",
		"END",
		"FILL",
		"VERTICAL_ALIGN_BEGINNING",
		"VERTICAL_ALIGN_CENTER",
		"VERTICAL_ALIGN_END",
		"VERTICAL_ALIGN_FILL",
		"HORIZONTAL_ALIGN_BEGINNING",
		"HORIZONTAL_ALIGN_CENTER",
		"HORIZONTAL_ALIGN_END",
		"HORIZONTAL_ALIGN_FILL",
		"GRAB_HORIZONTAL",
		"GRAB_VERTICAL",
		"FILL_VERTICAL",
		"FILL_HORIZONTAL",
		"FILL_BOTH",
		"cacheWidth",
		"cacheHeight",
		"defaultWhint",
		"defaultHhint",
		"defaultWidth",
		"defaultHeight",
		"currentWhint",
		"currentHhint",
		"currentWidth",
		"currentHeight",
		"size",
		"size",
		"string",
		"index",
		"hAlign",
		"vAlign",
		"string",
		"CENTER",
		"BEGINNING",
		"SWT",
		"SWT",
		"SWT",
		"SWT",
		"VERTICAL_ALIGN_FILL",
		"GRAB_VERTICAL",
		"HORIZONTAL_ALIGN_FILL",
		"GRAB_HORIZONTAL",
		"FILL_VERTICAL",
		"FILL_HORIZONTAL",
		"style",
		"VERTICAL_ALIGN_BEGINNING",
		"verticalAlignment",
		"BEGINNING",
		"style",
		"VERTICAL_ALIGN_CENTER",
		"verticalAlignment",
		"CENTER",
		"style",
		"VERTICAL_ALIGN_FILL",
		"verticalAlignment",
		"FILL",
		"style",
		"VERTICAL_ALIGN_END",
		"verticalAlignment",
		"END",
		"style",
		"HORIZONTAL_ALIGN_BEGINNING",
		"horizontalAlignment",
		"BEGINNING",
		"style",
		"HORIZONTAL_ALIGN_CENTER",
		"horizontalAlignment",
		"CENTER",
		"style",
		"HORIZONTAL_ALIGN_FILL",
		"horizontalAlignment",
		"FILL",
		"style",
		"HORIZONTAL_ALIGN_END",
		"horizontalAlignment",
		"END",
		"grabExcessHorizontalSpace",
		"style",
		"GRAB_HORIZONTAL",
		"grabExcessVerticalSpace",
		"style",
		"GRAB_VERTICAL",
		"horizontalAlignment",
		"verticalAlignment",
		"grabExcessHorizontalSpace",
		"grabExcessVerticalSpace",
		"horizontalAlignment",
		"verticalAlignment",
		"grabExcessHorizontalSpace",
		"grabExcessVerticalSpace",
		"horizontalSpan",
		"verticalSpan",
		"width",
		"height",
		"cacheWidth",
		"cacheHeight",
		"wHint",
		"hHint",
		"defaultWidth",
		"defaultHeight",
		"wHint",
		"defaultWhint",
		"hHint",
		"defaultHhint",
		"control",
		"wHint",
		"hHint",
		"flushCache",
		"defaultWhint",
		"wHint",
		"defaultHhint",
		"hHint",
		"defaultWidth",
		"size",
		"defaultHeight",
		"size",
		"cacheWidth",
		"defaultWidth",
		"cacheHeight",
		"defaultHeight",
		"currentWidth",
		"currentHeight",
		"wHint",
		"currentWhint",
		"hHint",
		"currentHhint",
		"control",
		"wHint",
		"hHint",
		"flushCache",
		"currentWhint",
		"wHint",
		"currentHhint",
		"hHint",
		"currentWidth",
		"size",
		"currentHeight",
		"size",
		"cacheWidth",
		"currentWidth",
		"cacheHeight",
		"currentHeight",
		"cacheWidth",
		"cacheHeight",
		"defaultWidth",
		"defaultHeight",
		"currentWidth",
		"currentHeight",
		"string",
		"index",
		"string",
		"string",
		"index",
		"string",
		"horizontalAlignment",
		"SWT",
		"hAlign",
		"SWT",
		"hAlign",
		"SWT",
		"hAlign",
		"SWT",
		"hAlign",
		"END",
		"hAlign",
		"SWT",
		"hAlign",
		"SWT",
		"hAlign",
		"CENTER",
		"hAlign",
		"hAlign",
		"horizontalAlignment",
		"verticalAlignment",
		"SWT",
		"vAlign",
		"SWT",
		"vAlign",
		"SWT",
		"vAlign",
		"SWT",
		"vAlign",
		"END",
		"vAlign",
		"SWT",
		"vAlign",
		"SWT",
		"vAlign",
		"CENTER",
		"vAlign",
		"vAlign",
		"verticalAlignment",
		"string",
		"hAlign",
		"horizontalIndent",
		"string",
		"horizontalIndent",
		"horizontalSpan",
		"string",
		"horizontalSpan",
		"grabExcessHorizontalSpace",
		"string",
		"grabExcessHorizontalSpace",
		"widthHint",
		"SWT",
		"string",
		"widthHint",
		"minimumWidth",
		"string",
		"minimumWidth",
		"string",
		"vAlign",
		"verticalIndent",
		"string",
		"verticalIndent",
		"verticalSpan",
		"string",
		"verticalSpan",
		"grabExcessVerticalSpace",
		"string",
		"grabExcessVerticalSpace",
		"heightHint",
		"SWT",
		"string",
		"heightHint",
		"minimumHeight",
		"string",
		"minimumHeight",
		"exclude",
		"string",
		"exclude",
		"string",
		"string",
		"string",
		"string",
		"DEFAULT",
		"DEFAULT",
		"BEGINNING",
		"FILL",
		"horizontalAlignment",
		"verticalAlignment",
		"grabExcessHorizontalSpace",
		"grabExcessVerticalSpace",
		"horizontalSpan",
		"verticalSpan",
		"widthHint",
		"heightHint",
		"widthHint",
		"heightHint",
		"x",
		"y",
		"x",
		"y",
		"FILL",
		"BEGINNING",
		"LEFT",
		"END",
		"RIGHT",
		"CENTER",
		"FILL",
		"BEGINNING",
		"TOP",
		"END",
		"BOTTOM",
		"CENTER",
		"DEFAULT",
		"DEFAULT",
		"style",
		"horizontalAlignment",
		"verticalAlignment",
		"grabExcessHorizontalSpace",
		"grabExcessVerticalSpace",
		"horizontalAlignment",
		"verticalAlignment",
		"grabExcessHorizontalSpace",
		"grabExcessVerticalSpace",
		"horizontalSpan",
		"verticalSpan",
		"width",
		"height",
		"control",
		"wHint",
		"hHint",
		"flushCache"
	],
	"extendORImplementFiles":[],
	"package":[
		"org.eclipse.swt.layout"
	],
	"import":[
		"org.eclipse.swt",
		"org.eclipse.swt.graphics",
		"org.eclipse.swt.widgets"
	],
	"methods":[
		"computeSize",
		"flushCache",
		"getName",
		"toString",
		"computeSize",
		"computeSize",
		"getName",
		"getClass",
		"lastIndexOf",
		"substring",
		"length",
		"getName",
		"trim"
	],
	"methodsBody":{
		"public String toString()":{
			"methodBody":"{\n    String hAlign = \"\";\n    switch(horizontalAlignment) {\n        case SWT.FILL:\n            hAlign = \"SWT.FILL\";\n            break;\n        case SWT.BEGINNING:\n            hAlign = \"SWT.BEGINNING\";\n            break;\n        case SWT.LEFT:\n            hAlign = \"SWT.LEFT\";\n            break;\n        case SWT.END:\n            hAlign = \"SWT.END\";\n            break;\n        case END:\n            hAlign = \"GridData.END\";\n            break;\n        case SWT.RIGHT:\n            hAlign = \"SWT.RIGHT\";\n            break;\n        case SWT.CENTER:\n            hAlign = \"SWT.CENTER\";\n            break;\n        case CENTER:\n            hAlign = \"GridData.CENTER\";\n            break;\n        default:\n            hAlign = \"Undefined \" + horizontalAlignment;\n            break;\n    }\n    String vAlign = \"\";\n    switch(verticalAlignment) {\n        case SWT.FILL:\n            vAlign = \"SWT.FILL\";\n            break;\n        case SWT.BEGINNING:\n            vAlign = \"SWT.BEGINNING\";\n            break;\n        case SWT.TOP:\n            vAlign = \"SWT.TOP\";\n            break;\n        case SWT.END:\n            vAlign = \"SWT.END\";\n            break;\n        case END:\n            vAlign = \"GridData.END\";\n            break;\n        case SWT.BOTTOM:\n            vAlign = \"SWT.BOTTOM\";\n            break;\n        case SWT.CENTER:\n            vAlign = \"SWT.CENTER\";\n            break;\n        case CENTER:\n            vAlign = \"GridData.CENTER\";\n            break;\n        default:\n            vAlign = \"Undefined \" + verticalAlignment;\n            break;\n    }\n    String string = getName() + \" {\";\n    string += \"horizontalAlignment=\" + hAlign + \" \";\n    if (horizontalIndent != 0)\n        string += \"horizontalIndent=\" + horizontalIndent + \" \";\n    if (horizontalSpan != 1)\n        string += \"horizontalSpan=\" + horizontalSpan + \" \";\n    if (grabExcessHorizontalSpace)\n        string += \"grabExcessHorizontalSpace=\" + grabExcessHorizontalSpace + \" \";\n    if (widthHint != SWT.DEFAULT)\n        string += \"widthHint=\" + widthHint + \" \";\n    if (minimumWidth != 0)\n        string += \"minimumWidth=\" + minimumWidth + \" \";\n    string += \"verticalAlignment=\" + vAlign + \" \";\n    if (verticalIndent != 0)\n        string += \"verticalIndent=\" + verticalIndent + \" \";\n    if (verticalSpan != 1)\n        string += \"verticalSpan=\" + verticalSpan + \" \";\n    if (grabExcessVerticalSpace)\n        string += \"grabExcessVerticalSpace=\" + grabExcessVerticalSpace + \" \";\n    if (heightHint != SWT.DEFAULT)\n        string += \"heightHint=\" + heightHint + \" \";\n    if (minimumHeight != 0)\n        string += \"minimumHeight=\" + minimumHeight + \" \";\n    if (exclude)\n        string += \"exclude=\" + exclude + \" \";\n    string = string.trim();\n    string += \"}\";\n    return string;\n}",
			"comments":"/**\n* Returns a string containing a concise, human-readable\n* description of the receiver.\n*\n* @return a string representation of the event\n*/\n",
			"methodName":"public String toString()"
		},
		"String getName()":{
			"methodBody":"{\n    String string = getClass().getName();\n    int index = string.lastIndexOf('.');\n    if (index == -1)\n        return string;\n    return string.substring(index + 1, string.length());\n}",
			"comments":"",
			"methodName":"String getName()"
		},
		"void computeSize(Control control, int wHint, int hHint, boolean flushCache)":{
			"methodBody":"{\n    if (cacheWidth != -1 && cacheHeight != -1)\n        return;\n    if (wHint == this.widthHint && hHint == this.heightHint) {\n        if (defaultWidth == -1 || defaultHeight == -1 || wHint != defaultWhint || hHint != defaultHhint) {\n            Point size = control.computeSize(wHint, hHint, flushCache);\n            defaultWhint = wHint;\n            defaultHhint = hHint;\n            defaultWidth = size.x;\n            defaultHeight = size.y;\n        }\n        cacheWidth = defaultWidth;\n        cacheHeight = defaultHeight;\n        return;\n    }\n    if (currentWidth == -1 || currentHeight == -1 || wHint != currentWhint || hHint != currentHhint) {\n        Point size = control.computeSize(wHint, hHint, flushCache);\n        currentWhint = wHint;\n        currentHhint = hHint;\n        currentWidth = size.x;\n        currentHeight = size.y;\n    }\n    cacheWidth = currentWidth;\n    cacheHeight = currentHeight;\n}",
			"comments":"",
			"methodName":"void computeSize(Control control, int wHint, int hHint, boolean flushCache)"
		},
		"void flushCache()":{
			"methodBody":"{\n    cacheWidth = cacheHeight = -1;\n    defaultWidth = defaultHeight = -1;\n    currentWidth = currentHeight = -1;\n}",
			"comments":"",
			"methodName":"void flushCache()"
		}
	},
	"ClassORInterfaceName":[
		"GridData"
	]
}
