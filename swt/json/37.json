{
	"variables":[
		"banner",
		"left",
		"right",
		"bottom",
		"showCurve",
		"height",
		"width",
		"bottomSize",
		"trim",
		"w",
		"rightSize",
		"trim",
		"w",
		"h",
		"leftSize",
		"trim",
		"w",
		"data",
		"rect",
		"data",
		"banner",
		"left",
		"right",
		"bottom",
		"size",
		"showCurve",
		"width",
		"height",
		"bottomSize",
		"trim",
		"w",
		"rightSize",
		"trimX",
		"trimY",
		"rect",
		"rightW",
		"rightH",
		"leftSize",
		"trim",
		"x",
		"y",
		"oldStart",
		"leftRect",
		"rightRect",
		"bottomRect",
		"composite",
		"banner",
		"banner",
		"banner",
		"left",
		"right",
		"hHint",
		"wHint",
		"bottom",
		"bottom",
		"wHint",
		"SWT",
		"SWT",
		"width",
		"trim",
		"bottomSize",
		"bottom",
		"w",
		"SWT",
		"flushCache",
		"hHint",
		"SWT",
		"bottomSize",
		"Math",
		"bottomSize",
		"height",
		"height",
		"bottomSize",
		"CBanner",
		"CBanner",
		"CBanner",
		"showCurve",
		"hHint",
		"SWT",
		"height",
		"CBanner",
		"CBanner",
		"CBanner",
		"right",
		"right",
		"banner",
		"SWT",
		"SWT",
		"banner",
		"trim",
		"banner",
		"SWT",
		"SWT",
		"height",
		"rightSize",
		"right",
		"w",
		"h",
		"flushCache",
		"wHint",
		"SWT",
		"rightSize",
		"Math",
		"rightSize",
		"width",
		"width",
		"rightSize",
		"banner",
		"banner",
		"width",
		"Math",
		"width",
		"CBanner",
		"left",
		"left",
		"wHint",
		"SWT",
		"SWT",
		"width",
		"trim",
		"leftSize",
		"left",
		"w",
		"SWT",
		"flushCache",
		"width",
		"leftSize",
		"rightSize",
		"height",
		"bottomSize",
		"bottom",
		"height",
		"CBanner",
		"left",
		"height",
		"right",
		"leftSize",
		"Math",
		"leftSize",
		"banner",
		"height",
		"rightSize",
		"showCurve",
		"width",
		"banner",
		"banner",
		"height",
		"CBanner",
		"CBanner",
		"CBanner",
		"wHint",
		"SWT",
		"width",
		"wHint",
		"hHint",
		"SWT",
		"height",
		"hHint",
		"width",
		"height",
		"control",
		"data",
		"data",
		"data",
		"control",
		"data",
		"data",
		"control",
		"wHint",
		"hHint",
		"flushCache",
		"c",
		"c",
		"rect",
		"c",
		"control",
		"data",
		"data",
		"data",
		"composite",
		"banner",
		"banner",
		"banner",
		"banner",
		"left",
		"right",
		"size",
		"size",
		"bottom",
		"bottom",
		"width",
		"trim",
		"bottomSize",
		"bottom",
		"w",
		"SWT",
		"flushCache",
		"bottomSize",
		"Math",
		"bottomSize",
		"height",
		"height",
		"bottomSize",
		"CBanner",
		"CBanner",
		"CBanner",
		"showCurve",
		"height",
		"CBanner",
		"CBanner",
		"CBanner",
		"height",
		"Math",
		"height",
		"right",
		"right",
		"right",
		"trimX",
		"rect",
		"trimY",
		"rect",
		"trimX",
		"trimY",
		"right",
		"banner",
		"SWT",
		"SWT",
		"banner",
		"trimX",
		"banner",
		"SWT",
		"SWT",
		"height",
		"trimY",
		"rightSize",
		"right",
		"rightW",
		"rightH",
		"flushCache",
		"rightSize",
		"Math",
		"rightSize",
		"width",
		"width",
		"rightSize",
		"banner",
		"banner",
		"width",
		"Math",
		"width",
		"CBanner",
		"left",
		"left",
		"leftSize",
		"left",
		"width",
		"trim",
		"SWT",
		"flushCache",
		"banner",
		"bottom",
		"bottomRect",
		"x",
		"y",
		"size",
		"bottomSize",
		"bottomSize",
		"bottomSize",
		"showCurve",
		"y",
		"CBanner",
		"CBanner",
		"left",
		"leftRect",
		"x",
		"y",
		"leftSize",
		"leftSize",
		"banner",
		"x",
		"leftSize",
		"banner",
		"x",
		"leftSize",
		"banner",
		"banner",
		"right",
		"rightRect",
		"x",
		"y",
		"rightSize",
		"rightSize",
		"banner",
		"oldStart",
		"banner",
		"banner",
		"CBanner",
		"oldStart",
		"banner",
		"banner",
		"CBanner",
		"size",
		"banner",
		"oldStart",
		"banner",
		"oldStart",
		"CBanner",
		"banner",
		"banner",
		"oldStart",
		"CBanner",
		"size",
		"banner",
		"banner",
		"banner",
		"banner",
		"size",
		"bottomRect",
		"bottom",
		"bottomRect",
		"rightRect",
		"right",
		"rightRect",
		"leftRect",
		"left",
		"leftRect",
		"left",
		"right",
		"bottom",
		"DEFAULT",
		"DEFAULT",
		"DEFAULT",
		"DEFAULT",
		"y",
		"y",
		"y",
		"BORDER_TOP",
		"BORDER_STRIPE",
		"BORDER_BOTTOM",
		"DEFAULT",
		"BORDER_TOP",
		"BORDER_BOTTOM",
		"BORDER_STRIPE",
		"rightWidth",
		"DEFAULT",
		"DEFAULT",
		"rightWidth",
		"rightWidth",
		"DEFAULT",
		"DEFAULT",
		"DEFAULT",
		"x",
		"x",
		"x",
		"curve_width",
		"curve_indent",
		"MIN_LEFT",
		"DEFAULT",
		"DEFAULT",
		"DEFAULT",
		"x",
		"x",
		"y",
		"BORDER_STRIPE",
		"y",
		"y",
		"rightMinHeight",
		"y",
		"curve_width",
		"curve_indent",
		"BORDER_TOP",
		"BORDER_BOTTOM",
		"BORDER_STRIPE",
		"DEFAULT",
		"DEFAULT",
		"width",
		"left",
		"right",
		"bottom",
		"x",
		"y",
		"DEFAULT",
		"y",
		"y",
		"y",
		"BORDER_TOP",
		"BORDER_BOTTOM",
		"BORDER_STRIPE",
		"BORDER_TOP",
		"BORDER_BOTTOM",
		"BORDER_STRIPE",
		"width",
		"height",
		"rightWidth",
		"DEFAULT",
		"DEFAULT",
		"rightWidth",
		"rightWidth",
		"DEFAULT",
		"DEFAULT",
		"x",
		"x",
		"x",
		"curve_width",
		"curve_indent",
		"MIN_LEFT",
		"DEFAULT",
		"curveStart",
		"y",
		"y",
		"x",
		"y",
		"BORDER_TOP",
		"BORDER_STRIPE",
		"x",
		"y",
		"curveStart",
		"x",
		"curve_indent",
		"x",
		"curve_width",
		"curve_indent",
		"x",
		"y",
		"curveStart",
		"curveStart",
		"CURVE_TAIL",
		"curve_width",
		"curveStart",
		"CURVE_TAIL",
		"y",
		"curveStart",
		"CURVE_TAIL",
		"curveStart",
		"curve_width",
		"CURVE_TAIL",
		"y",
		"curveRect",
		"curveStart",
		"curve_width",
		"y",
		"composite",
		"wHint",
		"hHint",
		"flushCache",
		"control",
		"wHint",
		"hHint",
		"flushCache",
		"c",
		"control",
		"composite",
		"flushCache"
	],
	"extendORImplementFiles":[
		"Layout"
	],
	"package":[
		"org.eclipse.swt.custom"
	],
	"import":[
		"org.eclipse.swt",
		"org.eclipse.swt.graphics",
		"org.eclipse.swt.widgets"
	],
	"methods":[
		"computeSize",
		"computeChildSize",
		"computeTrim",
		"flushCache",
		"layout",
		"computeTrim",
		"computeChildSize",
		"min",
		"computeTrim",
		"computeChildSize",
		"min",
		"max",
		"computeTrim",
		"computeChildSize",
		"max",
		"getLayoutData",
		"setLayoutData",
		"computeSize",
		"computeTrim",
		"getBorderWidth",
		"getLayoutData",
		"flushCache",
		"getSize",
		"computeTrim",
		"computeChildSize",
		"min",
		"max",
		"computeTrim",
		"getBorderWidth",
		"computeChildSize",
		"min",
		"max",
		"computeTrim",
		"computeChildSize",
		"redraw",
		"redraw",
		"update",
		"setBounds",
		"setBounds",
		"setBounds",
		"Point",
		"Point",
		"Point",
		"Point",
		"CLayoutData",
		"Point",
		"Point",
		"Point",
		"Rectangle",
		"Rectangle",
		"Rectangle",
		"Rectangle"
	],
	"methodsBody":{
		"int computeTrim(Control c)":{
			"methodBody":"{\n    if (c instanceof Scrollable) {\n        Rectangle rect = ((Scrollable) c).computeTrim(0, 0, 0, 0);\n        return rect.width;\n    }\n    return c.getBorderWidth() * 2;\n}",
			"comments":"",
			"methodName":"int computeTrim(Control c)"
		},
		"protected boolean flushCache(Control control)":{
			"methodBody":"{\n    Object data = control.getLayoutData();\n    if (data != null && data instanceof CLayoutData)\n        ((CLayoutData) data).flushCache();\n    return true;\n}",
			"comments":"",
			"methodName":"protected boolean flushCache(Control control)"
		},
		"protected Point computeSize(Composite composite, int wHint, int hHint, boolean flushCache)":{
			"methodBody":"{\n    CBanner banner = (CBanner) composite;\n    Control left = banner.left;\n    Control right = banner.right;\n    Control bottom = banner.bottom;\n    boolean showCurve = left != null && right != null;\n    int height = hHint;\n    int width = wHint;\n    \n    Point bottomSize = new Point(0, 0);\n    if (bottom != null) {\n        int trim = computeTrim(bottom);\n        int w = wHint == SWT.DEFAULT ? SWT.DEFAULT : width - trim;\n        bottomSize = computeChildSize(bottom, w, SWT.DEFAULT, flushCache);\n        if (hHint != SWT.DEFAULT) {\n            bottomSize.y = Math.min(bottomSize.y, height);\n            height -= bottomSize.y + CBanner.BORDER_TOP + CBanner.BORDER_STRIPE + CBanner.BORDER_BOTTOM;\n        }\n    }\n    if (showCurve && hHint != SWT.DEFAULT) {\n        height -= CBanner.BORDER_TOP + CBanner.BORDER_BOTTOM + 2 * CBanner.BORDER_STRIPE;\n    }\n    Point rightSize = new Point(0, 0);\n    if (right != null) {\n        int trim = computeTrim(right);\n        int w = banner.rightWidth == SWT.DEFAULT ? SWT.DEFAULT : banner.rightWidth - trim;\n        int h = banner.rightWidth == SWT.DEFAULT ? SWT.DEFAULT : height;\n        rightSize = computeChildSize(right, w, h, flushCache);\n        if (wHint != SWT.DEFAULT) {\n            rightSize.x = Math.min(rightSize.x, width);\n            width -= rightSize.x + banner.curve_width - 2 * banner.curve_indent;\n            width = Math.max(width, CBanner.MIN_LEFT);\n        }\n    }\n    Point leftSize = new Point(0, 0);\n    if (left != null) {\n        int trim = computeTrim(left);\n        int w = wHint == SWT.DEFAULT ? SWT.DEFAULT : width - trim;\n        leftSize = computeChildSize(left, w, SWT.DEFAULT, flushCache);\n    }\n    \n    width = leftSize.x + rightSize.x;\n    height = bottomSize.y;\n    if (bottom != null) {\n        height += CBanner.BORDER_STRIPE + 2;\n    }\n    if (left != null) {\n        height += right == null ? leftSize.y : Math.max(leftSize.y, banner.rightMinHeight);\n    } else {\n        height += rightSize.y;\n    }\n    if (showCurve) {\n        width += banner.curve_width - 2 * banner.curve_indent;\n        height += CBanner.BORDER_TOP + CBanner.BORDER_BOTTOM + 2 * CBanner.BORDER_STRIPE;\n    }\n    if (wHint != SWT.DEFAULT)\n        width = wHint;\n    if (hHint != SWT.DEFAULT)\n        height = hHint;\n    return new Point(width, height);\n}",
			"comments":"// Calculate component sizes\n// Add up sizes\n",
			"methodName":"protected Point computeSize(Composite composite, int wHint, int hHint, boolean flushCache)"
		},
		"protected void layout(Composite composite, boolean flushCache)":{
			"methodBody":"{\n    CBanner banner = (CBanner) composite;\n    Control left = banner.left;\n    Control right = banner.right;\n    Control bottom = banner.bottom;\n    Point size = banner.getSize();\n    boolean showCurve = left != null && right != null;\n    int width = size.x;\n    int height = size.y;\n    Point bottomSize = new Point(0, 0);\n    if (bottom != null) {\n        int trim = computeTrim(bottom);\n        int w = width - trim;\n        bottomSize = computeChildSize(bottom, w, SWT.DEFAULT, flushCache);\n        bottomSize.y = Math.min(bottomSize.y, height);\n        height -= bottomSize.y + CBanner.BORDER_TOP + CBanner.BORDER_BOTTOM + CBanner.BORDER_STRIPE;\n    }\n    if (showCurve)\n        height -= CBanner.BORDER_TOP + CBanner.BORDER_BOTTOM + 2 * CBanner.BORDER_STRIPE;\n    height = Math.max(0, height);\n    Point rightSize = new Point(0, 0);\n    if (right != null) {\n        int trimX = 0;\n        int trimY = 0;\n        if (right instanceof Scrollable) {\n            Rectangle rect = ((Scrollable) right).computeTrim(0, 0, 0, 0);\n            trimX = rect.width;\n            trimY = rect.height;\n        } else {\n            trimX = trimY = right.getBorderWidth() * 2;\n        }\n        int rightW = banner.rightWidth == SWT.DEFAULT ? SWT.DEFAULT : banner.rightWidth - trimX;\n        int rightH = banner.rightWidth == SWT.DEFAULT ? SWT.DEFAULT : height - trimY;\n        rightSize = computeChildSize(right, rightW, rightH, flushCache);\n        rightSize.x = Math.min(rightSize.x, width);\n        width -= rightSize.x + banner.curve_width - 2 * banner.curve_indent;\n        width = Math.max(width, CBanner.MIN_LEFT);\n    }\n    Point leftSize = new Point(0, 0);\n    if (left != null) {\n        int trim = computeTrim(left);\n        leftSize = computeChildSize(left, width - trim, SWT.DEFAULT, flushCache);\n    }\n    int x = 0;\n    int y = 0;\n    int oldStart = banner.curveStart;\n    Rectangle leftRect = null;\n    Rectangle rightRect = null;\n    Rectangle bottomRect = null;\n    if (bottom != null) {\n        bottomRect = new Rectangle(x, y + size.y - bottomSize.y, bottomSize.x, bottomSize.y);\n    }\n    if (showCurve)\n        y += CBanner.BORDER_TOP + CBanner.BORDER_STRIPE;\n    if (left != null) {\n        leftRect = new Rectangle(x, y, leftSize.x, leftSize.y);\n        banner.curveStart = x + leftSize.x - banner.curve_indent;\n        x += leftSize.x + banner.curve_width - 2 * banner.curve_indent;\n    }\n    if (right != null) {\n        rightRect = new Rectangle(x, y, rightSize.x, rightSize.y);\n    }\n    if (banner.curveStart < oldStart) {\n        banner.redraw(banner.curveStart - CBanner.CURVE_TAIL, 0, oldStart + banner.curve_width - banner.curveStart + CBanner.CURVE_TAIL + 5, size.y, false);\n    }\n    if (banner.curveStart > oldStart) {\n        banner.redraw(oldStart - CBanner.CURVE_TAIL, 0, banner.curveStart + banner.curve_width - oldStart + CBanner.CURVE_TAIL + 5, size.y, false);\n    }\n    \n    banner.update();\n    banner.curveRect = new Rectangle(banner.curveStart, 0, banner.curve_width, size.y);\n    if (bottomRect != null)\n        bottom.setBounds(bottomRect);\n    if (rightRect != null)\n        right.setBounds(rightRect);\n    if (leftRect != null)\n        left.setBounds(leftRect);\n}",
			"comments":"/*\n* The paint events must be flushed in order to make the curve draw smoothly\n* while the user drags the divider.\n* On Windows, it is necessary to flush the paints before the children are\n* resized because otherwise the children (particularly toolbars) will flash.\n*/\n",
			"methodName":"protected void layout(Composite composite, boolean flushCache)"
		},
		"Point computeChildSize(Control control, int wHint, int hHint, boolean flushCache)":{
			"methodBody":"{\n    Object data = control.getLayoutData();\n    if (data == null || !(data instanceof CLayoutData)) {\n        data = new CLayoutData();\n        control.setLayoutData(data);\n    }\n    return ((CLayoutData) data).computeSize(control, wHint, hHint, flushCache);\n}",
			"comments":"",
			"methodName":"Point computeChildSize(Control control, int wHint, int hHint, boolean flushCache)"
		}
	},
	"ClassORInterfaceName":[
		"CBannerLayout"
	]
}
