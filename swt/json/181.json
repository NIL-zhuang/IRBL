{
	"variables":[
		"font",
		"foreground",
		"background",
		"underline",
		"strikeout",
		"style",
		"hash",
		"font",
		"font",
		"SWT",
		"SWT",
		"foreground",
		"foreground",
		"SWT",
		"SWT",
		"background",
		"background",
		"SWT",
		"SWT",
		"font",
		"foreground",
		"background",
		"object",
		"object",
		"object",
		"object",
		"style",
		"style",
		"style",
		"style",
		"style",
		"style",
		"style",
		"style",
		"foreground",
		"hash",
		"foreground",
		"background",
		"hash",
		"background",
		"font",
		"hash",
		"font",
		"underline",
		"hash",
		"hash",
		"strikeout",
		"hash",
		"hash",
		"hash",
		"font",
		"foreground",
		"background",
		"underline",
		"strikeout",
		"ERROR_INVALID_ARGUMENT",
		"ERROR_INVALID_ARGUMENT",
		"ERROR_INVALID_ARGUMENT",
		"font",
		"foreground",
		"background",
		"foreground",
		"foreground",
		"foreground",
		"foreground",
		"background",
		"background",
		"background",
		"background",
		"font",
		"font",
		"font",
		"font",
		"underline",
		"underline",
		"strikeout",
		"strikeout",
		"font",
		"foreground",
		"background",
		"object"
	],
	"extendORImplementFiles":[],
	"package":[
		"org.eclipse.swt.graphics"
	],
	"import":[
		"org.eclipse.swt"
	],
	"methods":[
		"equals",
		"hashCode",
		"toString",
		"isDisposed",
		"error",
		"isDisposed",
		"error",
		"isDisposed",
		"error",
		"equals",
		"equals",
		"equals",
		"hashCode",
		"hashCode",
		"hashCode"
	],
	"methodsBody":{
		"public String toString()":{
			"methodBody":"{\n    \n    return \"TextStyle {font: \" + font + \", foreground: \" + foreground + \", background: \" + background + \", underline: \" + underline + \", strikeout: \" + strikeout + \"}\";\n}",
			"comments":"/**\n* Returns a string containing a concise, human-readable\n* description of the receiver.\n*\n* @return a string representation of the <code>RGB</code>\n*/\n//$NON-NLS-1$//$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$ //$NON-NLS-6$\n",
			"methodName":"public String toString()"
		},
		"public int hashCode()":{
			"methodBody":"{\n    int hash = 0;\n    if (foreground != null)\n        hash ^= foreground.hashCode();\n    if (background != null)\n        hash ^= background.hashCode();\n    if (font != null)\n        hash ^= font.hashCode();\n    if (underline)\n        hash ^= hash;\n    if (strikeout)\n        hash ^= hash;\n    return hash;\n}",
			"comments":"/**\n* Returns an integer hash code for the receiver. Any two\n* objects that return <code>true</code> when passed to\n* <code>equals</code> must return the same value for this\n* method.\n*\n* @return the receiver's hash\n*\n* @see #equals(Object)\n*/\n",
			"methodName":"public int hashCode()"
		},
		"public boolean equals(Object object)":{
			"methodBody":"{\n    if (object == this)\n        return true;\n    if (object == null)\n        return false;\n    if (!(object instanceof TextStyle))\n        return false;\n    TextStyle style = (TextStyle) object;\n    if (this.foreground != null) {\n        if (!this.foreground.equals(style.foreground))\n            return false;\n    } else if (style.foreground != null)\n        return false;\n    if (this.background != null) {\n        if (!this.background.equals(style.background))\n            return false;\n    } else if (style.background != null)\n        return false;\n    if (this.font != null) {\n        if (!this.font.equals(style.font))\n            return false;\n    } else if (style.font != null)\n        return false;\n    if (this.underline != style.underline)\n        return false;\n    if (this.strikeout != style.strikeout)\n        return false;\n    return true;\n}",
			"comments":"/**\n* Compares the argument to the receiver, and returns true\n* if they represent the <em>same</em> object using a class\n* specific comparison.\n*\n* @param object the object to compare with this object\n* @return <code>true</code> if the object is the same as this object and <code>false</code> otherwise\n*\n* @see #hashCode()\n*/\n",
			"methodName":"public boolean equals(Object object)"
		}
	},
	"ClassORInterfaceName":[
		"TextStyle"
	]
}
