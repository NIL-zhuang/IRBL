{
	"variables":[
		"inLayout",
		"DEFAULT_WIDTH",
		"DEFAULT_HEIGHT",
		"sc",
		"w",
		"h",
		"size",
		"hBar",
		"vBar",
		"sc",
		"contentRect",
		"hBar",
		"vBar",
		"hVisible",
		"vVisible",
		"hostRect",
		"hPage",
		"hSelection",
		"vPage",
		"vSelection",
		"composite",
		"sc",
		"wHint",
		"SWT",
		"wHint",
		"DEFAULT_WIDTH",
		"hHint",
		"SWT",
		"hHint",
		"DEFAULT_HEIGHT",
		"w",
		"h",
		"sc",
		"wHint",
		"hHint",
		"flushCache",
		"sc",
		"sc",
		"sc",
		"hBar",
		"size",
		"hBar",
		"vBar",
		"size",
		"vBar",
		"size",
		"inLayout",
		"composite",
		"sc",
		"inLayout",
		"sc",
		"sc",
		"sc",
		"sc",
		"sc",
		"contentRect",
		"sc",
		"contentRect",
		"hVisible",
		"hVisible",
		"vVisible",
		"hVisible",
		"sc",
		"contentRect",
		"vVisible",
		"hBar",
		"hBar",
		"hVisible",
		"vBar",
		"vBar",
		"vVisible",
		"sc",
		"sc",
		"contentRect",
		"Math",
		"sc",
		"hostRect",
		"sc",
		"contentRect",
		"Math",
		"sc",
		"hostRect",
		"hBar",
		"hBar",
		"contentRect",
		"hBar",
		"Math",
		"contentRect",
		"hostRect",
		"contentRect",
		"hostRect",
		"hBar",
		"hSelection",
		"hPage",
		"hPage",
		"hSelection",
		"hBar",
		"contentRect",
		"hSelection",
		"vBar",
		"vBar",
		"contentRect",
		"vBar",
		"Math",
		"contentRect",
		"hostRect",
		"contentRect",
		"hostRect",
		"vBar",
		"vSelection",
		"vPage",
		"vPage",
		"vSelection",
		"vBar",
		"contentRect",
		"vSelection",
		"sc",
		"contentRect",
		"inLayout",
		"content",
		"DEFAULT",
		"DEFAULT",
		"content",
		"alwaysShowScroll",
		"y",
		"y",
		"x",
		"x",
		"content",
		"content",
		"alwaysShowScroll",
		"expandHorizontal",
		"width",
		"minWidth",
		"width",
		"expandVertical",
		"height",
		"minHeight",
		"height",
		"width",
		"width",
		"width",
		"width",
		"width",
		"x",
		"height",
		"height",
		"height",
		"height",
		"height",
		"y",
		"content",
		"composite",
		"wHint",
		"hHint",
		"flushCache",
		"control",
		"composite",
		"flushCache"
	],
	"extendORImplementFiles":[
		"Layout"
	],
	"package":[
		"org.eclipse.swt.custom"
	],
	"import":[
		"org.eclipse.swt",
		"org.eclipse.swt.graphics",
		"org.eclipse.swt.widgets"
	],
	"methods":[
		"computeSize",
		"flushCache",
		"layout",
		"computeSize",
		"getHorizontalBar",
		"getVerticalBar",
		"getSize",
		"getSize",
		"getBounds",
		"getHorizontalBar",
		"getVerticalBar",
		"needHScroll",
		"needVScroll",
		"needHScroll",
		"setVisible",
		"setVisible",
		"getClientArea",
		"max",
		"max",
		"setMaximum",
		"setThumb",
		"min",
		"getSelection",
		"setSelection",
		"setMaximum",
		"setThumb",
		"min",
		"getSelection",
		"setSelection",
		"setBounds",
		"Point"
	],
	"methodsBody":{
		"protected boolean flushCache(Control control)":{
			"methodBody":"{\n    return true;\n}",
			"comments":"",
			"methodName":"protected boolean flushCache(Control control)"
		},
		"protected Point computeSize(Composite composite, int wHint, int hHint, boolean flushCache)":{
			"methodBody":"{\n    ScrolledComposite sc = (ScrolledComposite) composite;\n    if (sc.content == null) {\n        int w = (wHint != SWT.DEFAULT) ? wHint : DEFAULT_WIDTH;\n        int h = (hHint != SWT.DEFAULT) ? hHint : DEFAULT_HEIGHT;\n        return new Point(w, h);\n    }\n    Point size = sc.content.computeSize(wHint, hHint, flushCache);\n    if (sc.alwaysShowScroll) {\n        ScrollBar hBar = sc.getHorizontalBar();\n        ScrollBar vBar = sc.getVerticalBar();\n        if (hBar != null)\n            size.y += hBar.getSize().y;\n        if (vBar != null)\n            size.x += vBar.getSize().x;\n    }\n    return size;\n}",
			"comments":"",
			"methodName":"protected Point computeSize(Composite composite, int wHint, int hHint, boolean flushCache)"
		},
		"protected void layout(Composite composite, boolean flushCache)":{
			"methodBody":"{\n    if (inLayout)\n        return;\n    ScrolledComposite sc = (ScrolledComposite) composite;\n    if (sc.content == null)\n        return;\n    inLayout = true;\n    Rectangle contentRect = sc.content.getBounds();\n    ScrollBar hBar = sc.getHorizontalBar();\n    ScrollBar vBar = sc.getVerticalBar();\n    if (!sc.alwaysShowScroll) {\n        boolean hVisible = sc.needHScroll(contentRect, false);\n        boolean vVisible = sc.needVScroll(contentRect, hVisible);\n        if (!hVisible && vVisible)\n            hVisible = sc.needHScroll(contentRect, vVisible);\n        if (hBar != null)\n            hBar.setVisible(hVisible);\n        if (vBar != null)\n            vBar.setVisible(vVisible);\n    }\n    Rectangle hostRect = sc.getClientArea();\n    if (sc.expandHorizontal) {\n        contentRect.width = Math.max(sc.minWidth, hostRect.width);\n    }\n    if (sc.expandVertical) {\n        contentRect.height = Math.max(sc.minHeight, hostRect.height);\n    }\n    if (hBar != null) {\n        hBar.setMaximum(contentRect.width);\n        hBar.setThumb(Math.min(contentRect.width, hostRect.width));\n        int hPage = contentRect.width - hostRect.width;\n        int hSelection = hBar.getSelection();\n        if (hSelection >= hPage) {\n            if (hPage <= 0) {\n                hSelection = 0;\n                hBar.setSelection(0);\n            }\n            contentRect.x = -hSelection;\n        }\n    }\n    if (vBar != null) {\n        vBar.setMaximum(contentRect.height);\n        vBar.setThumb(Math.min(contentRect.height, hostRect.height));\n        int vPage = contentRect.height - hostRect.height;\n        int vSelection = vBar.getSelection();\n        if (vSelection >= vPage) {\n            if (vPage <= 0) {\n                vSelection = 0;\n                vBar.setSelection(0);\n            }\n            contentRect.y = -vSelection;\n        }\n    }\n    sc.content.setBounds(contentRect);\n    inLayout = false;\n}",
			"comments":"",
			"methodName":"protected void layout(Composite composite, boolean flushCache)"
		}
	},
	"ClassORInterfaceName":[
		"ScrolledCompositeLayout"
	]
}
