{
	"variables":[
		"event",
		"event"
	],
	"extendORImplementFiles":[
		"SWTEventListener"
	],
	"package":[
		"org.eclipse.swt.browser"
	],
	"import":[
		"org.eclipse.swt.internal.SWTEventListener"
	],
	"methods":[
		"hide",
		"show"
	],
	"methodsBody":{
		"public void show(WindowEvent event)":{
			"methodBody":"",
			"comments":"/**\n* This method is called when the window hosting a <code>Browser</code>\n* is requested to be displayed. Application would typically set the\n* location and the size of the {@link org.eclipse.swt.widgets.Shell}\n* that hosts the <code>Browser</code>, if a particular location and size\n* are specified. The application would then open that <code>Shell</code>.\n* <p>\n*\n* <p>The following fields in the <code>WindowEvent</code> apply:\n* <ul>\n* <li>(in) widget the <code>Browser</code> to display\n* <li>(in) location the requested location for the <code>Shell</code>\n* hosting the browser. It is <code>null</code> if no location is set.\n* <li>(in) size the requested size for the <code>Browser</code>.\n* The client area of the <code>Shell</code> hosting the\n* <code>Browser</code> should be large enough to accomodate that size.\n* It is <code>null</code> if no size is set.\n* <li>(in) addressBar <code>true</code> if the <code>Shell</code>\n* hosting the <code>Browser</code> should display an address bar or\n* <code>false</code> otherwise\n* <li>(in) menuBar <code>true</code> if the <code>Shell</code>\n* hosting the <code>Browser</code> should display a menu bar or\n* <code>false</code> otherwise\n* <li>(in) statusBar <code>true</code> if the <code>Shell</code>\n* hosting the <code>Browser</code> should display a status bar or\n* <code>false</code> otherwise\n* <li>(in) toolBar <code>true</code> if the <code>Shell</code>\n* hosting the <code>Browser</code> should display a tool bar or\n* <code>false</code> otherwise\n* </ul>\n*\n* @param event the <code>WindowEvent</code> that specifies the\n* <code>Browser</code> that needs to be displayed\n*\n* @see org.eclipse.swt.widgets.Control#setLocation(org.eclipse.swt.graphics.Point)\n* @see org.eclipse.swt.widgets.Control#setSize(org.eclipse.swt.graphics.Point)\n* @see org.eclipse.swt.widgets.Shell#open()\n*\n* @since 3.0\n*/\n",
			"methodName":"public void show(WindowEvent event)"
		},
		"public void hide(WindowEvent event)":{
			"methodBody":"",
			"comments":"/**\n* This method is called when the window hosting a <code>Browser</code>\n* is requested to be hidden. Application would typically hide the\n* {@link org.eclipse.swt.widgets.Shell} that hosts the <code>Browser</code>.\n* <p>\n*\n* <p>The following fields in the <code>WindowEvent</code> apply:\n* <ul>\n* <li>(in) widget the <code>Browser</code> that needs to be hidden\n* </ul>\n*\n* @param event the <code>WindowEvent</code> that specifies the\n* <code>Browser</code> that needs to be hidden\n*\n* @see org.eclipse.swt.widgets.Shell#setVisible(boolean)\n*\n* @since 3.0\n*/\n",
			"methodName":"public void hide(WindowEvent event)"
		}
	},
	"ClassORInterfaceName":[
		"VisibilityWindowListener"
	]
}
