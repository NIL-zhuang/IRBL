{
	"variables":[
		"handle",
		"isIcon",
		"HAND_SOURCE",
		"HAND_MASK",
		"lpCursorName",
		"width",
		"height",
		"hInst",
		"sourceData",
		"maskData",
		"hInst",
		"mask",
		"result",
		"hBitmap",
		"hMask",
		"info",
		"cursor",
		"cursor",
		"device",
		"device",
		"Device",
		"device",
		"SWT",
		"SWT",
		"device",
		"style",
		"SWT",
		"lpCursorName",
		"OS",
		"SWT",
		"lpCursorName",
		"OS",
		"SWT",
		"lpCursorName",
		"OS",
		"SWT",
		"lpCursorName",
		"OS",
		"SWT",
		"lpCursorName",
		"OS",
		"SWT",
		"lpCursorName",
		"OS",
		"SWT",
		"lpCursorName",
		"OS",
		"SWT",
		"lpCursorName",
		"OS",
		"SWT",
		"lpCursorName",
		"OS",
		"SWT",
		"lpCursorName",
		"OS",
		"SWT",
		"lpCursorName",
		"OS",
		"SWT",
		"lpCursorName",
		"OS",
		"SWT",
		"lpCursorName",
		"OS",
		"SWT",
		"lpCursorName",
		"OS",
		"SWT",
		"lpCursorName",
		"OS",
		"SWT",
		"lpCursorName",
		"OS",
		"SWT",
		"lpCursorName",
		"OS",
		"SWT",
		"lpCursorName",
		"OS",
		"SWT",
		"lpCursorName",
		"OS",
		"SWT",
		"lpCursorName",
		"OS",
		"SWT",
		"lpCursorName",
		"OS",
		"SWT",
		"lpCursorName",
		"OS",
		"SWT",
		"SWT",
		"handle",
		"OS",
		"lpCursorName",
		"handle",
		"style",
		"SWT",
		"OS",
		"OS",
		"OS",
		"OS",
		"width",
		"height",
		"OS",
		"OS",
		"SWT",
		"SWT",
		"handle",
		"OS",
		"hInst",
		"HAND_SOURCE",
		"HAND_MASK",
		"handle",
		"SWT",
		"SWT",
		"device",
		"device",
		"device",
		"device",
		"Device",
		"device",
		"SWT",
		"SWT",
		"device",
		"source",
		"SWT",
		"SWT",
		"mask",
		"source",
		"SWT",
		"SWT",
		"SWT",
		"mask",
		"source",
		"mask",
		"source",
		"mask",
		"source",
		"SWT",
		"SWT",
		"hotspotX",
		"source",
		"hotspotX",
		"hotspotY",
		"source",
		"hotspotY",
		"SWT",
		"SWT",
		"mask",
		"ImageData",
		"mask",
		"source",
		"ImageData",
		"source",
		"ImageData",
		"source",
		"source",
		"source",
		"source",
		"source",
		"ImageData",
		"mask",
		"mask",
		"mask",
		"mask",
		"mask",
		"OS",
		"OS",
		"SWT",
		"SWT",
		"handle",
		"OS",
		"hInst",
		"hotspotX",
		"hotspotY",
		"source",
		"source",
		"sourceData",
		"maskData",
		"handle",
		"SWT",
		"SWT",
		"device",
		"device",
		"device",
		"device",
		"Device",
		"device",
		"SWT",
		"SWT",
		"device",
		"source",
		"SWT",
		"SWT",
		"hotspotX",
		"source",
		"hotspotX",
		"hotspotY",
		"source",
		"hotspotY",
		"SWT",
		"SWT",
		"source",
		"Image",
		"device",
		"source",
		"mask",
		"result",
		"result",
		"info",
		"info",
		"hBitmap",
		"info",
		"hMask",
		"info",
		"hotspotX",
		"info",
		"hotspotY",
		"handle",
		"OS",
		"info",
		"handle",
		"SWT",
		"SWT",
		"OS",
		"hBitmap",
		"OS",
		"hMask",
		"isIcon",
		"device",
		"device",
		"handle",
		"device",
		"isIcon",
		"OS",
		"handle",
		"OS",
		"OS",
		"handle",
		"handle",
		"device",
		"device",
		"device",
		"object",
		"object",
		"object",
		"device",
		"cursor",
		"handle",
		"cursor",
		"handle",
		"handle",
		"handle",
		"device",
		"device",
		"Device",
		"cursor",
		"handle",
		"cursor",
		"device",
		"cursor",
		"ERROR_NULL_ARGUMENT",
		"device",
		"CURSOR_HAND",
		"IDC_HAND",
		"CURSOR_ARROW",
		"IDC_ARROW",
		"CURSOR_WAIT",
		"IDC_WAIT",
		"CURSOR_CROSS",
		"IDC_CROSS",
		"CURSOR_APPSTARTING",
		"IDC_APPSTARTING",
		"CURSOR_HELP",
		"IDC_HELP",
		"CURSOR_SIZEALL",
		"IDC_SIZEALL",
		"CURSOR_SIZENESW",
		"IDC_SIZENESW",
		"CURSOR_SIZENS",
		"IDC_SIZENS",
		"CURSOR_SIZENWSE",
		"IDC_SIZENWSE",
		"CURSOR_SIZEWE",
		"IDC_SIZEWE",
		"CURSOR_SIZEN",
		"IDC_SIZENS",
		"CURSOR_SIZES",
		"IDC_SIZENS",
		"CURSOR_SIZEE",
		"IDC_SIZEWE",
		"CURSOR_SIZEW",
		"IDC_SIZEWE",
		"CURSOR_SIZENE",
		"IDC_SIZENESW",
		"CURSOR_SIZESE",
		"IDC_SIZENWSE",
		"CURSOR_SIZESW",
		"IDC_SIZENESW",
		"CURSOR_SIZENW",
		"IDC_SIZENWSE",
		"CURSOR_UPARROW",
		"IDC_UPARROW",
		"CURSOR_IBEAM",
		"IDC_IBEAM",
		"CURSOR_NO",
		"IDC_NO",
		"ERROR_INVALID_ARGUMENT",
		"CURSOR_HAND",
		"SM_CXCURSOR",
		"SM_CYCURSOR",
		"IsWinCE",
		"ERROR_NOT_IMPLEMENTED",
		"ERROR_NO_HANDLES",
		"tracking",
		"ERROR_NULL_ARGUMENT",
		"device",
		"ERROR_NULL_ARGUMENT",
		"TRANSPARENCY_MASK",
		"ERROR_NULL_ARGUMENT",
		"width",
		"width",
		"height",
		"height",
		"ERROR_INVALID_ARGUMENT",
		"width",
		"height",
		"ERROR_INVALID_ARGUMENT",
		"data",
		"width",
		"height",
		"depth",
		"scanlinePad",
		"data",
		"width",
		"height",
		"depth",
		"scanlinePad",
		"IsWinCE",
		"ERROR_NOT_IMPLEMENTED",
		"width",
		"height",
		"ERROR_NO_HANDLES",
		"tracking",
		"ERROR_NULL_ARGUMENT",
		"device",
		"ERROR_NULL_ARGUMENT",
		"width",
		"height",
		"ERROR_INVALID_ARGUMENT",
		"fIcon",
		"hbmColor",
		"hbmMask",
		"xHotspot",
		"yHotspot",
		"ERROR_NO_HANDLES",
		"tracking",
		"IsWinCE",
		"tracking",
		"device",
		"handle",
		"handle",
		"device",
		"device",
		"style",
		"device",
		"source",
		"mask",
		"hotspotX",
		"hotspotY",
		"device",
		"source",
		"hotspotX",
		"hotspotY",
		"object",
		"device",
		"handle"
	],
	"extendORImplementFiles":[
		"Resource"
	],
	"package":[
		"org.eclipse.swt.graphics"
	],
	"import":[
		"org.eclipse.swt.internal.win32",
		"org.eclipse.swt"
	],
	"methods":[
		"dispose",
		"equals",
		"hashCode",
		"isDisposed",
		"toString",
		"win32_new",
		"getDevice",
		"error",
		"error",
		"LoadCursor",
		"GetSystemMetrics",
		"GetSystemMetrics",
		"GetModuleHandle",
		"error",
		"CreateCursor",
		"error",
		"new_Object",
		"getDevice",
		"error",
		"error",
		"getTransparencyType",
		"error",
		"getTransparencyMask",
		"error",
		"error",
		"convertMask",
		"convertMask",
		"convertPad",
		"convertPad",
		"GetModuleHandle",
		"error",
		"CreateCursor",
		"error",
		"new_Object",
		"getDevice",
		"error",
		"error",
		"error",
		"getTransparencyMask",
		"init",
		"CreateIconIndirect",
		"error",
		"DeleteObject",
		"DeleteObject",
		"new_Object",
		"isDisposed",
		"DestroyIcon",
		"DestroyCursor",
		"dispose_Object",
		"isDisposed",
		"getDevice",
		"ICONINFO",
		"Cursor"
	],
	"methodsBody":{
		"public String toString()":{
			"methodBody":"{\n    if (isDisposed())\n        return \"Cursor {*DISPOSED*}\";\n    return \"Cursor {\" + handle + \"}\";\n}",
			"comments":"/**\n* Returns a string containing a concise, human-readable\n* description of the receiver.\n*\n* @return a string representation of the receiver\n*/\n",
			"methodName":"public String toString()"
		},
		"public void dispose()":{
			"methodBody":"{\n    if (handle == 0)\n        return;\n    if (device.isDisposed())\n        return;\n    if (isIcon) {\n        OS.DestroyIcon(handle);\n    } else {\n        \n        if (!OS.IsWinCE)\n            OS.DestroyCursor(handle);\n    }\n    handle = 0;\n    if (device.tracking)\n        device.dispose_Object(this);\n    device = null;\n}",
			"comments":"/**\n* Disposes of the operating system resources associated with\n* the cursor. Applications must dispose of all cursors which\n* they allocate.\n*/\n/*\n* It is an error in Windows to destroy the current\n* cursor.  Check that the cursor that is about to\n* be destroyed is the current cursor.  If so, set\n* the current cursor to be IDC_ARROW.  Note that\n* Windows shares predefined cursors so the call to\n* LoadCursor() does not leak.\n*/\n// TEMPORARY CODE\n//\tif (OS.GetCursor() == handle) {\n//\t\tOS.SetCursor(OS.LoadCursor(0, OS.IDC_ARROW));\n//\t}\n/*\n* The MSDN states that one should not destroy a shared\n* cursor, that is, one obtained from LoadCursor.\n* However, it does not appear to do any harm, so rather\n* than keep track of how a cursor was created, we just\n* destroy them all. If this causes problems in the future,\n* put the flag back in.\n*/\n",
			"methodName":"public void dispose()"
		},
		"public int hashCode()":{
			"methodBody":"{\n    return handle;\n}",
			"comments":"/**\n* Returns an integer hash code for the receiver. Any two\n* objects that return <code>true</code> when passed to\n* <code>equals</code> must return the same value for this\n* method.\n*\n* @return the receiver's hash\n*\n* @see #equals\n*/\n",
			"methodName":"public int hashCode()"
		},
		"public static Cursor win32_new(Device device, int handle)":{
			"methodBody":"{\n    if (device == null)\n        device = Device.getDevice();\n    Cursor cursor = new Cursor();\n    cursor.handle = handle;\n    cursor.device = device;\n    return cursor;\n}",
			"comments":"/**\n* Invokes platform specific functionality to allocate a new cursor.\n* <p>\n* <b>IMPORTANT:</b> This method is <em>not</em> part of the public\n* API for <code>Cursor</code>. It is marked public only so that it\n* can be shared within the packages provided by SWT. It is not\n* available on all platforms, and should never be called from\n* application code.\n* </p>\n*\n* @param device the device on which to allocate the color\n* @param handle the handle for the cursor\n* @return a new cursor object containing the specified device and handle\n*/\n",
			"methodName":"public static Cursor win32_new(Device device, int handle)"
		},
		"public boolean isDisposed()":{
			"methodBody":"{\n    return handle == 0;\n}",
			"comments":"/**\n* Returns <code>true</code> if the cursor has been disposed,\n* and <code>false</code> otherwise.\n* <p>\n* This method gets the dispose state for the cursor.\n* When a cursor has been disposed, it is an error to\n* invoke any other method using the cursor.\n*\n* @return <code>true</code> when the cursor is disposed and <code>false</code> otherwise\n*/\n",
			"methodName":"public boolean isDisposed()"
		},
		"public boolean equals(Object object)":{
			"methodBody":"{\n    if (object == this)\n        return true;\n    if (!(object instanceof Cursor))\n        return false;\n    Cursor cursor = (Cursor) object;\n    return device == cursor.device && handle == cursor.handle;\n}",
			"comments":"/**\n* Compares the argument to the receiver, and returns true\n* if they represent the <em>same</em> object using a class\n* specific comparison.\n*\n* @param object the object to compare with this object\n* @return <code>true</code> if the object is the same as this object and <code>false</code> otherwise\n*\n* @see #hashCode\n*/\n",
			"methodName":"public boolean equals(Object object)"
		}
	},
	"ClassORInterfaceName":[
		"Cursor"
	]
}
