{
	"variables":[
		"folder",
		"items",
		"tabW",
		"gc",
		"i",
		"pt",
		"controlW",
		"controlH",
		"i",
		"control",
		"size",
		"minWidth",
		"minHeight",
		"folder",
		"control",
		"composite",
		"folder",
		"folder",
		"i",
		"items",
		"i",
		"folder",
		"tabW",
		"Math",
		"tabW",
		"items",
		"i",
		"gc",
		"tabW",
		"items",
		"i",
		"gc",
		"i",
		"folder",
		"gc",
		"tabW",
		"folder",
		"tabW",
		"CTabFolder",
		"folder",
		"tabW",
		"CTabFolder",
		"folder",
		"tabW",
		"CTabFolder",
		"folder",
		"folder",
		"SWT",
		"folder",
		"flushCache",
		"tabW",
		"pt",
		"folder",
		"folder",
		"tabW",
		"folder",
		"folder",
		"i",
		"items",
		"i",
		"items",
		"i",
		"control",
		"control",
		"control",
		"wHint",
		"hHint",
		"flushCache",
		"controlW",
		"Math",
		"controlW",
		"size",
		"controlH",
		"Math",
		"controlH",
		"size",
		"Math",
		"tabW",
		"controlW",
		"folder",
		"controlH",
		"minWidth",
		"minWidth",
		"CTabFolder",
		"minHeight",
		"minHeight",
		"CTabFolder",
		"wHint",
		"SWT",
		"minWidth",
		"wHint",
		"hHint",
		"SWT",
		"minHeight",
		"hHint",
		"minWidth",
		"minHeight",
		"composite",
		"folder",
		"folder",
		"folder",
		"control",
		"control",
		"control",
		"folder",
		"items",
		"length",
		"single",
		"selectedIndex",
		"showMax",
		"BUTTON_SIZE",
		"showMin",
		"BUTTON_SIZE",
		"single",
		"BUTTON_SIZE",
		"topRight",
		"topRight",
		"DEFAULT",
		"tabHeight",
		"x",
		"single",
		"simple",
		"curveWidth",
		"curveIndent",
		"length",
		"x",
		"y",
		"minimized",
		"DEFAULT_WIDTH",
		"DEFAULT_HEIGHT",
		"DEFAULT",
		"DEFAULT",
		"selectedIndex",
		"items",
		"selectedIndex",
		"composite",
		"wHint",
		"hHint",
		"flushCache",
		"control",
		"composite",
		"flushCache"
	],
	"extendORImplementFiles":[
		"Layout"
	],
	"package":[
		"org.eclipse.swt.custom"
	],
	"import":[
		"org.eclipse.swt",
		"org.eclipse.swt.graphics",
		"org.eclipse.swt.widgets"
	],
	"methods":[
		"computeSize",
		"flushCache",
		"layout",
		"max",
		"preferredWidth",
		"preferredWidth",
		"dispose",
		"computeSize",
		"getControl",
		"isDisposed",
		"computeSize",
		"max",
		"max",
		"max",
		"getControl",
		"isDisposed",
		"setBounds",
		"getClientArea",
		"GC",
		"Point"
	],
	"methodsBody":{
		"protected boolean flushCache(Control control)":{
			"methodBody":"{\n    return true;\n}",
			"comments":"",
			"methodName":"protected boolean flushCache(Control control)"
		},
		"protected Point computeSize(Composite composite, int wHint, int hHint, boolean flushCache)":{
			"methodBody":"{\n    CTabFolder folder = (CTabFolder) composite;\n    CTabItem[] items = folder.items;\n    \n    int tabW = 0;\n    GC gc = new GC(folder);\n    for (int i = 0; i < items.length; i++) {\n        if (folder.single) {\n            tabW = Math.max(tabW, items[i].preferredWidth(gc, true, false));\n        } else {\n            tabW += items[i].preferredWidth(gc, i == folder.selectedIndex, false);\n        }\n    }\n    gc.dispose();\n    tabW += 3;\n    if (folder.showMax)\n        tabW += CTabFolder.BUTTON_SIZE;\n    if (folder.showMin)\n        tabW += CTabFolder.BUTTON_SIZE;\n    \n    if (folder.single)\n        tabW += 3 * CTabFolder.BUTTON_SIZE / 2;\n    if (folder.topRight != null) {\n        Point pt = folder.topRight.computeSize(SWT.DEFAULT, folder.tabHeight, flushCache);\n        tabW += 3 + pt.x;\n    }\n    if (!folder.single && !folder.simple)\n        tabW += folder.curveWidth - 2 * folder.curveIndent;\n    int controlW = 0;\n    int controlH = 0;\n    \n    for (int i = 0; i < items.length; i++) {\n        Control control = items[i].getControl();\n        if (control != null && !control.isDisposed()) {\n            Point size = control.computeSize(wHint, hHint, flushCache);\n            controlW = Math.max(controlW, size.x);\n            controlH = Math.max(controlH, size.y);\n        }\n    }\n    int minWidth = Math.max(tabW, controlW);\n    int minHeight = (folder.minimized) ? 0 : controlH;\n    if (minWidth == 0)\n        minWidth = CTabFolder.DEFAULT_WIDTH;\n    if (minHeight == 0)\n        minHeight = CTabFolder.DEFAULT_HEIGHT;\n    if (wHint != SWT.DEFAULT)\n        minWidth = wHint;\n    if (hHint != SWT.DEFAULT)\n        minHeight = hHint;\n    return new Point(minWidth, minHeight);\n}",
			"comments":"// preferred width of tab area to show all tabs\n//chevron\n// preferred size of controls in tab items\n",
			"methodName":"protected Point computeSize(Composite composite, int wHint, int hHint, boolean flushCache)"
		},
		"protected void layout(Composite composite, boolean flushCache)":{
			"methodBody":"{\n    CTabFolder folder = (CTabFolder) composite;\n    \n    if (folder.selectedIndex != -1) {\n        Control control = folder.items[folder.selectedIndex].getControl();\n        if (control != null && !control.isDisposed()) {\n            control.setBounds(folder.getClientArea());\n        }\n    }\n}",
			"comments":"// resize content\n",
			"methodName":"protected void layout(Composite composite, boolean flushCache)"
		}
	},
	"ClassORInterfaceName":[
		"CTabFolderLayout"
	]
}
