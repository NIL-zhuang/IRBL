{
	"variables":[
		"object",
		"method",
		"signature",
		"argCount",
		"address",
		"errorResult",
		"isStatic",
		"isArrayBased",
		"PTR_SIZEOF",
		"PTR_SIGNATURE",
		"SIGNATURE_0",
		"SIGNATURE_1",
		"SIGNATURE_2",
		"SIGNATURE_3",
		"SIGNATURE_4",
		"SIGNATURE_N",
		"signature",
		"i",
		"Library",
		"PTR_SIZEOF",
		"PTR_SIGNATURE",
		"PTR_SIGNATURE",
		"object",
		"method",
		"argCount",
		"object",
		"method",
		"argCount",
		"isArrayBased",
		"object",
		"method",
		"argCount",
		"object",
		"isArrayBased",
		"errorResult",
		"isArrayBased",
		"signature",
		"SIGNATURE_N",
		"argCount",
		"signature",
		"SIGNATURE_0",
		"signature",
		"SIGNATURE_1",
		"signature",
		"SIGNATURE_2",
		"signature",
		"SIGNATURE_3",
		"signature",
		"SIGNATURE_4",
		"signature",
		"argCount",
		"address",
		"object",
		"method",
		"signature",
		"argCount",
		"isStatic",
		"isArrayBased",
		"errorResult",
		"object",
		"object",
		"method",
		"signature",
		"address",
		"address",
		"i",
		"argCount",
		"i",
		"signature",
		"PTR_SIGNATURE",
		"signature",
		"PTR_SIGNATURE",
		"signature",
		"ignore",
		"object",
		"method",
		"argCount",
		"isStatic",
		"isArrayBased",
		"errorResult",
		"object",
		"method",
		"argCount",
		"object",
		"method",
		"argCount",
		"isArrayBased",
		"object",
		"method",
		"argCount",
		"isArrayBased",
		"errorResult",
		"callback",
		"object",
		"method",
		"signature",
		"argCount",
		"isStatic",
		"isArrayBased",
		"errorResult",
		"argCount",
		"enable",
		"ignore",
		"callback"
	],
	"extendORImplementFiles":[],
	"package":[
		"org.eclipse.swt.internal"
	],
	"import":[],
	"methods":[
		"PTR_sizeof",
		"bind",
		"dispose",
		"getAddress",
		"getPlatform",
		"getEntryCount",
		"getSignature",
		"setEnabled",
		"getEnabled",
		"ignoreCallbacks",
		"reset",
		"unbind",
		"loadLibrary",
		"PTR_sizeof",
		"getSignature",
		"getSignature",
		"getSignature",
		"getSignature",
		"getSignature",
		"getSignature",
		"bind",
		"unbind",
		"setEnabled"
	],
	"methodsBody":{
		"public int getAddress()":{
			"methodBody":"{\n    return address;\n}",
			"comments":"/**\n* Returns the address of a block of machine code which will\n* invoke the callback represented by the receiver.\n*\n* @return the callback address\n*/\n/*long*/\n",
			"methodName":"public int getAddress()"
		},
		"static final native int PTR_sizeof()":{
			"methodBody":"",
			"comments":"",
			"methodName":"static final native int PTR_sizeof()"
		},
		"public void dispose()":{
			"methodBody":"{\n    if (object == null)\n        return;\n    unbind(this);\n    object = method = signature = null;\n    address = 0;\n}",
			"comments":"/**\n* Releases the native level resources associated with the callback,\n* and removes all references between the callback and\n* other objects. This helps to prevent (bad) application code\n* from accidentally holding onto extraneous garbage.\n*/\n",
			"methodName":"public void dispose()"
		},
		"public static final native synchronized void reset()":{
			"methodBody":"",
			"comments":"/**\n* Immediately wipes out all native level state associated\n* with <em>all</em> callbacks.\n* <p>\n* <b>WARNING:</b> This operation is <em>extremely</em> dangerous,\n* and should never be performed by application code.\n* </p>\n*/\n",
			"methodName":"public static final native synchronized void reset()"
		},
		"public static final native synchronized boolean getEnabled()":{
			"methodBody":"",
			"comments":"/**\n* Returns whether or not callbacks which are triggered at the\n* native level should cause the messages described by the matching\n* <code>Callback</code> objects to be invoked. This method is used\n* to safely shut down SWT when it is run within environments\n* which can generate spurious events.\n* <p>\n* Note: This should not be called by application code.\n* </p>\n*\n* @return true if callbacks should not be invoked\n*/\n",
			"methodName":"public static final native synchronized boolean getEnabled()"
		},
		"static String getSignature(int argCount)":{
			"methodBody":"{\n    \n    String signature = \"(\";\n    for (int i = 0; i < argCount; i++) signature += PTR_SIGNATURE;\n    \n    signature += \")\" + PTR_SIGNATURE;\n    return signature;\n}",
			"comments":"//$NON-NLS-1$\n//$NON-NLS-1$\n",
			"methodName":"static String getSignature(int argCount)"
		},
		"public static native String getPlatform()":{
			"methodBody":"",
			"comments":"/**\n* Returns the SWT platform name.\n*\n* @return the platform name of the currently running SWT\n*/\n",
			"methodName":"public static native String getPlatform()"
		},
		"static native synchronized int bind(Callback callback, Object object, String method, String signature, int argCount, boolean isStatic, boolean isArrayBased, int errorResult)":{
			"methodBody":"",
			"comments":"/**\n* Allocates the native level resources associated with the\n* callback. This method is only invoked from within the\n* constructor for the argument.\n*\n* @param callback the callback to bind\n* @param object the callback's object\n* @param method the callback's method\n* @param signature the callback's method signature\n* @param argCount the callback's method argument count\n* @param isStatic whether the callback's method is static\n* @param isArrayBased whether the callback's method is array based\n* @param errorResult the callback's error result\n*/\n/*long*/\n/*long*/\n",
			"methodName":"static native synchronized int bind(Callback callback, Object object, String method, String signature, int argCount, boolean isStatic, boolean isArrayBased, int errorResult)"
		},
		"public static final native synchronized void setEnabled(boolean enable)":{
			"methodBody":"",
			"comments":"/**\n* Indicates whether or not callbacks which are triggered at the\n* native level should cause the messages described by the matching\n* <code>Callback</code> objects to be invoked. This method is used\n* to safely shut down SWT when it is run within environments\n* which can generate spurious events.\n* <p>\n* Note: This should not be called by application code.\n* </p>\n*\n* @param enable true if callbacks should be invoked\n*/\n",
			"methodName":"public static final native synchronized void setEnabled(boolean enable)"
		},
		"static final void ignoreCallbacks(boolean ignore)":{
			"methodBody":"{\n    setEnabled(!ignore);\n}",
			"comments":"/**\n* This might be called directly from native code in environments\n* which can generate spurious events. Check before removing it.\n*\n* @deprecated\n*\n* @param ignore true if callbacks should not be invoked\n*/\n",
			"methodName":"static final void ignoreCallbacks(boolean ignore)"
		},
		"public static native int getEntryCount()":{
			"methodBody":"",
			"comments":"/**\n* Returns the number of times the system has been recursively entered\n* through a callback.\n* <p>\n* Note: This should not be called by application code.\n* </p>\n*\n* @return the entry count\n*\n* @since 2.1\n*/\n",
			"methodName":"public static native int getEntryCount()"
		},
		"static final native synchronized void unbind(Callback callback)":{
			"methodBody":"",
			"comments":"/**\n* Releases the native level resources associated with the callback.\n*\n* @see #dispose\n*/\n",
			"methodName":"static final native synchronized void unbind(Callback callback)"
		}
	},
	"ClassORInterfaceName":[
		"Callback"
	]
}
