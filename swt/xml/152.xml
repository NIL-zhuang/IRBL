<root type='CompilationUnit'><packageDeclaration type='PackageDeclaration'><name type='Name' identifier='events'><qualifier type='Name' identifier='swt'><qualifier type='Name' identifier='eclipse'><qualifier type='Name' identifier='org'></qualifier></qualifier></qualifier></name></packageDeclaration><comment type='JavadocComment' content=' Copyright c 2000 2004 IBM Corporation and others All rights reserved This program and the accompanying materials are made available under the terms of the Eclipse Public License v1 0 which accompanies this distribution and is available at http www eclipse org legal epl v10 html Contributors IBM Corporation initial API and implementation '></comment><imports><import type='ImportDeclaration' isAsterisk='true' isStatic='false'><name type='Name' identifier='widgets'><qualifier type='Name' identifier='swt'><qualifier type='Name' identifier='eclipse'><qualifier type='Name' identifier='org'></qualifier></qualifier></qualifier></name></import><import type='ImportDeclaration' isAsterisk='false' isStatic='false'><name type='Name' identifier='SWTEventObject'><qualifier type='Name' identifier='internal'><qualifier type='Name' identifier='swt'><qualifier type='Name' identifier='eclipse'><qualifier type='Name' identifier='org'></qualifier></qualifier></qualifier></qualifier></name></import></imports><types><type type='ClassOrInterfaceDeclaration' isInterface='false'><name type='SimpleName' identifier='TypedEvent'></name><comment type='JavadocComment' content=' This is the super class for all typed event classes provided by SWT Typed events contain particular information which is applicable to the event occurance see org eclipse swt widgets Event '></comment><extendedTypes><extendedType type='ClassOrInterfaceType'><name type='SimpleName' identifier='SWTEventObject'></name></extendedType></extendedTypes><members><member type='FieldDeclaration'><comment type='JavadocComment' content=' the display where the event occurred since 2 0 '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='display'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Display'></name></type></variable></variables></member><member type='FieldDeclaration'><comment type='JavadocComment' content=' the widget that issued the event '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='widget'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Widget'></name></type></variable></variables></member><member type='FieldDeclaration'><comment type='JavadocComment' content=' the time that the event occurred NOTE This field is an unsigned integer and should be AND ed with 0xFFFFFFFFL so that it can be treated as a signed long '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='time'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></member><member type='FieldDeclaration'><comment type='JavadocComment' content=' a field for application use '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='data'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Object'></name></type></variable></variables></member><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='STATIC'></modifier><modifier type='Modifier' keyword='FINAL'></modifier></modifiers><variables><variable type='VariableDeclarator'><initializer type='LongLiteralExpr' value='3257285846578377524L'></initializer><name type='SimpleName' identifier='serialVersionUID'></name><type type='PrimitiveType' specificType='LONG'></type></variable></variables></member><member type='ConstructorDeclaration'><body type='BlockStmt'><statements><statement type='ExplicitConstructorInvocationStmt' isThis='false'><arguments><argument type='NameExpr'><name type='SimpleName' identifier='object'></name></argument></arguments></statement></statements></body><name type='SimpleName' identifier='TypedEvent'></name><comment type='JavadocComment' content=' Constructs a new instance of this class param object the object that fired the event '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='object'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Object'></name></type></parameter></parameters></member><member type='ConstructorDeclaration'><body type='BlockStmt'><statements><statement type='ExplicitConstructorInvocationStmt' isThis='false'><arguments><argument type='FieldAccessExpr'><name type='SimpleName' identifier='widget'></name><scope type='NameExpr'><name type='SimpleName' identifier='e'></name></scope></argument></arguments></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='display'></name><scope type='ThisExpr'></scope></target><value type='FieldAccessExpr'><name type='SimpleName' identifier='display'></name><scope type='NameExpr'><name type='SimpleName' identifier='e'></name></scope></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='widget'></name><scope type='ThisExpr'></scope></target><value type='FieldAccessExpr'><name type='SimpleName' identifier='widget'></name><scope type='NameExpr'><name type='SimpleName' identifier='e'></name></scope></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='time'></name><scope type='ThisExpr'></scope></target><value type='FieldAccessExpr'><name type='SimpleName' identifier='time'></name><scope type='NameExpr'><name type='SimpleName' identifier='e'></name></scope></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='data'></name><scope type='ThisExpr'></scope></target><value type='FieldAccessExpr'><name type='SimpleName' identifier='data'></name><scope type='NameExpr'><name type='SimpleName' identifier='e'></name></scope></value></expression></statement></statements></body><name type='SimpleName' identifier='TypedEvent'></name><comment type='JavadocComment' content=' Constructs a new instance of this class based on the information in the argument param e the low level event to initialize the receiver with '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='e'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Event'></name></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='getName'></name><scope type='MethodCallExpr'><name type='SimpleName' identifier='getClass'></name></scope></initializer><name type='SimpleName' identifier='string'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='lastIndexOf'></name><scope type='NameExpr'><name type='SimpleName' identifier='string'></name></scope><arguments><argument type='CharLiteralExpr' value=' '></argument></arguments></initializer><name type='SimpleName' identifier='index'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='index'></name></left><right type='UnaryExpr' operator='MINUS'><expression type='IntegerLiteralExpr' value='1'></expression></right></condition><thenStmt type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='string'></name></expression></thenStmt></statement><statement type='ReturnStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='substring'></name><scope type='NameExpr'><name type='SimpleName' identifier='string'></name></scope><arguments><argument type='BinaryExpr' operator='PLUS'><left type='NameExpr'><name type='SimpleName' identifier='index'></name></left><right type='IntegerLiteralExpr' value='1'></right></argument><argument type='MethodCallExpr'><name type='SimpleName' identifier='length'></name><scope type='NameExpr'><name type='SimpleName' identifier='string'></name></scope></argument></arguments></expression></statement></statements></body><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></type><name type='SimpleName' identifier='getName'></name><comment type='JavadocComment' content=' Returns the name of the event This is the name of the class without the package name return the name of the event '></comment></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='BinaryExpr' operator='PLUS'><left type='BinaryExpr' operator='PLUS'><left type='BinaryExpr' operator='PLUS'><left type='BinaryExpr' operator='PLUS'><left type='BinaryExpr' operator='PLUS'><left type='BinaryExpr' operator='PLUS'><left type='BinaryExpr' operator='PLUS'><left type='MethodCallExpr'><name type='SimpleName' identifier='getName'></name></left><right type='StringLiteralExpr' value=' '></right></left><right type='NameExpr'><name type='SimpleName' identifier='widget'></name></right></left><right type='StringLiteralExpr' value=' time '></right></left><right type='NameExpr'><name type='SimpleName' identifier='time'></name></right></left><right type='StringLiteralExpr' value=' data '></right></left><right type='NameExpr'><name type='SimpleName' identifier='data'></name></right></left><right type='StringLiteralExpr' value=' '></right></expression></statement></statements></body><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></type><name type='SimpleName' identifier='toString'></name><comment type='JavadocComment' content=' Returns a string containing a concise human readable description of the receiver return a string representation of the event '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member></members><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></type></types></root>
