<root type='CompilationUnit'><packageDeclaration type='PackageDeclaration'><name type='Name' identifier='image'><qualifier type='Name' identifier='internal'><qualifier type='Name' identifier='swt'><qualifier type='Name' identifier='eclipse'><qualifier type='Name' identifier='org'></qualifier></qualifier></qualifier></qualifier></name></packageDeclaration><comment type='JavadocComment' content=' Copyright c 2000 2004 IBM Corporation and others All rights reserved This program and the accompanying materials are made available under the terms of the Eclipse Public License v1 0 which accompanies this distribution and is available at http www eclipse org legal epl v10 html Contributors IBM Corporation initial API and implementation '></comment><imports><import type='ImportDeclaration' isAsterisk='true' isStatic='false'><name type='Name' identifier='swt'><qualifier type='Name' identifier='eclipse'><qualifier type='Name' identifier='org'></qualifier></qualifier></name></import></imports><types><type type='ClassOrInterfaceDeclaration' isInterface='false'><name type='SimpleName' identifier='JPEGFrameHeader'></name><extendedTypes><extendedType type='ClassOrInterfaceType'><name type='SimpleName' identifier='JPEGVariableSizeSegment'></name></extendedType></extendedTypes><members><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='maxVFactor'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='maxHFactor'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></member><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='componentIdentifiers'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></member><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='componentParameters'></name><type type='ArrayType' origin='TYPE'><componentType type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></componentType></type></variable></variables></member><member type='ConstructorDeclaration'><body type='BlockStmt'><statements><statement type='ExplicitConstructorInvocationStmt' isThis='false'><arguments><argument type='NameExpr'><name type='SimpleName' identifier='reference'></name></argument></arguments></statement></statements></body><name type='SimpleName' identifier='JPEGFrameHeader'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='reference'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='BYTE'></componentType></type></parameter></parameters></member><member type='ConstructorDeclaration'><body type='BlockStmt'><statements><statement type='ExplicitConstructorInvocationStmt' isThis='false'><arguments><argument type='NameExpr'><name type='SimpleName' identifier='byteStream'></name></argument></arguments></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='initializeComponentParameters'></name></expression></statement></statements></body><name type='SimpleName' identifier='JPEGFrameHeader'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='byteStream'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='LEDataInputStream'></name></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='BinaryExpr' operator='BINARY AND'><left type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='4'></index><name type='NameExpr'><name type='SimpleName' identifier='reference'></name></name></left><right type='IntegerLiteralExpr' value='0xFF'></right></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='getSamplePrecision'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='BinaryExpr' operator='BINARY OR'><left type='BinaryExpr' operator='LEFT SHIFT'><left type='EnclosedExpr'><inner type='BinaryExpr' operator='BINARY AND'><left type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='5'></index><name type='NameExpr'><name type='SimpleName' identifier='reference'></name></name></left><right type='IntegerLiteralExpr' value='0xFF'></right></inner></left><right type='IntegerLiteralExpr' value='8'></right></left><right type='EnclosedExpr'><inner type='BinaryExpr' operator='BINARY AND'><left type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='6'></index><name type='NameExpr'><name type='SimpleName' identifier='reference'></name></name></left><right type='IntegerLiteralExpr' value='0xFF'></right></inner></right></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='getNumberOfLines'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='BinaryExpr' operator='BINARY OR'><left type='BinaryExpr' operator='LEFT SHIFT'><left type='EnclosedExpr'><inner type='BinaryExpr' operator='BINARY AND'><left type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='7'></index><name type='NameExpr'><name type='SimpleName' identifier='reference'></name></name></left><right type='IntegerLiteralExpr' value='0xFF'></right></inner></left><right type='IntegerLiteralExpr' value='8'></right></left><right type='EnclosedExpr'><inner type='BinaryExpr' operator='BINARY AND'><left type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='8'></index><name type='NameExpr'><name type='SimpleName' identifier='reference'></name></name></left><right type='IntegerLiteralExpr' value='0xFF'></right></inner></right></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='getSamplesPerLine'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='BinaryExpr' operator='BINARY AND'><left type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='9'></index><name type='NameExpr'><name type='SimpleName' identifier='reference'></name></name></left><right type='IntegerLiteralExpr' value='0xFF'></right></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='getNumberOfImageComponents'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='4'></index><name type='NameExpr'><name type='SimpleName' identifier='reference'></name></name></target><value type='CastExpr'><expression type='EnclosedExpr'><inner type='BinaryExpr' operator='BINARY AND'><left type='NameExpr'><name type='SimpleName' identifier='precision'></name></left><right type='IntegerLiteralExpr' value='0xFF'></right></inner></expression><type type='PrimitiveType' specificType='BYTE'></type></value></expression></statement></statements></body><type type='VoidType'></type><name type='SimpleName' identifier='setSamplePrecision'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='precision'></name><type type='PrimitiveType' specificType='INT'></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='5'></index><name type='NameExpr'><name type='SimpleName' identifier='reference'></name></name></target><value type='CastExpr'><expression type='EnclosedExpr'><inner type='BinaryExpr' operator='SIGNED RIGHT SHIFT'><left type='EnclosedExpr'><inner type='BinaryExpr' operator='BINARY AND'><left type='NameExpr'><name type='SimpleName' identifier='anInteger'></name></left><right type='IntegerLiteralExpr' value='0xFF00'></right></inner></left><right type='IntegerLiteralExpr' value='8'></right></inner></expression><type type='PrimitiveType' specificType='BYTE'></type></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='6'></index><name type='NameExpr'><name type='SimpleName' identifier='reference'></name></name></target><value type='CastExpr'><expression type='EnclosedExpr'><inner type='BinaryExpr' operator='BINARY AND'><left type='NameExpr'><name type='SimpleName' identifier='anInteger'></name></left><right type='IntegerLiteralExpr' value='0xFF'></right></inner></expression><type type='PrimitiveType' specificType='BYTE'></type></value></expression></statement></statements></body><type type='VoidType'></type><name type='SimpleName' identifier='setNumberOfLines'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='anInteger'></name><type type='PrimitiveType' specificType='INT'></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='7'></index><name type='NameExpr'><name type='SimpleName' identifier='reference'></name></name></target><value type='CastExpr'><expression type='EnclosedExpr'><inner type='BinaryExpr' operator='SIGNED RIGHT SHIFT'><left type='EnclosedExpr'><inner type='BinaryExpr' operator='BINARY AND'><left type='NameExpr'><name type='SimpleName' identifier='samples'></name></left><right type='IntegerLiteralExpr' value='0xFF00'></right></inner></left><right type='IntegerLiteralExpr' value='8'></right></inner></expression><type type='PrimitiveType' specificType='BYTE'></type></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='8'></index><name type='NameExpr'><name type='SimpleName' identifier='reference'></name></name></target><value type='CastExpr'><expression type='EnclosedExpr'><inner type='BinaryExpr' operator='BINARY AND'><left type='NameExpr'><name type='SimpleName' identifier='samples'></name></left><right type='IntegerLiteralExpr' value='0xFF'></right></inner></expression><type type='PrimitiveType' specificType='BYTE'></type></value></expression></statement></statements></body><type type='VoidType'></type><name type='SimpleName' identifier='setSamplesPerLine'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='samples'></name><type type='PrimitiveType' specificType='INT'></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='9'></index><name type='NameExpr'><name type='SimpleName' identifier='reference'></name></name></target><value type='CastExpr'><expression type='EnclosedExpr'><inner type='BinaryExpr' operator='BINARY AND'><left type='NameExpr'><name type='SimpleName' identifier='anInteger'></name></left><right type='IntegerLiteralExpr' value='0xFF'></right></inner></expression><type type='PrimitiveType' specificType='BYTE'></type></value></expression></statement></statements></body><type type='VoidType'></type><name type='SimpleName' identifier='setNumberOfImageComponents'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='anInteger'></name><type type='PrimitiveType' specificType='INT'></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='maxHFactor'></name></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='getMaxHFactor'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='maxVFactor'></name></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='getMaxVFactor'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='maxHFactor'></name></target><value type='NameExpr'><name type='SimpleName' identifier='anInteger'></name></value></expression></statement></statements></body><type type='VoidType'></type><name type='SimpleName' identifier='setMaxHFactor'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='anInteger'></name><type type='PrimitiveType' specificType='INT'></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='maxVFactor'></name></target><value type='NameExpr'><name type='SimpleName' identifier='anInteger'></name></value></expression></statement></statements></body><type type='VoidType'></type><name type='SimpleName' identifier='setMaxVFactor'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='anInteger'></name><type type='PrimitiveType' specificType='INT'></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='getNumberOfImageComponents'></name></initializer><name type='SimpleName' identifier='nf'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='componentIdentifiers'></name></target><value type='ArrayCreationExpr'><elementType type='PrimitiveType' specificType='INT'></elementType><levels><level type='ArrayCreationLevel'><dimension type='NameExpr'><name type='SimpleName' identifier='nf'></name></dimension></level></levels></value></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayCreationExpr'><elementType type='PrimitiveType' specificType='INT'></elementType><levels><level type='ArrayCreationLevel'><dimension type='IntegerLiteralExpr' value='0'></dimension></level><level type='ArrayCreationLevel'></level></levels></initializer><name type='SimpleName' identifier='compSpecParams'></name><type type='ArrayType' origin='TYPE'><componentType type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></componentType></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='1'></initializer><name type='SimpleName' identifier='hmax'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='1'></initializer><name type='SimpleName' identifier='vmax'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ForStmt'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='BinaryExpr' operator='PLUS'><left type='BinaryExpr' operator='MULTIPLY'><left type='NameExpr'><name type='SimpleName' identifier='i'></name></left><right type='IntegerLiteralExpr' value='3'></right></left><right type='IntegerLiteralExpr' value='10'></right></initializer><name type='SimpleName' identifier='ofs'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='BinaryExpr' operator='BINARY AND'><left type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='ofs'></name></index><name type='NameExpr'><name type='SimpleName' identifier='reference'></name></name></left><right type='IntegerLiteralExpr' value='0xFF'></right></initializer><name type='SimpleName' identifier='ci'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='i'></name></index><name type='NameExpr'><name type='SimpleName' identifier='componentIdentifiers'></name></name></target><value type='NameExpr'><name type='SimpleName' identifier='ci'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='BinaryExpr' operator='DIVIDE'><left type='EnclosedExpr'><inner type='BinaryExpr' operator='BINARY AND'><left type='ArrayAccessExpr'><index type='BinaryExpr' operator='PLUS'><left type='NameExpr'><name type='SimpleName' identifier='ofs'></name></left><right type='IntegerLiteralExpr' value='1'></right></index><name type='NameExpr'><name type='SimpleName' identifier='reference'></name></name></left><right type='IntegerLiteralExpr' value='0xFF'></right></inner></left><right type='IntegerLiteralExpr' value='16'></right></initializer><name type='SimpleName' identifier='hi'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='BinaryExpr' operator='REMAINDER'><left type='EnclosedExpr'><inner type='BinaryExpr' operator='BINARY AND'><left type='ArrayAccessExpr'><index type='BinaryExpr' operator='PLUS'><left type='NameExpr'><name type='SimpleName' identifier='ofs'></name></left><right type='IntegerLiteralExpr' value='1'></right></index><name type='NameExpr'><name type='SimpleName' identifier='reference'></name></name></left><right type='IntegerLiteralExpr' value='0xFF'></right></inner></left><right type='IntegerLiteralExpr' value='16'></right></initializer><name type='SimpleName' identifier='vi'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='BinaryExpr' operator='BINARY AND'><left type='ArrayAccessExpr'><index type='BinaryExpr' operator='PLUS'><left type='NameExpr'><name type='SimpleName' identifier='ofs'></name></left><right type='IntegerLiteralExpr' value='2'></right></index><name type='NameExpr'><name type='SimpleName' identifier='reference'></name></name></left><right type='IntegerLiteralExpr' value='0xFF'></right></initializer><name type='SimpleName' identifier='tqi'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='GREATER'><left type='NameExpr'><name type='SimpleName' identifier='hi'></name></left><right type='NameExpr'><name type='SimpleName' identifier='hmax'></name></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='hmax'></name></target><value type='NameExpr'><name type='SimpleName' identifier='hi'></name></value></expression></statement></statements></thenStmt></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='GREATER'><left type='NameExpr'><name type='SimpleName' identifier='vi'></name></left><right type='NameExpr'><name type='SimpleName' identifier='vmax'></name></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='vmax'></name></target><value type='NameExpr'><name type='SimpleName' identifier='vi'></name></value></expression></statement></statements></thenStmt></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayCreationExpr'><elementType type='PrimitiveType' specificType='INT'></elementType><levels><level type='ArrayCreationLevel'><dimension type='IntegerLiteralExpr' value='5'></dimension></level></levels></initializer><name type='SimpleName' identifier='compParam'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='0'></index><name type='NameExpr'><name type='SimpleName' identifier='compParam'></name></name></target><value type='NameExpr'><name type='SimpleName' identifier='tqi'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='1'></index><name type='NameExpr'><name type='SimpleName' identifier='compParam'></name></name></target><value type='NameExpr'><name type='SimpleName' identifier='hi'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='2'></index><name type='NameExpr'><name type='SimpleName' identifier='compParam'></name></name></target><value type='NameExpr'><name type='SimpleName' identifier='vi'></name></value></expression></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='LESS EQUALS'><left type='FieldAccessExpr'><name type='SimpleName' identifier='length'></name><scope type='NameExpr'><name type='SimpleName' identifier='compSpecParams'></name></scope></left><right type='NameExpr'><name type='SimpleName' identifier='ci'></name></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayCreationExpr'><elementType type='PrimitiveType' specificType='INT'></elementType><levels><level type='ArrayCreationLevel'><dimension type='BinaryExpr' operator='PLUS'><left type='NameExpr'><name type='SimpleName' identifier='ci'></name></left><right type='IntegerLiteralExpr' value='1'></right></dimension></level><level type='ArrayCreationLevel'></level></levels></initializer><name type='SimpleName' identifier='newParams'></name><type type='ArrayType' origin='TYPE'><componentType type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></componentType></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='arraycopy'></name><scope type='NameExpr'><name type='SimpleName' identifier='System'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='compSpecParams'></name></argument><argument type='IntegerLiteralExpr' value='0'></argument><argument type='NameExpr'><name type='SimpleName' identifier='newParams'></name></argument><argument type='IntegerLiteralExpr' value='0'></argument><argument type='FieldAccessExpr'><name type='SimpleName' identifier='length'></name><scope type='NameExpr'><name type='SimpleName' identifier='compSpecParams'></name></scope></argument></arguments></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='compSpecParams'></name></target><value type='NameExpr'><name type='SimpleName' identifier='newParams'></name></value></expression></statement></statements></thenStmt></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='ci'></name></index><name type='NameExpr'><name type='SimpleName' identifier='compSpecParams'></name></name></target><value type='NameExpr'><name type='SimpleName' identifier='compParam'></name></value></expression></statement></statements></body><compare type='BinaryExpr' operator='LESS'><left type='NameExpr'><name type='SimpleName' identifier='i'></name></left><right type='NameExpr'><name type='SimpleName' identifier='nf'></name></right></compare><initialization><initializatio type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='i'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></initializatio></initialization><update><updat type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='i'></name></expression></updat></update></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='getSamplesPerLine'></name></initializer><name type='SimpleName' identifier='x'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='getNumberOfLines'></name></initializer><name type='SimpleName' identifier='y'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayCreationExpr'><elementType type='PrimitiveType' specificType='INT'></elementType><initializer type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='16'></value><value type='IntegerLiteralExpr' value='24'></value><value type='IntegerLiteralExpr' value='32'></value></values></initializer><levels><level type='ArrayCreationLevel'></level></levels></initializer><name type='SimpleName' identifier='multiples'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></expression></statement><statement type='ForStmt'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayAccessExpr'><index type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='i'></name></index><name type='NameExpr'><name type='SimpleName' identifier='componentIdentifiers'></name></name></index><name type='NameExpr'><name type='SimpleName' identifier='compSpecParams'></name></name></initializer><name type='SimpleName' identifier='compParam'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='1'></index><name type='NameExpr'><name type='SimpleName' identifier='compParam'></name></name></initializer><name type='SimpleName' identifier='hi'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='2'></index><name type='NameExpr'><name type='SimpleName' identifier='compParam'></name></name></initializer><name type='SimpleName' identifier='vi'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='BinaryExpr' operator='DIVIDE'><left type='EnclosedExpr'><inner type='BinaryExpr' operator='MINUS'><left type='BinaryExpr' operator='PLUS'><left type='BinaryExpr' operator='MULTIPLY'><left type='NameExpr'><name type='SimpleName' identifier='x'></name></left><right type='NameExpr'><name type='SimpleName' identifier='hi'></name></right></left><right type='NameExpr'><name type='SimpleName' identifier='hmax'></name></right></left><right type='IntegerLiteralExpr' value='1'></right></inner></left><right type='NameExpr'><name type='SimpleName' identifier='hmax'></name></right></initializer><name type='SimpleName' identifier='compWidth'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='BinaryExpr' operator='DIVIDE'><left type='EnclosedExpr'><inner type='BinaryExpr' operator='MINUS'><left type='BinaryExpr' operator='PLUS'><left type='BinaryExpr' operator='MULTIPLY'><left type='NameExpr'><name type='SimpleName' identifier='y'></name></left><right type='NameExpr'><name type='SimpleName' identifier='vi'></name></right></left><right type='NameExpr'><name type='SimpleName' identifier='vmax'></name></right></left><right type='IntegerLiteralExpr' value='1'></right></inner></left><right type='NameExpr'><name type='SimpleName' identifier='vmax'></name></right></initializer><name type='SimpleName' identifier='compHeight'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='roundUpToMultiple'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='compWidth'></name></argument><argument type='ArrayAccessExpr'><index type='BinaryExpr' operator='MINUS'><left type='NameExpr'><name type='SimpleName' identifier='hi'></name></left><right type='IntegerLiteralExpr' value='1'></right></index><name type='NameExpr'><name type='SimpleName' identifier='multiples'></name></name></argument></arguments></initializer><name type='SimpleName' identifier='dsWidth'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='roundUpToMultiple'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='compHeight'></name></argument><argument type='ArrayAccessExpr'><index type='BinaryExpr' operator='MINUS'><left type='NameExpr'><name type='SimpleName' identifier='vi'></name></left><right type='IntegerLiteralExpr' value='1'></right></index><name type='NameExpr'><name type='SimpleName' identifier='multiples'></name></name></argument></arguments></initializer><name type='SimpleName' identifier='dsHeight'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='3'></index><name type='NameExpr'><name type='SimpleName' identifier='compParam'></name></name></target><value type='NameExpr'><name type='SimpleName' identifier='dsWidth'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='4'></index><name type='NameExpr'><name type='SimpleName' identifier='compParam'></name></name></target><value type='NameExpr'><name type='SimpleName' identifier='dsHeight'></name></value></expression></statement></statements></body><compare type='BinaryExpr' operator='LESS'><left type='NameExpr'><name type='SimpleName' identifier='i'></name></left><right type='NameExpr'><name type='SimpleName' identifier='nf'></name></right></compare><initialization><initializatio type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='i'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></initializatio></initialization><update><updat type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='i'></name></expression></updat></update></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='setMaxHFactor'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='hmax'></name></argument></arguments></expression></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='setMaxVFactor'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='vmax'></name></argument></arguments></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='componentParameters'></name></target><value type='NameExpr'><name type='SimpleName' identifier='compSpecParams'></name></value></expression></statement></statements></body><type type='VoidType'></type><name type='SimpleName' identifier='initializeComponentParameters'></name><comment type='BlockComment' content=' Used when decoding '></comment></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='getNumberOfImageComponents'></name></initializer><name type='SimpleName' identifier='nf'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='OR'><left type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='nf'></name></left><right type='IntegerLiteralExpr' value='0'></right></left><right type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='nf'></name></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='length'></name><scope type='NameExpr'><name type='SimpleName' identifier='componentParameters'></name></scope></right></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='error'></name><scope type='NameExpr'><name type='SimpleName' identifier='SWT'></name></scope><arguments><argument type='FieldAccessExpr'><name type='SimpleName' identifier='ERROR INVALID IMAGE'></name><scope type='NameExpr'><name type='SimpleName' identifier='SWT'></name></scope></argument></arguments></expression></statement></statements></thenStmt></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='hmax'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='vmax'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='NameExpr'><name type='SimpleName' identifier='componentParameters'></name></initializer><name type='SimpleName' identifier='compSpecParams'></name><type type='ArrayType' origin='TYPE'><componentType type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></componentType></type></variable></variables></expression></statement><statement type='ForStmt'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='BinaryExpr' operator='PLUS'><left type='BinaryExpr' operator='MULTIPLY'><left type='NameExpr'><name type='SimpleName' identifier='i'></name></left><right type='IntegerLiteralExpr' value='3'></right></left><right type='IntegerLiteralExpr' value='10'></right></initializer><name type='SimpleName' identifier='ofs'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayAccessExpr'><index type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='i'></name></index><name type='NameExpr'><name type='SimpleName' identifier='componentIdentifiers'></name></name></index><name type='NameExpr'><name type='SimpleName' identifier='compSpecParams'></name></name></initializer><name type='SimpleName' identifier='compParam'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='1'></index><name type='NameExpr'><name type='SimpleName' identifier='compParam'></name></name></initializer><name type='SimpleName' identifier='hi'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='2'></index><name type='NameExpr'><name type='SimpleName' identifier='compParam'></name></name></initializer><name type='SimpleName' identifier='vi'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='GREATER'><left type='BinaryExpr' operator='MULTIPLY'><left type='NameExpr'><name type='SimpleName' identifier='hi'></name></left><right type='NameExpr'><name type='SimpleName' identifier='vi'></name></right></left><right type='IntegerLiteralExpr' value='4'></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='error'></name><scope type='NameExpr'><name type='SimpleName' identifier='SWT'></name></scope><arguments><argument type='FieldAccessExpr'><name type='SimpleName' identifier='ERROR INVALID IMAGE'></name><scope type='NameExpr'><name type='SimpleName' identifier='SWT'></name></scope></argument></arguments></expression></statement></statements></thenStmt></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='ofs'></name></index><name type='NameExpr'><name type='SimpleName' identifier='reference'></name></name></target><value type='CastExpr'><expression type='EnclosedExpr'><inner type='BinaryExpr' operator='PLUS'><left type='NameExpr'><name type='SimpleName' identifier='i'></name></left><right type='IntegerLiteralExpr' value='1'></right></inner></expression><type type='PrimitiveType' specificType='BYTE'></type></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='BinaryExpr' operator='PLUS'><left type='NameExpr'><name type='SimpleName' identifier='ofs'></name></left><right type='IntegerLiteralExpr' value='1'></right></index><name type='NameExpr'><name type='SimpleName' identifier='reference'></name></name></target><value type='CastExpr'><expression type='EnclosedExpr'><inner type='BinaryExpr' operator='PLUS'><left type='BinaryExpr' operator='MULTIPLY'><left type='NameExpr'><name type='SimpleName' identifier='hi'></name></left><right type='IntegerLiteralExpr' value='16'></right></left><right type='NameExpr'><name type='SimpleName' identifier='vi'></name></right></inner></expression><type type='PrimitiveType' specificType='BYTE'></type></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='BinaryExpr' operator='PLUS'><left type='NameExpr'><name type='SimpleName' identifier='ofs'></name></left><right type='IntegerLiteralExpr' value='2'></right></index><name type='NameExpr'><name type='SimpleName' identifier='reference'></name></name></target><value type='CastExpr'><expression type='EnclosedExpr'><inner type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='0'></index><name type='NameExpr'><name type='SimpleName' identifier='compParam'></name></name></inner></expression><type type='PrimitiveType' specificType='BYTE'></type></value></expression></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='GREATER'><left type='NameExpr'><name type='SimpleName' identifier='hi'></name></left><right type='NameExpr'><name type='SimpleName' identifier='hmax'></name></right></condition><thenStmt type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='hmax'></name></target><value type='NameExpr'><name type='SimpleName' identifier='hi'></name></value></expression></thenStmt></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='GREATER'><left type='NameExpr'><name type='SimpleName' identifier='vi'></name></left><right type='NameExpr'><name type='SimpleName' identifier='vmax'></name></right></condition><thenStmt type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='vmax'></name></target><value type='NameExpr'><name type='SimpleName' identifier='vi'></name></value></expression></thenStmt></statement></statements></body><compare type='BinaryExpr' operator='LESS'><left type='NameExpr'><name type='SimpleName' identifier='i'></name></left><right type='NameExpr'><name type='SimpleName' identifier='nf'></name></right></compare><initialization><initializatio type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='i'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></initializatio></initialization><update><updat type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='i'></name></expression></updat></update></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='getSamplesPerLine'></name></initializer><name type='SimpleName' identifier='x'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='getNumberOfLines'></name></initializer><name type='SimpleName' identifier='y'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayCreationExpr'><elementType type='PrimitiveType' specificType='INT'></elementType><initializer type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='16'></value><value type='IntegerLiteralExpr' value='24'></value><value type='IntegerLiteralExpr' value='32'></value></values></initializer><levels><level type='ArrayCreationLevel'></level></levels></initializer><name type='SimpleName' identifier='multiples'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></expression></statement><statement type='ForStmt'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayAccessExpr'><index type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='i'></name></index><name type='NameExpr'><name type='SimpleName' identifier='componentIdentifiers'></name></name></index><name type='NameExpr'><name type='SimpleName' identifier='compSpecParams'></name></name></initializer><name type='SimpleName' identifier='compParam'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='1'></index><name type='NameExpr'><name type='SimpleName' identifier='compParam'></name></name></initializer><name type='SimpleName' identifier='hi'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='2'></index><name type='NameExpr'><name type='SimpleName' identifier='compParam'></name></name></initializer><name type='SimpleName' identifier='vi'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='BinaryExpr' operator='DIVIDE'><left type='EnclosedExpr'><inner type='BinaryExpr' operator='MINUS'><left type='BinaryExpr' operator='PLUS'><left type='BinaryExpr' operator='MULTIPLY'><left type='NameExpr'><name type='SimpleName' identifier='x'></name></left><right type='NameExpr'><name type='SimpleName' identifier='hi'></name></right></left><right type='NameExpr'><name type='SimpleName' identifier='hmax'></name></right></left><right type='IntegerLiteralExpr' value='1'></right></inner></left><right type='NameExpr'><name type='SimpleName' identifier='hmax'></name></right></initializer><name type='SimpleName' identifier='compWidth'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='BinaryExpr' operator='DIVIDE'><left type='EnclosedExpr'><inner type='BinaryExpr' operator='MINUS'><left type='BinaryExpr' operator='PLUS'><left type='BinaryExpr' operator='MULTIPLY'><left type='NameExpr'><name type='SimpleName' identifier='y'></name></left><right type='NameExpr'><name type='SimpleName' identifier='vi'></name></right></left><right type='NameExpr'><name type='SimpleName' identifier='vmax'></name></right></left><right type='IntegerLiteralExpr' value='1'></right></inner></left><right type='NameExpr'><name type='SimpleName' identifier='vmax'></name></right></initializer><name type='SimpleName' identifier='compHeight'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='roundUpToMultiple'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='compWidth'></name></argument><argument type='ArrayAccessExpr'><index type='BinaryExpr' operator='MINUS'><left type='NameExpr'><name type='SimpleName' identifier='hi'></name></left><right type='IntegerLiteralExpr' value='1'></right></index><name type='NameExpr'><name type='SimpleName' identifier='multiples'></name></name></argument></arguments></initializer><name type='SimpleName' identifier='dsWidth'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='roundUpToMultiple'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='compHeight'></name></argument><argument type='ArrayAccessExpr'><index type='BinaryExpr' operator='MINUS'><left type='NameExpr'><name type='SimpleName' identifier='vi'></name></left><right type='IntegerLiteralExpr' value='1'></right></index><name type='NameExpr'><name type='SimpleName' identifier='multiples'></name></name></argument></arguments></initializer><name type='SimpleName' identifier='dsHeight'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='3'></index><name type='NameExpr'><name type='SimpleName' identifier='compParam'></name></name></target><value type='NameExpr'><name type='SimpleName' identifier='dsWidth'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='4'></index><name type='NameExpr'><name type='SimpleName' identifier='compParam'></name></name></target><value type='NameExpr'><name type='SimpleName' identifier='dsHeight'></name></value></expression></statement></statements></body><compare type='BinaryExpr' operator='LESS'><left type='NameExpr'><name type='SimpleName' identifier='i'></name></left><right type='NameExpr'><name type='SimpleName' identifier='nf'></name></right></compare><initialization><initializatio type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='i'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></initializatio></initialization><update><updat type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='i'></name></expression></updat></update></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='setMaxHFactor'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='hmax'></name></argument></arguments></expression></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='setMaxVFactor'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='vmax'></name></argument></arguments></expression></statement></statements></body><type type='VoidType'></type><name type='SimpleName' identifier='initializeContents'></name><comment type='BlockComment' content=' Used when encoding '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='BinaryExpr' operator='MINUS'><left type='BinaryExpr' operator='PLUS'><left type='NameExpr'><name type='SimpleName' identifier='anInteger'></name></left><right type='NameExpr'><name type='SimpleName' identifier='mInteger'></name></right></left><right type='IntegerLiteralExpr' value='1'></right></initializer><name type='SimpleName' identifier='a'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ReturnStmt'><expression type='BinaryExpr' operator='MINUS'><left type='NameExpr'><name type='SimpleName' identifier='a'></name></left><right type='EnclosedExpr'><inner type='BinaryExpr' operator='REMAINDER'><left type='NameExpr'><name type='SimpleName' identifier='a'></name></left><right type='NameExpr'><name type='SimpleName' identifier='mInteger'></name></right></inner></right></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='roundUpToMultiple'></name><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='anInteger'></name><type type='PrimitiveType' specificType='INT'></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='mInteger'></name><type type='PrimitiveType' specificType='INT'></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='getSegmentMarker'></name></initializer><name type='SimpleName' identifier='marker'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ReturnStmt'><expression type='BinaryExpr' operator='OR'><left type='BinaryExpr' operator='OR'><left type='BinaryExpr' operator='OR'><left type='EnclosedExpr'><inner type='BinaryExpr' operator='AND'><left type='BinaryExpr' operator='GREATER EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='marker'></name></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='SOF0'></name><scope type='NameExpr'><name type='SimpleName' identifier='JPEGFileFormat'></name></scope></right></left><right type='BinaryExpr' operator='LESS EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='marker'></name></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='SOF3'></name><scope type='NameExpr'><name type='SimpleName' identifier='JPEGFileFormat'></name></scope></right></right></inner></left><right type='EnclosedExpr'><inner type='BinaryExpr' operator='AND'><left type='BinaryExpr' operator='GREATER EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='marker'></name></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='SOF5'></name><scope type='NameExpr'><name type='SimpleName' identifier='JPEGFileFormat'></name></scope></right></left><right type='BinaryExpr' operator='LESS EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='marker'></name></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='SOF7'></name><scope type='NameExpr'><name type='SimpleName' identifier='JPEGFileFormat'></name></scope></right></right></inner></right></left><right type='EnclosedExpr'><inner type='BinaryExpr' operator='AND'><left type='BinaryExpr' operator='GREATER EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='marker'></name></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='SOF9'></name><scope type='NameExpr'><name type='SimpleName' identifier='JPEGFileFormat'></name></scope></right></left><right type='BinaryExpr' operator='LESS EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='marker'></name></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='SOF11'></name><scope type='NameExpr'><name type='SimpleName' identifier='JPEGFileFormat'></name></scope></right></right></inner></right></left><right type='EnclosedExpr'><inner type='BinaryExpr' operator='AND'><left type='BinaryExpr' operator='GREATER EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='marker'></name></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='SOF13'></name><scope type='NameExpr'><name type='SimpleName' identifier='JPEGFileFormat'></name></scope></right></left><right type='BinaryExpr' operator='LESS EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='marker'></name></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='SOF15'></name><scope type='NameExpr'><name type='SimpleName' identifier='JPEGFileFormat'></name></scope></right></right></inner></right></expression></statement></statements></body><type type='PrimitiveType' specificType='BOOLEAN'></type><name type='SimpleName' identifier='verify'></name><comment type='BlockComment' content=' Verify the information contained in the receiver is correct Answer true if the header contains a valid marker Otherwise answer false Valid Start Of Frame markers are SOF 0 Baseline DCT Huffman coding SOF 1 Extended sequential DCT Huffman coding SOF 2 Progressive DCT Huffman coding SOF 3 Lossless sequential Huffman coding SOF 5 Differential sequential Huffman coding SOF 6 Differential progressive Huffman coding SOF 7 Differential lossless Huffman coding SOF 9 Extended sequential DCT arithmetic coding SOF 10 Progressive DCT arithmetic coding SOF 11 Lossless sequential arithmetic coding SOF 13 Differential sequential arithmetic coding SOF 14 Differential progressive arithmetic coding SOF 15 Differential lossless arithmetic coding '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='getSegmentMarker'></name></initializer><name type='SimpleName' identifier='marker'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ReturnStmt'><expression type='BinaryExpr' operator='OR'><left type='BinaryExpr' operator='OR'><left type='BinaryExpr' operator='OR'><left type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='marker'></name></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='SOF2'></name><scope type='NameExpr'><name type='SimpleName' identifier='JPEGFileFormat'></name></scope></right></left><right type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='marker'></name></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='SOF6'></name><scope type='NameExpr'><name type='SimpleName' identifier='JPEGFileFormat'></name></scope></right></right></left><right type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='marker'></name></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='SOF10'></name><scope type='NameExpr'><name type='SimpleName' identifier='JPEGFileFormat'></name></scope></right></right></left><right type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='marker'></name></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='SOF14'></name><scope type='NameExpr'><name type='SimpleName' identifier='JPEGFileFormat'></name></scope></right></right></expression></statement></statements></body><type type='PrimitiveType' specificType='BOOLEAN'></type><name type='SimpleName' identifier='isProgressive'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='BinaryExpr' operator='GREATER EQUALS'><left type='MethodCallExpr'><name type='SimpleName' identifier='getSegmentMarker'></name></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='SOF9'></name><scope type='NameExpr'><name type='SimpleName' identifier='JPEGFileFormat'></name></scope></right></expression></statement></statements></body><type type='PrimitiveType' specificType='BOOLEAN'></type><name type='SimpleName' identifier='isArithmeticCoding'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member></members><modifiers><modifier type='Modifier' keyword='FINAL'></modifier></modifiers></type></types></root>
