<root type='CompilationUnit'><packageDeclaration type='PackageDeclaration'><name type='Name' identifier='image'><qualifier type='Name' identifier='internal'><qualifier type='Name' identifier='swt'><qualifier type='Name' identifier='eclipse'><qualifier type='Name' identifier='org'></qualifier></qualifier></qualifier></qualifier></name></packageDeclaration><comment type='JavadocComment' content=' Copyright c 2000 2003 IBM Corporation and others All rights reserved This program and the accompanying materials are made available under the terms of the Eclipse Public License v1 0 which accompanies this distribution and is available at http www eclipse org legal epl v10 html Contributors IBM Corporation initial API and implementation '></comment><imports><import type='ImportDeclaration' isAsterisk='true' isStatic='false'><name type='Name' identifier='swt'><qualifier type='Name' identifier='eclipse'><qualifier type='Name' identifier='org'></qualifier></qualifier></name></import></imports><types><type type='ClassOrInterfaceDeclaration' isInterface='false'><name type='SimpleName' identifier='PngIdatChunk'></name><extendedTypes><extendedType type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngChunk'></name></extendedType></extendedTypes><members><member type='ConstructorDeclaration'><body type='BlockStmt'><statements><statement type='ExplicitConstructorInvocationStmt' isThis='false'><arguments><argument type='NameExpr'><name type='SimpleName' identifier='reference'></name></argument></arguments></statement></statements></body><name type='SimpleName' identifier='PngIdatChunk'></name><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='reference'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='BYTE'></componentType></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='IfStmt'><condition type='BinaryExpr' operator='OR'><left type='BinaryExpr' operator='OR'><left type='UnaryExpr' operator='LOGICAL COMPLEMENT'><expression type='FieldAccessExpr'><name type='SimpleName' identifier='readIHDR'></name><scope type='NameExpr'><name type='SimpleName' identifier='readState'></name></scope></expression></left><right type='EnclosedExpr'><inner type='BinaryExpr' operator='AND'><left type='MethodCallExpr'><name type='SimpleName' identifier='getMustHavePalette'></name><scope type='NameExpr'><name type='SimpleName' identifier='headerChunk'></name></scope></left><right type='UnaryExpr' operator='LOGICAL COMPLEMENT'><expression type='FieldAccessExpr'><name type='SimpleName' identifier='readPLTE'></name><scope type='NameExpr'><name type='SimpleName' identifier='readState'></name></scope></expression></right></inner></right></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='readIEND'></name><scope type='NameExpr'><name type='SimpleName' identifier='readState'></name></scope></right></condition><elseStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='readIDAT'></name><scope type='NameExpr'><name type='SimpleName' identifier='readState'></name></scope></target><value type='BooleanLiteralExpr' value='true'></value></expression></statement></statements></elseStmt><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='error'></name><scope type='NameExpr'><name type='SimpleName' identifier='SWT'></name></scope><arguments><argument type='FieldAccessExpr'><name type='SimpleName' identifier='ERROR INVALID IMAGE'></name><scope type='NameExpr'><name type='SimpleName' identifier='SWT'></name></scope></argument></arguments></expression></statement></statements></thenStmt></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='validate'></name><scope type='SuperExpr'></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='readState'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='headerChunk'></name></argument></arguments></expression></statement></statements></body><type type='VoidType'></type><name type='SimpleName' identifier='validate'></name><comment type='JavadocComment' content=' Answer whether the chunk is a valid IDAT chunk '></comment><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='readState'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngFileReadState'></name></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='headerChunk'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngIhdrChunk'></name></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='ArrayAccessExpr'><index type='BinaryExpr' operator='PLUS'><left type='NameExpr'><name type='SimpleName' identifier='DATA OFFSET'></name></left><right type='NameExpr'><name type='SimpleName' identifier='offset'></name></right></index><name type='NameExpr'><name type='SimpleName' identifier='reference'></name></name></expression></statement></statements></body><type type='PrimitiveType' specificType='BYTE'></type><name type='SimpleName' identifier='getDataByteAtOffset'></name><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='offset'></name><type type='PrimitiveType' specificType='INT'></type></parameter></parameters></member></members></type></types></root>
