<root type='CompilationUnit'><packageDeclaration type='PackageDeclaration'><name type='Name' identifier='dnd'><qualifier type='Name' identifier='swt'><qualifier type='Name' identifier='eclipse'><qualifier type='Name' identifier='org'></qualifier></qualifier></qualifier></name></packageDeclaration><comment type='JavadocComment' content=' Copyright c 2000 2005 IBM Corporation and others All rights reserved This program and the accompanying materials are made available under the terms of the Eclipse Public License v1 0 which accompanies this distribution and is available at http www eclipse org legal epl v10 html Contributors IBM Corporation initial API and implementation '></comment><imports><import type='ImportDeclaration' isAsterisk='true' isStatic='false'><name type='Name' identifier='win32'><qualifier type='Name' identifier='internal'><qualifier type='Name' identifier='swt'><qualifier type='Name' identifier='eclipse'><qualifier type='Name' identifier='org'></qualifier></qualifier></qualifier></qualifier></name></import></imports><types><type type='ClassOrInterfaceDeclaration' isInterface='false'><name type='SimpleName' identifier='Transfer'></name><comment type='JavadocComment' content=' code Transfer code provides a mechanism for converting between a java representation of data and a platform specific representation of data and vice versa It is used in data transfer operations such as drag and drop and clipboard copy paste p You should only need to become familiar with this class if you are implementing a Transfer subclass and you are unable to subclass the ByteArrayTransfer class p see ByteArrayTransfer '></comment><members><member type='MethodDeclaration'><type type='ArrayType' origin='TYPE'><componentType type='ClassOrInterfaceType'><name type='SimpleName' identifier='TransferData'></name></componentType></type><name type='SimpleName' identifier='getSupportedTypes'></name><comment type='JavadocComment' content=' Returns a list of the platform specific data types that can be converted using this transfer agent p Only the data type fields of the code TransferData code objects are filled in p return a list of the data types that can be converted using this transfer agent '></comment><modifiers><modifier type='Modifier' keyword='ABSTRACT'></modifier><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member><member type='MethodDeclaration'><type type='PrimitiveType' specificType='BOOLEAN'></type><name type='SimpleName' identifier='isSupportedType'></name><comment type='JavadocComment' content=' Returns true if the code TransferData code data type can be converted using this transfer agent or false otherwise including if transferData is code null code param transferData a platform specific description of a data type only the data type fields of the code TransferData code object need to be filled in return true if the transferData data type can be converted using this transfer agent '></comment><modifiers><modifier type='Modifier' keyword='ABSTRACT'></modifier><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='transferData'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='TransferData'></name></type></parameter></parameters></member><member type='MethodDeclaration'><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type><name type='SimpleName' identifier='getTypeIds'></name><comment type='JavadocComment' content=' Returns the platform specfic ids of the data types that can be converted using this transfer agent return the platform specfic ids of the data types that can be converted using this transfer agent '></comment><modifiers><modifier type='Modifier' keyword='ABSTRACT'></modifier><modifier type='Modifier' keyword='PROTECTED'></modifier></modifiers></member><member type='MethodDeclaration'><type type='ArrayType' origin='TYPE'><componentType type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></componentType></type><name type='SimpleName' identifier='getTypeNames'></name><comment type='JavadocComment' content=' Returns the platform specfic names of the data types that can be converted using this transfer agent return the platform specfic names of the data types that can be converted using this transfer agent '></comment><modifiers><modifier type='Modifier' keyword='ABSTRACT'></modifier><modifier type='Modifier' keyword='PROTECTED'></modifier></modifiers></member><member type='MethodDeclaration'><type type='VoidType'></type><name type='SimpleName' identifier='javaToNative'></name><comment type='JavadocComment' content=' Converts a java representation of data to a platform specific representation of the data p On a successful conversion the transferData result field will be set as follows ul li Windows COM S OK li Motif 1 li GTK 1 li Photon 1 ul p p If this transfer agent is unable to perform the conversion the transferData result field will be set to a failure value as follows ul li Windows COM DV E TYMED or COM E FAIL li Motif 0 li GTK 0 li Photon 0 ul p param object a java representation of the data to be converted the type of Object that is passed in is dependant on the code Transfer code subclass param transferData an empty TransferData object this object will be filled in on return with the platform specific representation of the data exception org eclipse swt SWTException ul li ERROR INVALID DATA if object does not contain data in a valid format or is code null code li ul '></comment><modifiers><modifier type='Modifier' keyword='ABSTRACT'></modifier><modifier type='Modifier' keyword='PROTECTED'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='object'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Object'></name></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='transferData'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='TransferData'></name></type></parameter></parameters></member><member type='MethodDeclaration'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Object'></name></type><name type='SimpleName' identifier='nativeToJava'></name><comment type='JavadocComment' content=' Converts a platform specific representation of data to a java representation param transferData the platform specific representation of the data to be converted return a java representation of the converted data if the conversion was successful otherwise null If transferData is code null code then code null code is returned The type of Object that is returned is dependant on the code Transfer code subclass '></comment><modifiers><modifier type='Modifier' keyword='ABSTRACT'></modifier><modifier type='Modifier' keyword='PROTECTED'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='transferData'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='TransferData'></name></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='TCHAR'></name></type><arguments><argument type='IntegerLiteralExpr' value='0'></argument><argument type='NameExpr'><name type='SimpleName' identifier='formatName'></name></argument><argument type='BooleanLiteralExpr' value='true'></argument></arguments></initializer><name type='SimpleName' identifier='chFormatName'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='TCHAR'></name></type></variable></variables></expression><comment type='LineComment' content=' If name already exists in registry return its assigned value'></comment></statement><statement type='ReturnStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='RegisterClipboardFormat'></name><scope type='NameExpr'><name type='SimpleName' identifier='OS'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='chFormatName'></name></argument></arguments></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='registerType'></name><comment type='JavadocComment' content=' Registers a name for a data type and returns the associated unique identifier p You may register the same type more than once the same unique identifier will be returned if the type has been previously registered p p Note On windows do b not b call this method with pre defined Clipboard Format types such as CF TEXT or CF BITMAP because the pre defined identifier will not be returned p param formatName the name of a data type return the unique identifier associated with this data type '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier><modifier type='Modifier' keyword='STATIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='formatName'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='BooleanLiteralExpr' value='true'></expression></statement></statements></body><type type='PrimitiveType' specificType='BOOLEAN'></type><name type='SimpleName' identifier='validate'></name><comment type='JavadocComment' content=' Test that the object is of the correct format for this Transfer class param object a java representation of the data to be converted return true if object is of the correct form for this transfer type since 3 1 '></comment><modifiers><modifier type='Modifier' keyword='PROTECTED'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='object'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Object'></name></type></parameter></parameters></member></members><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier><modifier type='Modifier' keyword='ABSTRACT'></modifier></modifiers></type></types></root>
