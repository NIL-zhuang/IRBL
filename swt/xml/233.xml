<root type='CompilationUnit'><packageDeclaration type='PackageDeclaration'><name type='Name' identifier='image'><qualifier type='Name' identifier='internal'><qualifier type='Name' identifier='swt'><qualifier type='Name' identifier='eclipse'><qualifier type='Name' identifier='org'></qualifier></qualifier></qualifier></qualifier></name></packageDeclaration><comment type='JavadocComment' content=' Copyright c 2000 2003 IBM Corporation and others All rights reserved This program and the accompanying materials are made available under the terms of the Eclipse Public License v1 0 which accompanies this distribution and is available at http www eclipse org legal epl v10 html Contributors IBM Corporation initial API and implementation '></comment><imports><import type='ImportDeclaration' isAsterisk='true' isStatic='false'><name type='Name' identifier='swt'><qualifier type='Name' identifier='eclipse'><qualifier type='Name' identifier='org'></qualifier></qualifier></name></import></imports><types><type type='ClassOrInterfaceDeclaration' isInterface='false'><name type='SimpleName' identifier='TIFFModifiedHuffmanCodec'></name><comment type='BlockComment' content=' Decoder for CCITT Group 3 1 Dimensional Modified Huffman run length encoding TIFF compression type 2 CCITT T 4 bi level encoding 1D TIFF compression type 3 option 1D '></comment><members><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='STATIC'></modifier><modifier type='Modifier' keyword='FINAL'></modifier></modifiers><variables><variable type='VariableDeclarator'><initializer type='ArrayInitializerExpr'><values><value type='ArrayInitializerExpr'><comment type='BlockComment' content=' 2 bits '></comment><values><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='2'></value><value type='IntegerLiteralExpr' value='3'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='3'></value><value type='IntegerLiteralExpr' value='2'></value></values></value></values></value><value type='ArrayInitializerExpr'><comment type='BlockComment' content=' 3 bits '></comment><values><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='2'></value><value type='IntegerLiteralExpr' value='1'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='3'></value><value type='IntegerLiteralExpr' value='4'></value></values></value></values></value><value type='ArrayInitializerExpr'><comment type='BlockComment' content=' 4 bits '></comment><values><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='2'></value><value type='IntegerLiteralExpr' value='6'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='3'></value><value type='IntegerLiteralExpr' value='5'></value></values></value></values></value><value type='ArrayInitializerExpr'><comment type='BlockComment' content=' 5 bits '></comment><values><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='3'></value><value type='IntegerLiteralExpr' value='7'></value></values></value></values></value><value type='ArrayInitializerExpr'><comment type='BlockComment' content=' 6 bits '></comment><values><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='4'></value><value type='IntegerLiteralExpr' value='9'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='8'></value></values></value></values></value><value type='ArrayInitializerExpr'><comment type='BlockComment' content=' 7 bits '></comment><values><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='4'></value><value type='IntegerLiteralExpr' value='10'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='11'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='12'></value></values></value></values></value><value type='ArrayInitializerExpr'><comment type='BlockComment' content=' 8 bits '></comment><values><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='4'></value><value type='IntegerLiteralExpr' value='13'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='14'></value></values></value></values></value><value type='ArrayInitializerExpr'><comment type='BlockComment' content=' 9 bits '></comment><values><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='24'></value><value type='IntegerLiteralExpr' value='15'></value></values></value></values></value><value type='ArrayInitializerExpr'><comment type='BlockComment' content=' 10 bits '></comment><values><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='18'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='15'></value><value type='IntegerLiteralExpr' value='64'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='23'></value><value type='IntegerLiteralExpr' value='16'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='24'></value><value type='IntegerLiteralExpr' value='17'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='55'></value><value type='IntegerLiteralExpr' value='0'></value></values></value></values></value><value type='ArrayInitializerExpr'><comment type='BlockComment' content=' 11 bits '></comment><values><value type='ArrayInitializerExpr'><comment type='BlockComment' content=' EOL '></comment><values><value type='IntegerLiteralExpr' value='0'></value><value type='UnaryExpr' operator='MINUS'><expression type='IntegerLiteralExpr' value='1'></expression></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='1792'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='23'></value><value type='IntegerLiteralExpr' value='24'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='24'></value><value type='IntegerLiteralExpr' value='25'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='40'></value><value type='IntegerLiteralExpr' value='23'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='55'></value><value type='IntegerLiteralExpr' value='22'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='103'></value><value type='IntegerLiteralExpr' value='19'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='104'></value><value type='IntegerLiteralExpr' value='20'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='108'></value><value type='IntegerLiteralExpr' value='21'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='12'></value><value type='IntegerLiteralExpr' value='1856'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='13'></value><value type='IntegerLiteralExpr' value='1920'></value></values></value></values></value><value type='ArrayInitializerExpr'><comment type='BlockComment' content=' 12 bits '></comment><values><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='18'></value><value type='IntegerLiteralExpr' value='1984'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='19'></value><value type='IntegerLiteralExpr' value='2048'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='20'></value><value type='IntegerLiteralExpr' value='2112'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='21'></value><value type='IntegerLiteralExpr' value='2176'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='22'></value><value type='IntegerLiteralExpr' value='2240'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='23'></value><value type='IntegerLiteralExpr' value='2304'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='28'></value><value type='IntegerLiteralExpr' value='2368'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='29'></value><value type='IntegerLiteralExpr' value='2432'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='30'></value><value type='IntegerLiteralExpr' value='2496'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='31'></value><value type='IntegerLiteralExpr' value='2560'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='36'></value><value type='IntegerLiteralExpr' value='52'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='39'></value><value type='IntegerLiteralExpr' value='55'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='40'></value><value type='IntegerLiteralExpr' value='56'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='43'></value><value type='IntegerLiteralExpr' value='59'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='44'></value><value type='IntegerLiteralExpr' value='60'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='51'></value><value type='IntegerLiteralExpr' value='320'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='52'></value><value type='IntegerLiteralExpr' value='384'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='53'></value><value type='IntegerLiteralExpr' value='448'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='55'></value><value type='IntegerLiteralExpr' value='53'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='56'></value><value type='IntegerLiteralExpr' value='54'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='82'></value><value type='IntegerLiteralExpr' value='50'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='83'></value><value type='IntegerLiteralExpr' value='51'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='84'></value><value type='IntegerLiteralExpr' value='44'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='85'></value><value type='IntegerLiteralExpr' value='45'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='86'></value><value type='IntegerLiteralExpr' value='46'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='87'></value><value type='IntegerLiteralExpr' value='47'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='88'></value><value type='IntegerLiteralExpr' value='57'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='89'></value><value type='IntegerLiteralExpr' value='58'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='90'></value><value type='IntegerLiteralExpr' value='61'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='91'></value><value type='IntegerLiteralExpr' value='256'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='100'></value><value type='IntegerLiteralExpr' value='48'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='101'></value><value type='IntegerLiteralExpr' value='49'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='102'></value><value type='IntegerLiteralExpr' value='62'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='103'></value><value type='IntegerLiteralExpr' value='63'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='104'></value><value type='IntegerLiteralExpr' value='30'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='105'></value><value type='IntegerLiteralExpr' value='31'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='106'></value><value type='IntegerLiteralExpr' value='32'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='107'></value><value type='IntegerLiteralExpr' value='33'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='108'></value><value type='IntegerLiteralExpr' value='40'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='109'></value><value type='IntegerLiteralExpr' value='41'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='200'></value><value type='IntegerLiteralExpr' value='128'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='201'></value><value type='IntegerLiteralExpr' value='192'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='202'></value><value type='IntegerLiteralExpr' value='26'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='203'></value><value type='IntegerLiteralExpr' value='27'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='204'></value><value type='IntegerLiteralExpr' value='28'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='205'></value><value type='IntegerLiteralExpr' value='29'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='210'></value><value type='IntegerLiteralExpr' value='34'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='211'></value><value type='IntegerLiteralExpr' value='35'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='212'></value><value type='IntegerLiteralExpr' value='36'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='213'></value><value type='IntegerLiteralExpr' value='37'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='214'></value><value type='IntegerLiteralExpr' value='38'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='215'></value><value type='IntegerLiteralExpr' value='39'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='218'></value><value type='IntegerLiteralExpr' value='42'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='219'></value><value type='IntegerLiteralExpr' value='43'></value></values></value></values></value><value type='ArrayInitializerExpr'><comment type='BlockComment' content=' 13 bits '></comment><values><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='74'></value><value type='IntegerLiteralExpr' value='640'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='75'></value><value type='IntegerLiteralExpr' value='704'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='76'></value><value type='IntegerLiteralExpr' value='768'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='77'></value><value type='IntegerLiteralExpr' value='832'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='82'></value><value type='IntegerLiteralExpr' value='1280'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='83'></value><value type='IntegerLiteralExpr' value='1344'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='84'></value><value type='IntegerLiteralExpr' value='1408'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='85'></value><value type='IntegerLiteralExpr' value='1472'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='90'></value><value type='IntegerLiteralExpr' value='1536'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='91'></value><value type='IntegerLiteralExpr' value='1600'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='100'></value><value type='IntegerLiteralExpr' value='1664'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='101'></value><value type='IntegerLiteralExpr' value='1728'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='108'></value><value type='IntegerLiteralExpr' value='512'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='109'></value><value type='IntegerLiteralExpr' value='576'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='114'></value><value type='IntegerLiteralExpr' value='896'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='115'></value><value type='IntegerLiteralExpr' value='960'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='116'></value><value type='IntegerLiteralExpr' value='1024'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='117'></value><value type='IntegerLiteralExpr' value='1088'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='118'></value><value type='IntegerLiteralExpr' value='1152'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='119'></value><value type='IntegerLiteralExpr' value='1216'></value></values></value></values></value></values></initializer><name type='SimpleName' identifier='BLACK CODE'></name><type type='ArrayType' origin='TYPE'><componentType type='ArrayType' origin='TYPE'><componentType type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='SHORT'></componentType></componentType></componentType></type></variable></variables></member><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='STATIC'></modifier><modifier type='Modifier' keyword='FINAL'></modifier></modifiers><variables><variable type='VariableDeclarator'><initializer type='ArrayInitializerExpr'><values><value type='ArrayInitializerExpr'><comment type='BlockComment' content=' 4 bits '></comment><values><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='2'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='3'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='11'></value><value type='IntegerLiteralExpr' value='4'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='12'></value><value type='IntegerLiteralExpr' value='5'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='14'></value><value type='IntegerLiteralExpr' value='6'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='15'></value><value type='IntegerLiteralExpr' value='7'></value></values></value></values></value><value type='ArrayInitializerExpr'><comment type='BlockComment' content=' 5 bits '></comment><values><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='10'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='11'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='18'></value><value type='IntegerLiteralExpr' value='128'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='19'></value><value type='IntegerLiteralExpr' value='8'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='20'></value><value type='IntegerLiteralExpr' value='9'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='27'></value><value type='IntegerLiteralExpr' value='64'></value></values></value></values></value><value type='ArrayInitializerExpr'><comment type='BlockComment' content=' 6 bits '></comment><values><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='3'></value><value type='IntegerLiteralExpr' value='13'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='1'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='12'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='23'></value><value type='IntegerLiteralExpr' value='192'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='24'></value><value type='IntegerLiteralExpr' value='1664'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='42'></value><value type='IntegerLiteralExpr' value='16'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='43'></value><value type='IntegerLiteralExpr' value='17'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='52'></value><value type='IntegerLiteralExpr' value='14'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='53'></value><value type='IntegerLiteralExpr' value='15'></value></values></value></values></value><value type='ArrayInitializerExpr'><comment type='BlockComment' content=' 7 bits '></comment><values><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='3'></value><value type='IntegerLiteralExpr' value='22'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='4'></value><value type='IntegerLiteralExpr' value='23'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='20'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='12'></value><value type='IntegerLiteralExpr' value='19'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='19'></value><value type='IntegerLiteralExpr' value='26'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='23'></value><value type='IntegerLiteralExpr' value='21'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='24'></value><value type='IntegerLiteralExpr' value='28'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='36'></value><value type='IntegerLiteralExpr' value='27'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='39'></value><value type='IntegerLiteralExpr' value='18'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='40'></value><value type='IntegerLiteralExpr' value='24'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='43'></value><value type='IntegerLiteralExpr' value='25'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='55'></value><value type='IntegerLiteralExpr' value='256'></value></values></value></values></value><value type='ArrayInitializerExpr'><comment type='BlockComment' content=' 8 bits '></comment><values><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='2'></value><value type='IntegerLiteralExpr' value='29'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='3'></value><value type='IntegerLiteralExpr' value='30'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='4'></value><value type='IntegerLiteralExpr' value='45'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='46'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='10'></value><value type='IntegerLiteralExpr' value='47'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='11'></value><value type='IntegerLiteralExpr' value='48'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='18'></value><value type='IntegerLiteralExpr' value='33'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='19'></value><value type='IntegerLiteralExpr' value='34'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='20'></value><value type='IntegerLiteralExpr' value='35'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='21'></value><value type='IntegerLiteralExpr' value='36'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='22'></value><value type='IntegerLiteralExpr' value='37'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='23'></value><value type='IntegerLiteralExpr' value='38'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='26'></value><value type='IntegerLiteralExpr' value='31'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='27'></value><value type='IntegerLiteralExpr' value='32'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='36'></value><value type='IntegerLiteralExpr' value='53'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='37'></value><value type='IntegerLiteralExpr' value='54'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='40'></value><value type='IntegerLiteralExpr' value='39'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='41'></value><value type='IntegerLiteralExpr' value='40'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='42'></value><value type='IntegerLiteralExpr' value='41'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='43'></value><value type='IntegerLiteralExpr' value='42'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='44'></value><value type='IntegerLiteralExpr' value='43'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='45'></value><value type='IntegerLiteralExpr' value='44'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='50'></value><value type='IntegerLiteralExpr' value='61'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='51'></value><value type='IntegerLiteralExpr' value='62'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='52'></value><value type='IntegerLiteralExpr' value='63'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='53'></value><value type='IntegerLiteralExpr' value='0'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='54'></value><value type='IntegerLiteralExpr' value='320'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='55'></value><value type='IntegerLiteralExpr' value='384'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='74'></value><value type='IntegerLiteralExpr' value='59'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='75'></value><value type='IntegerLiteralExpr' value='60'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='82'></value><value type='IntegerLiteralExpr' value='49'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='83'></value><value type='IntegerLiteralExpr' value='50'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='84'></value><value type='IntegerLiteralExpr' value='51'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='85'></value><value type='IntegerLiteralExpr' value='52'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='88'></value><value type='IntegerLiteralExpr' value='55'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='89'></value><value type='IntegerLiteralExpr' value='56'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='90'></value><value type='IntegerLiteralExpr' value='57'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='91'></value><value type='IntegerLiteralExpr' value='58'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='100'></value><value type='IntegerLiteralExpr' value='448'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='101'></value><value type='IntegerLiteralExpr' value='512'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='103'></value><value type='IntegerLiteralExpr' value='640'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='104'></value><value type='IntegerLiteralExpr' value='576'></value></values></value></values></value><value type='ArrayInitializerExpr'><comment type='BlockComment' content=' 9 bits '></comment><values><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='152'></value><value type='IntegerLiteralExpr' value='1472'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='153'></value><value type='IntegerLiteralExpr' value='1536'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='154'></value><value type='IntegerLiteralExpr' value='1600'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='155'></value><value type='IntegerLiteralExpr' value='1728'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='204'></value><value type='IntegerLiteralExpr' value='704'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='205'></value><value type='IntegerLiteralExpr' value='768'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='210'></value><value type='IntegerLiteralExpr' value='832'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='211'></value><value type='IntegerLiteralExpr' value='896'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='212'></value><value type='IntegerLiteralExpr' value='960'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='213'></value><value type='IntegerLiteralExpr' value='1024'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='214'></value><value type='IntegerLiteralExpr' value='1088'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='215'></value><value type='IntegerLiteralExpr' value='1152'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='216'></value><value type='IntegerLiteralExpr' value='1216'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='217'></value><value type='IntegerLiteralExpr' value='1280'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='218'></value><value type='IntegerLiteralExpr' value='1344'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='219'></value><value type='IntegerLiteralExpr' value='1408'></value></values></value></values></value><value type='ArrayInitializerExpr'><comment type='BlockComment' content=' 10 bits '></comment></value><value type='ArrayInitializerExpr'><comment type='BlockComment' content=' 11 bits '></comment><values><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='1792'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='12'></value><value type='IntegerLiteralExpr' value='1856'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='13'></value><value type='IntegerLiteralExpr' value='1920'></value></values></value></values></value><value type='ArrayInitializerExpr'><comment type='BlockComment' content=' 12 bits '></comment><values><value type='ArrayInitializerExpr'><comment type='BlockComment' content=' EOL '></comment><values><value type='IntegerLiteralExpr' value='1'></value><value type='UnaryExpr' operator='MINUS'><expression type='IntegerLiteralExpr' value='1'></expression></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='18'></value><value type='IntegerLiteralExpr' value='1984'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='19'></value><value type='IntegerLiteralExpr' value='2048'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='20'></value><value type='IntegerLiteralExpr' value='2112'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='21'></value><value type='IntegerLiteralExpr' value='2176'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='22'></value><value type='IntegerLiteralExpr' value='2240'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='23'></value><value type='IntegerLiteralExpr' value='2304'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='28'></value><value type='IntegerLiteralExpr' value='2368'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='29'></value><value type='IntegerLiteralExpr' value='2432'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='30'></value><value type='IntegerLiteralExpr' value='2496'></value></values></value><value type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='31'></value><value type='IntegerLiteralExpr' value='2560'></value></values></value></values></value></values></initializer><name type='SimpleName' identifier='WHITE CODE'></name><type type='ArrayType' origin='TYPE'><componentType type='ArrayType' origin='TYPE'><componentType type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='SHORT'></componentType></componentType></componentType></type></variable></variables></member><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='STATIC'></modifier><modifier type='Modifier' keyword='FINAL'></modifier></modifiers><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='2'></initializer><name type='SimpleName' identifier='BLACK MIN BITS'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></member><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='STATIC'></modifier><modifier type='Modifier' keyword='FINAL'></modifier></modifiers><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='4'></initializer><name type='SimpleName' identifier='WHITE MIN BITS'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='isWhite'></name><type type='PrimitiveType' specificType='BOOLEAN'></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='whiteValue'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='1'></initializer><name type='SimpleName' identifier='blackValue'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='src'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='BYTE'></componentType></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='dest'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='BYTE'></componentType></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='byteOffsetSrc'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='bitOffsetSrc'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='byteOffsetDest'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='bitOffsetDest'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='code'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='nbrBits'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></member><member type='FieldDeclaration'><comment type='BlockComment' content=' nbr of bytes per row '></comment><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='rowSize'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='src'></name><scope type='ThisExpr'></scope></target><value type='NameExpr'><name type='SimpleName' identifier='src'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='dest'></name><scope type='ThisExpr'></scope></target><value type='NameExpr'><name type='SimpleName' identifier='dest'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='rowSize'></name><scope type='ThisExpr'></scope></target><value type='NameExpr'><name type='SimpleName' identifier='rowSize'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='byteOffsetSrc'></name></target><value type='IntegerLiteralExpr' value='0'></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='bitOffsetSrc'></name></target><value type='IntegerLiteralExpr' value='0'></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='byteOffsetDest'></name></target><value type='NameExpr'><name type='SimpleName' identifier='offsetDest'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='bitOffsetDest'></name></target><value type='IntegerLiteralExpr' value='0'></value></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='cnt'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='WhileStmt'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='cnt'></name></expression></expression></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='GREATER'><left type='NameExpr'><name type='SimpleName' identifier='bitOffsetDest'></name></left><right type='IntegerLiteralExpr' value='0'></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='byteOffsetDest'></name></expression></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='bitOffsetDest'></name></target><value type='IntegerLiteralExpr' value='0'></value></expression></statement></statements></thenStmt><comment type='BlockComment' content=' byte aligned '></comment></statement></statements></body><condition type='BinaryExpr' operator='AND'><left type='BinaryExpr' operator='LESS'><left type='NameExpr'><name type='SimpleName' identifier='cnt'></name></left><right type='NameExpr'><name type='SimpleName' identifier='nRows'></name></right></left><right type='MethodCallExpr'><name type='SimpleName' identifier='decodeRow'></name></right></condition></statement><statement type='ReturnStmt'><expression type='BinaryExpr' operator='MINUS'><left type='NameExpr'><name type='SimpleName' identifier='byteOffsetDest'></name></left><right type='NameExpr'><name type='SimpleName' identifier='offsetDest'></name></right></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='decode'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='src'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='BYTE'></componentType></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='dest'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='BYTE'></componentType></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='offsetDest'></name><type type='PrimitiveType' specificType='INT'></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='rowSize'></name><type type='PrimitiveType' specificType='INT'></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='nRows'></name><type type='PrimitiveType' specificType='INT'></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='isWhite'></name></target><value type='BooleanLiteralExpr' value='true'></value></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='n'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='WhileStmt'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='decodeRunLength'></name></initializer><name type='SimpleName' identifier='runLength'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='LESS'><left type='NameExpr'><name type='SimpleName' identifier='runLength'></name></left><right type='IntegerLiteralExpr' value='0'></right></condition><thenStmt type='ReturnStmt'><expression type='BooleanLiteralExpr' value='false'></expression></thenStmt></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='PLUS'><target type='NameExpr'><name type='SimpleName' identifier='n'></name></target><value type='NameExpr'><name type='SimpleName' identifier='runLength'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='setNextBits'></name><arguments><argument type='ConditionalExpr'><condition type='NameExpr'><name type='SimpleName' identifier='isWhite'></name></condition><elseExpr type='NameExpr'><name type='SimpleName' identifier='blackValue'></name></elseExpr><thenExpr type='NameExpr'><name type='SimpleName' identifier='whiteValue'></name></thenExpr></argument><argument type='NameExpr'><name type='SimpleName' identifier='runLength'></name></argument></arguments></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='isWhite'></name></target><value type='UnaryExpr' operator='LOGICAL COMPLEMENT'><expression type='NameExpr'><name type='SimpleName' identifier='isWhite'></name></expression></value></expression></statement></statements></body><condition type='BinaryExpr' operator='LESS'><left type='NameExpr'><name type='SimpleName' identifier='n'></name></left><right type='NameExpr'><name type='SimpleName' identifier='rowSize'></name></right></condition></statement><statement type='ReturnStmt'><expression type='BooleanLiteralExpr' value='true'></expression></statement></statements></body><type type='PrimitiveType' specificType='BOOLEAN'></type><name type='SimpleName' identifier='decodeRow'></name></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='runLength'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='partialRun'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ConditionalExpr'><condition type='NameExpr'><name type='SimpleName' identifier='isWhite'></name></condition><elseExpr type='NameExpr'><name type='SimpleName' identifier='BLACK CODE'></name></elseExpr><thenExpr type='NameExpr'><name type='SimpleName' identifier='WHITE CODE'></name></thenExpr></initializer><name type='SimpleName' identifier='huffmanCode'></name><type type='ArrayType' origin='TYPE'><componentType type='ArrayType' origin='TYPE'><componentType type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='SHORT'></componentType></componentType></componentType></type></variable></variables></expression></statement><statement type='WhileStmt'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='BooleanLiteralExpr' value='false'></initializer><name type='SimpleName' identifier='found'></name><type type='PrimitiveType' specificType='BOOLEAN'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='nbrBits'></name></target><value type='ConditionalExpr'><condition type='NameExpr'><name type='SimpleName' identifier='isWhite'></name></condition><elseExpr type='NameExpr'><name type='SimpleName' identifier='BLACK MIN BITS'></name></elseExpr><thenExpr type='NameExpr'><name type='SimpleName' identifier='WHITE MIN BITS'></name></thenExpr></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='code'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='getNextBits'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='nbrBits'></name></argument></arguments></value></expression></statement><statement type='ForStmt'><body type='BlockStmt'><statements><statement type='ForStmt'><body type='BlockStmt'><statements><statement type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='0'></index><name type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='j'></name></index><name type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='i'></name></index><name type='NameExpr'><name type='SimpleName' identifier='huffmanCode'></name></name></name></name></left><right type='NameExpr'><name type='SimpleName' identifier='code'></name></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='found'></name></target><value type='BooleanLiteralExpr' value='true'></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='partialRun'></name></target><value type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='1'></index><name type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='j'></name></index><name type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='i'></name></index><name type='NameExpr'><name type='SimpleName' identifier='huffmanCode'></name></name></name></name></value></expression></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='partialRun'></name></left><right type='UnaryExpr' operator='MINUS'><expression type='IntegerLiteralExpr' value='1'></expression></right></condition><elseStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='PLUS'><target type='NameExpr'><name type='SimpleName' identifier='runLength'></name></target><value type='NameExpr'><name type='SimpleName' identifier='partialRun'></name></value></expression></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='LESS'><left type='NameExpr'><name type='SimpleName' identifier='partialRun'></name></left><right type='IntegerLiteralExpr' value='64'></right></condition><thenStmt type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='runLength'></name></expression></thenStmt></statement></statements></elseStmt><thenStmt type='BlockStmt'><statements><statement type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='byteOffsetSrc'></name></left><right type='BinaryExpr' operator='MINUS'><left type='FieldAccessExpr'><name type='SimpleName' identifier='length'></name><scope type='NameExpr'><name type='SimpleName' identifier='src'></name></scope></left><right type='IntegerLiteralExpr' value='1'></right></right></condition><thenStmt type='ReturnStmt'><expression type='UnaryExpr' operator='MINUS'><expression type='IntegerLiteralExpr' value='1'></expression></expression></thenStmt><comment type='BlockComment' content=' Stop when reaching final EOL on last byte '></comment></statement></statements></thenStmt></statement><statement type='BreakStmt'></statement></statements></thenStmt></statement></statements></body><compare type='BinaryExpr' operator='LESS'><left type='NameExpr'><name type='SimpleName' identifier='j'></name></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='length'></name><scope type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='i'></name></index><name type='NameExpr'><name type='SimpleName' identifier='huffmanCode'></name></name></scope></right></compare><initialization><initializatio type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='j'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></initializatio></initialization><update><updat type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='j'></name></expression></updat></update></statement><statement type='IfStmt'><condition type='NameExpr'><name type='SimpleName' identifier='found'></name></condition><thenStmt type='BreakStmt'></thenStmt></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='code'></name></target><value type='BinaryExpr' operator='BINARY OR'><left type='BinaryExpr' operator='LEFT SHIFT'><left type='NameExpr'><name type='SimpleName' identifier='code'></name></left><right type='IntegerLiteralExpr' value='1'></right></left><right type='MethodCallExpr'><name type='SimpleName' identifier='getNextBit'></name></right></value></expression></statement></statements></body><compare type='BinaryExpr' operator='LESS'><left type='NameExpr'><name type='SimpleName' identifier='i'></name></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='length'></name><scope type='NameExpr'><name type='SimpleName' identifier='huffmanCode'></name></scope></right></compare><initialization><initializatio type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='i'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></initializatio></initialization><update><updat type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='i'></name></expression></updat></update></statement><statement type='IfStmt'><condition type='UnaryExpr' operator='LOGICAL COMPLEMENT'><expression type='NameExpr'><name type='SimpleName' identifier='found'></name></expression></condition><thenStmt type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='error'></name><scope type='NameExpr'><name type='SimpleName' identifier='SWT'></name></scope><arguments><argument type='FieldAccessExpr'><name type='SimpleName' identifier='ERROR INVALID IMAGE'></name><scope type='NameExpr'><name type='SimpleName' identifier='SWT'></name></scope></argument></arguments></expression></thenStmt></statement></statements></body><condition type='BooleanLiteralExpr' value='true'></condition></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='decodeRunLength'></name></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='BinaryExpr' operator='BINARY AND'><left type='EnclosedExpr'><inner type='BinaryExpr' operator='UNSIGNED RIGHT SHIFT'><left type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='byteOffsetSrc'></name></index><name type='NameExpr'><name type='SimpleName' identifier='src'></name></name></left><right type='EnclosedExpr'><inner type='BinaryExpr' operator='MINUS'><left type='IntegerLiteralExpr' value='7'></left><right type='NameExpr'><name type='SimpleName' identifier='bitOffsetSrc'></name></right></inner></right></inner></left><right type='IntegerLiteralExpr' value='0x1'></right></initializer><name type='SimpleName' identifier='value'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='bitOffsetSrc'></name></expression></expression></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='GREATER'><left type='NameExpr'><name type='SimpleName' identifier='bitOffsetSrc'></name></left><right type='IntegerLiteralExpr' value='7'></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='byteOffsetSrc'></name></expression></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='bitOffsetSrc'></name></target><value type='IntegerLiteralExpr' value='0'></value></expression></statement></statements></thenStmt></statement><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='value'></name></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='getNextBit'></name></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='value'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ForStmt'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='value'></name></target><value type='BinaryExpr' operator='BINARY OR'><left type='BinaryExpr' operator='LEFT SHIFT'><left type='NameExpr'><name type='SimpleName' identifier='value'></name></left><right type='IntegerLiteralExpr' value='1'></right></left><right type='MethodCallExpr'><name type='SimpleName' identifier='getNextBit'></name></right></value></expression></statement></statements></body><compare type='BinaryExpr' operator='LESS'><left type='NameExpr'><name type='SimpleName' identifier='i'></name></left><right type='NameExpr'><name type='SimpleName' identifier='cnt'></name></right></compare><initialization><initializatio type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='i'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></initializatio></initialization><update><updat type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='i'></name></expression></updat></update></statement><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='value'></name></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='getNextBits'></name><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='cnt'></name><type type='PrimitiveType' specificType='INT'></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='NameExpr'><name type='SimpleName' identifier='cnt'></name></initializer><name type='SimpleName' identifier='n'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='WhileStmt'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='byteOffsetDest'></name></index><name type='NameExpr'><name type='SimpleName' identifier='dest'></name></name></target><value type='ConditionalExpr'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='value'></name></left><right type='IntegerLiteralExpr' value='1'></right></condition><elseExpr type='CastExpr'><expression type='EnclosedExpr'><inner type='BinaryExpr' operator='BINARY AND'><left type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='byteOffsetDest'></name></index><name type='NameExpr'><name type='SimpleName' identifier='dest'></name></name></left><right type='UnaryExpr' operator='BITWISE COMPLEMENT'><expression type='EnclosedExpr'><inner type='BinaryExpr' operator='LEFT SHIFT'><left type='IntegerLiteralExpr' value='1'></left><right type='EnclosedExpr'><inner type='BinaryExpr' operator='MINUS'><left type='IntegerLiteralExpr' value='7'></left><right type='NameExpr'><name type='SimpleName' identifier='bitOffsetDest'></name></right></inner></right></inner></expression></right></inner></expression><type type='PrimitiveType' specificType='BYTE'></type></elseExpr><thenExpr type='CastExpr'><expression type='EnclosedExpr'><inner type='BinaryExpr' operator='BINARY OR'><left type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='byteOffsetDest'></name></index><name type='NameExpr'><name type='SimpleName' identifier='dest'></name></name></left><right type='EnclosedExpr'><inner type='BinaryExpr' operator='LEFT SHIFT'><left type='IntegerLiteralExpr' value='1'></left><right type='EnclosedExpr'><inner type='BinaryExpr' operator='MINUS'><left type='IntegerLiteralExpr' value='7'></left><right type='NameExpr'><name type='SimpleName' identifier='bitOffsetDest'></name></right></inner></right></inner></right></inner></expression><type type='PrimitiveType' specificType='BYTE'></type></thenExpr></value></expression></statement><statement type='ExpressionStmt'><expression type='UnaryExpr' operator='POSTFIX DECREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='n'></name></expression></expression></statement><statement type='ExpressionStmt'><expression type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='bitOffsetDest'></name></expression></expression></statement></statements></body><condition type='BinaryExpr' operator='AND'><left type='BinaryExpr' operator='AND'><left type='BinaryExpr' operator='GREATER'><left type='NameExpr'><name type='SimpleName' identifier='bitOffsetDest'></name></left><right type='IntegerLiteralExpr' value='0'></right></left><right type='BinaryExpr' operator='LESS EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='bitOffsetDest'></name></left><right type='IntegerLiteralExpr' value='7'></right></right></left><right type='BinaryExpr' operator='GREATER'><left type='NameExpr'><name type='SimpleName' identifier='n'></name></left><right type='IntegerLiteralExpr' value='0'></right></right></condition></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='bitOffsetDest'></name></left><right type='IntegerLiteralExpr' value='8'></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='byteOffsetDest'></name></expression></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='bitOffsetDest'></name></target><value type='IntegerLiteralExpr' value='0'></value></expression></statement></statements></thenStmt></statement><statement type='WhileStmt'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='byteOffsetDest'></name></expression></index><name type='NameExpr'><name type='SimpleName' identifier='dest'></name></name></target><value type='CastExpr'><expression type='EnclosedExpr'><inner type='ConditionalExpr'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='value'></name></left><right type='IntegerLiteralExpr' value='1'></right></condition><elseExpr type='IntegerLiteralExpr' value='0'></elseExpr><thenExpr type='IntegerLiteralExpr' value='0xFF'></thenExpr></inner></expression><type type='PrimitiveType' specificType='BYTE'></type></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='MINUS'><target type='NameExpr'><name type='SimpleName' identifier='n'></name></target><value type='IntegerLiteralExpr' value='8'></value></expression></statement></statements></body><condition type='BinaryExpr' operator='GREATER EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='n'></name></left><right type='IntegerLiteralExpr' value='8'></right></condition></statement><statement type='WhileStmt'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='byteOffsetDest'></name></index><name type='NameExpr'><name type='SimpleName' identifier='dest'></name></name></target><value type='ConditionalExpr'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='value'></name></left><right type='IntegerLiteralExpr' value='1'></right></condition><elseExpr type='CastExpr'><expression type='EnclosedExpr'><inner type='BinaryExpr' operator='BINARY AND'><left type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='byteOffsetDest'></name></index><name type='NameExpr'><name type='SimpleName' identifier='dest'></name></name></left><right type='UnaryExpr' operator='BITWISE COMPLEMENT'><expression type='EnclosedExpr'><inner type='BinaryExpr' operator='LEFT SHIFT'><left type='IntegerLiteralExpr' value='1'></left><right type='EnclosedExpr'><inner type='BinaryExpr' operator='MINUS'><left type='IntegerLiteralExpr' value='7'></left><right type='NameExpr'><name type='SimpleName' identifier='bitOffsetDest'></name></right></inner></right></inner></expression></right></inner></expression><type type='PrimitiveType' specificType='BYTE'></type></elseExpr><thenExpr type='CastExpr'><expression type='EnclosedExpr'><inner type='BinaryExpr' operator='BINARY OR'><left type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='byteOffsetDest'></name></index><name type='NameExpr'><name type='SimpleName' identifier='dest'></name></name></left><right type='EnclosedExpr'><inner type='BinaryExpr' operator='LEFT SHIFT'><left type='IntegerLiteralExpr' value='1'></left><right type='EnclosedExpr'><inner type='BinaryExpr' operator='MINUS'><left type='IntegerLiteralExpr' value='7'></left><right type='NameExpr'><name type='SimpleName' identifier='bitOffsetDest'></name></right></inner></right></inner></right></inner></expression><type type='PrimitiveType' specificType='BYTE'></type></thenExpr></value></expression></statement><statement type='ExpressionStmt'><expression type='UnaryExpr' operator='POSTFIX DECREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='n'></name></expression></expression></statement><statement type='ExpressionStmt'><expression type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='bitOffsetDest'></name></expression></expression></statement></statements></body><condition type='BinaryExpr' operator='GREATER'><left type='NameExpr'><name type='SimpleName' identifier='n'></name></left><right type='IntegerLiteralExpr' value='0'></right></condition></statement></statements></body><type type='VoidType'></type><name type='SimpleName' identifier='setNextBits'></name><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='value'></name><type type='PrimitiveType' specificType='INT'></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='cnt'></name><type type='PrimitiveType' specificType='INT'></type></parameter></parameters></member></members><modifiers><modifier type='Modifier' keyword='FINAL'></modifier></modifiers></type></types></root>
