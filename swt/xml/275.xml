<root type='CompilationUnit'><packageDeclaration type='PackageDeclaration'><name type='Name' identifier='win32'><qualifier type='Name' identifier='ole'><qualifier type='Name' identifier='internal'><qualifier type='Name' identifier='swt'><qualifier type='Name' identifier='eclipse'><qualifier type='Name' identifier='org'></qualifier></qualifier></qualifier></qualifier></qualifier></name></packageDeclaration><comment type='JavadocComment' content=' Copyright c 2000 2003 IBM Corporation and others All rights reserved This program and the accompanying materials are made available under the terms of the Eclipse Public License v1 0 which accompanies this distribution and is available at http www eclipse org legal epl v10 html Contributors IBM Corporation initial API and implementation '></comment><types><type type='ClassOrInterfaceDeclaration' isInterface='false'><name type='SimpleName' identifier='IStorage'></name><extendedTypes><extendedType type='ClassOrInterfaceType'><name type='SimpleName' identifier='IUnknown'></name></extendedType></extendedTypes><members><member type='ConstructorDeclaration'><body type='BlockStmt'><statements><statement type='ExplicitConstructorInvocationStmt' isThis='false'><arguments><argument type='NameExpr'><name type='SimpleName' identifier='address'></name></argument></arguments></statement></statements></body><name type='SimpleName' identifier='IStorage'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='address'></name><type type='PrimitiveType' specificType='INT'></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='VtblCall'></name><scope type='NameExpr'><name type='SimpleName' identifier='COM'></name></scope><arguments><argument type='IntegerLiteralExpr' value='9'></argument><argument type='NameExpr'><name type='SimpleName' identifier='address'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='grfCommitFlag'></name></argument></arguments></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='Commit'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='grfCommitFlag'></name><type type='PrimitiveType' specificType='INT'></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='IfStmt'><condition type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='snbExclude'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='FieldAccessExpr'><name type='SimpleName' identifier='E INVALIDARG'></name><scope type='NameExpr'><name type='SimpleName' identifier='COM'></name></scope></expression></statement></statements></thenStmt><comment type='LineComment' content=' we only support snbExclude null'></comment></statement><statement type='ReturnStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='VtblCall'></name><scope type='NameExpr'><name type='SimpleName' identifier='COM'></name></scope><arguments><argument type='IntegerLiteralExpr' value='7'></argument><argument type='NameExpr'><name type='SimpleName' identifier='address'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='ciidExclude'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='rgiidExclude'></name></argument><argument type='IntegerLiteralExpr' value='0'></argument><argument type='NameExpr'><name type='SimpleName' identifier='pstgDest'></name></argument></arguments></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='CopyTo'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='ciidExclude'></name><type type='PrimitiveType' specificType='INT'></type><comment type='LineComment' content='Number of elements in rgiidExclude'></comment></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='rgiidExclude'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='GUID'></name></type><comment type='LineComment' content='Array of interface identifiers IIDs '></comment></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='snbExclude'></name><type type='ArrayType' origin='TYPE'><componentType type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></componentType></type><comment type='LineComment' content='Points to a block of stream names in the storage object'></comment></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='pstgDest'></name><type type='PrimitiveType' specificType='INT'></type><comment type='LineComment' content='Points to destination storage object'></comment></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='NullLiteralExpr'></initializer><name type='SimpleName' identifier='buffer'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='CHAR'></componentType></type></variable></variables></expression><comment type='LineComment' content=' create a null terminated array of char'></comment></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='pwcsName'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='buffer'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='toCharArray'></name><scope type='EnclosedExpr'><inner type='BinaryExpr' operator='PLUS'><left type='NameExpr'><name type='SimpleName' identifier='pwcsName'></name></left><right type='StringLiteralExpr' value=' 0'></right></inner></scope></value></expression></statement></statements></thenStmt></statement><statement type='ReturnStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='VtblCall'></name><scope type='NameExpr'><name type='SimpleName' identifier='COM'></name></scope><arguments><argument type='IntegerLiteralExpr' value='5'></argument><argument type='NameExpr'><name type='SimpleName' identifier='address'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='buffer'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='grfMode'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='reserved1'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='reserved2'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='ppStg'></name></argument></arguments></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='CreateStorage'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='pwcsName'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></type><comment type='LineComment' content='Pointer to the name of the new storage object'></comment></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='grfMode'></name><type type='PrimitiveType' specificType='INT'></type><comment type='LineComment' content='Access mode for the new storage object '></comment></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='reserved1'></name><type type='PrimitiveType' specificType='INT'></type><comment type='LineComment' content='Reserved must be zero'></comment></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='reserved2'></name><type type='PrimitiveType' specificType='INT'></type><comment type='LineComment' content='Reserved must be zero'></comment></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='ppStg'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type><comment type='LineComment' content='Pointer to new storage object'></comment></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='NullLiteralExpr'></initializer><name type='SimpleName' identifier='buffer'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='CHAR'></componentType></type></variable></variables></expression><comment type='LineComment' content=' create a null terminated array of char'></comment></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='pwcsName'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='buffer'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='toCharArray'></name><scope type='EnclosedExpr'><inner type='BinaryExpr' operator='PLUS'><left type='NameExpr'><name type='SimpleName' identifier='pwcsName'></name></left><right type='StringLiteralExpr' value=' 0'></right></inner></scope></value></expression></statement></statements></thenStmt></statement><statement type='ReturnStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='VtblCall'></name><scope type='NameExpr'><name type='SimpleName' identifier='COM'></name></scope><arguments><argument type='IntegerLiteralExpr' value='3'></argument><argument type='NameExpr'><name type='SimpleName' identifier='address'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='buffer'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='grfMode'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='reserved1'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='reserved2'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='ppStm'></name></argument></arguments></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='CreateStream'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='pwcsName'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></type><comment type='LineComment' content='Pointer to the name of the new stream'></comment></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='grfMode'></name><type type='PrimitiveType' specificType='INT'></type><comment type='LineComment' content='Access mode for the new stream '></comment></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='reserved1'></name><type type='PrimitiveType' specificType='INT'></type><comment type='LineComment' content='Reserved must be zero '></comment></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='reserved2'></name><type type='PrimitiveType' specificType='INT'></type><comment type='LineComment' content='Reserved must be zero '></comment></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='ppStm'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type><comment type='LineComment' content='Pointer to new stream object'></comment></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='NullLiteralExpr'></initializer><name type='SimpleName' identifier='buffer'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='CHAR'></componentType></type></variable></variables></expression><comment type='LineComment' content=' create a null terminated array of char'></comment></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='pwcsName'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='buffer'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='toCharArray'></name><scope type='EnclosedExpr'><inner type='BinaryExpr' operator='PLUS'><left type='NameExpr'><name type='SimpleName' identifier='pwcsName'></name></left><right type='StringLiteralExpr' value=' 0'></right></inner></scope></value></expression></statement></statements></thenStmt></statement><statement type='ReturnStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='VtblCall'></name><scope type='NameExpr'><name type='SimpleName' identifier='COM'></name></scope><arguments><argument type='IntegerLiteralExpr' value='12'></argument><argument type='NameExpr'><name type='SimpleName' identifier='address'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='buffer'></name></argument></arguments></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='DestroyElement'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='pwcsName'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><comment type='LineComment' content=' receives the IEnumSTATSTG interface '></comment><statements><statement type='ReturnStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='VtblCall'></name><scope type='NameExpr'><name type='SimpleName' identifier='COM'></name></scope><arguments><argument type='IntegerLiteralExpr' value='11'></argument><argument type='NameExpr'><name type='SimpleName' identifier='address'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='reserved1'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='reserved2'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='reserved3'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='ppenum'></name></argument></arguments></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='EnumElements'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='reserved1'></name><type type='PrimitiveType' specificType='INT'></type><comment type='LineComment' content='Reserved must be zero'></comment></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='reserved2'></name><type type='PrimitiveType' specificType='INT'></type><comment type='LineComment' content='Reserved must be NULL'></comment></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='reserved3'></name><type type='PrimitiveType' specificType='INT'></type><comment type='LineComment' content='Reserved must be zero'></comment></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='ppenum'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type><comment type='LineComment' content='Pointer to output variable that'></comment></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='NullLiteralExpr'></initializer><name type='SimpleName' identifier='buffer'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='CHAR'></componentType></type></variable></variables></expression><comment type='LineComment' content=' create a null terminated array of char'></comment></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='pwcsName'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='buffer'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='toCharArray'></name><scope type='EnclosedExpr'><inner type='BinaryExpr' operator='PLUS'><left type='NameExpr'><name type='SimpleName' identifier='pwcsName'></name></left><right type='StringLiteralExpr' value=' 0'></right></inner></scope></value></expression></statement></statements></thenStmt></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='snbExclude'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='FieldAccessExpr'><name type='SimpleName' identifier='E INVALIDARG'></name><scope type='NameExpr'><name type='SimpleName' identifier='COM'></name></scope></expression></statement></statements></thenStmt><comment type='LineComment' content=' we only support the case where snbExclude null'></comment></statement><statement type='ReturnStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='VtblCall'></name><scope type='NameExpr'><name type='SimpleName' identifier='COM'></name></scope><arguments><argument type='IntegerLiteralExpr' value='6'></argument><argument type='NameExpr'><name type='SimpleName' identifier='address'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='buffer'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='pstgPriority'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='grfMode'></name></argument><argument type='IntegerLiteralExpr' value='0'></argument><argument type='NameExpr'><name type='SimpleName' identifier='reserved'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='ppStg'></name></argument></arguments></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='OpenStorage'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='pwcsName'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></type><comment type='LineComment' content='Pointer to the name of the '></comment></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='pstgPriority'></name><type type='PrimitiveType' specificType='INT'></type><comment type='LineComment' content='Must be NULL '></comment></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='grfMode'></name><type type='PrimitiveType' specificType='INT'></type><comment type='LineComment' content='Access mode for the new storage object'></comment></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='snbExclude'></name><type type='ArrayType' origin='NAME'><componentType type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></componentType></type><comment type='LineComment' content='Must be NULL '></comment></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='reserved'></name><type type='PrimitiveType' specificType='INT'></type><comment type='LineComment' content='Reserved must be zero'></comment></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='ppStg'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type><comment type='LineComment' content='Pointer to opened storage object'></comment></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><comment type='LineComment' content=' that receives the IStream interface pointer'></comment><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='NullLiteralExpr'></initializer><name type='SimpleName' identifier='buffer'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='CHAR'></componentType></type></variable></variables></expression><comment type='LineComment' content=' create a null terminated array of char'></comment></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='pwcsName'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='buffer'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='toCharArray'></name><scope type='EnclosedExpr'><inner type='BinaryExpr' operator='PLUS'><left type='NameExpr'><name type='SimpleName' identifier='pwcsName'></name></left><right type='StringLiteralExpr' value=' 0'></right></inner></scope></value></expression></statement></statements></thenStmt></statement><statement type='ReturnStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='VtblCall'></name><scope type='NameExpr'><name type='SimpleName' identifier='COM'></name></scope><arguments><argument type='IntegerLiteralExpr' value='4'></argument><argument type='NameExpr'><name type='SimpleName' identifier='address'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='buffer'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='reserved1'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='grfMode'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='reserved2'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='ppStm'></name></argument></arguments></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='OpenStream'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='pwcsName'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></type><comment type='LineComment' content='Pointer to name of stream to open'></comment></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='reserved1'></name><type type='PrimitiveType' specificType='INT'></type><comment type='LineComment' content='Reserved must be NULL '></comment></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='grfMode'></name><type type='PrimitiveType' specificType='INT'></type><comment type='LineComment' content='Access mode for the new stream '></comment></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='reserved2'></name><type type='PrimitiveType' specificType='INT'></type><comment type='LineComment' content='Reserved must be zero'></comment></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='ppStm'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type><comment type='LineComment' content='Pointer to output variable'></comment></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><comment type='LineComment' content=' the specified element'></comment><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='NullLiteralExpr'></initializer><name type='SimpleName' identifier='buffer1'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='CHAR'></componentType></type></variable></variables></expression><comment type='LineComment' content=' create a null terminated array of char'></comment></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='pwcsOldName'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='buffer1'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='toCharArray'></name><scope type='EnclosedExpr'><inner type='BinaryExpr' operator='PLUS'><left type='NameExpr'><name type='SimpleName' identifier='pwcsOldName'></name></left><right type='StringLiteralExpr' value=' 0'></right></inner></scope></value></expression></statement></statements></thenStmt></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='NullLiteralExpr'></initializer><name type='SimpleName' identifier='buffer2'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='CHAR'></componentType></type></variable></variables></expression><comment type='LineComment' content=' create a null terminated array of char'></comment></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='pwcsNewName'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='buffer2'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='toCharArray'></name><scope type='EnclosedExpr'><inner type='BinaryExpr' operator='PLUS'><left type='NameExpr'><name type='SimpleName' identifier='pwcsNewName'></name></left><right type='StringLiteralExpr' value=' 0'></right></inner></scope></value></expression></statement></statements></thenStmt></statement><statement type='ReturnStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='VtblCall'></name><scope type='NameExpr'><name type='SimpleName' identifier='COM'></name></scope><arguments><argument type='IntegerLiteralExpr' value='13'></argument><argument type='NameExpr'><name type='SimpleName' identifier='address'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='buffer1'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='buffer2'></name></argument></arguments></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='RenameElement'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='pwcsOldName'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></type><comment type='LineComment' content='Pointer to the name of the'></comment></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='pwcsNewName'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></type><comment type='LineComment' content='Pointer to the new name for'></comment></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='VtblCall'></name><scope type='NameExpr'><name type='SimpleName' identifier='COM'></name></scope><arguments><argument type='IntegerLiteralExpr' value='10'></argument><argument type='NameExpr'><name type='SimpleName' identifier='address'></name></argument></arguments></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='Revert'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='VtblCall'></name><scope type='NameExpr'><name type='SimpleName' identifier='COM'></name></scope><arguments><argument type='IntegerLiteralExpr' value='15'></argument><argument type='NameExpr'><name type='SimpleName' identifier='address'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='clsid'></name></argument></arguments></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='SetClass'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='clsid'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='GUID'></name></type><comment type='LineComment' content='CLSID to be assigned to the storage object'></comment></parameter></parameters></member></members><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></type></types></root>
