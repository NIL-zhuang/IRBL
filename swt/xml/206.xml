<root type='CompilationUnit'><packageDeclaration type='PackageDeclaration'><name type='Name' identifier='image'><qualifier type='Name' identifier='internal'><qualifier type='Name' identifier='swt'><qualifier type='Name' identifier='eclipse'><qualifier type='Name' identifier='org'></qualifier></qualifier></qualifier></qualifier></name></packageDeclaration><comment type='JavadocComment' content=' Copyright c 2000 2004 IBM Corporation and others All rights reserved This program and the accompanying materials are made available under the terms of the Eclipse Public License v1 0 which accompanies this distribution and is available at http www eclipse org legal epl v10 html Contributors IBM Corporation initial API and implementation '></comment><types><type type='ClassOrInterfaceDeclaration' isInterface='false'><name type='SimpleName' identifier='JPEGHuffmanTable'></name><comment type='JavadocComment' content=' PEGHuffmanTable class actually represents two types of object 1 A DHT Define Huffman Tables segment which may represent as many as 4 Huffman tables In this case the tables are stored in the allTables array 2 A single Huffman table In this case the allTables array will be null The reference field is stored in both types of object but initialize is only called if the object represents a DHT '></comment><extendedTypes><extendedType type='ClassOrInterfaceType'><name type='SimpleName' identifier='JPEGVariableSizeSegment'></name></extendedType></extendedTypes><members><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='allTables'></name><type type='ArrayType' origin='TYPE'><componentType type='ClassOrInterfaceType'><name type='SimpleName' identifier='JPEGHuffmanTable'></name></componentType></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='tableClass'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='tableIdentifier'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='dhMaxCodes'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='dhMinCodes'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='dhValPtrs'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='dhValues'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='ehCodes'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='ehCodeLengths'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='BYTE'></componentType></type></variable></variables></member><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='STATIC'></modifier></modifiers><variables><variable type='VariableDeclarator'><initializer type='ArrayInitializerExpr'><values><value type='CastExpr'><expression type='IntegerLiteralExpr' value='255'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='196'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='IntegerLiteralExpr' value='0'></value><value type='IntegerLiteralExpr' value='31'></value><value type='IntegerLiteralExpr' value='0'></value><value type='IntegerLiteralExpr' value='0'></value><value type='IntegerLiteralExpr' value='1'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='1'></value><value type='IntegerLiteralExpr' value='1'></value><value type='IntegerLiteralExpr' value='1'></value><value type='IntegerLiteralExpr' value='1'></value><value type='IntegerLiteralExpr' value='1'></value><value type='IntegerLiteralExpr' value='1'></value><value type='IntegerLiteralExpr' value='0'></value><value type='IntegerLiteralExpr' value='0'></value><value type='IntegerLiteralExpr' value='0'></value><value type='IntegerLiteralExpr' value='0'></value><value type='IntegerLiteralExpr' value='0'></value><value type='IntegerLiteralExpr' value='0'></value><value type='IntegerLiteralExpr' value='0'></value><value type='IntegerLiteralExpr' value='0'></value><value type='IntegerLiteralExpr' value='1'></value><value type='IntegerLiteralExpr' value='2'></value><value type='IntegerLiteralExpr' value='3'></value><value type='IntegerLiteralExpr' value='4'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='6'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='10'></value><value type='IntegerLiteralExpr' value='11'></value></values></initializer><name type='SimpleName' identifier='DCLuminanceTable'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='BYTE'></componentType></type></variable></variables></member><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='STATIC'></modifier></modifiers><variables><variable type='VariableDeclarator'><initializer type='ArrayInitializerExpr'><values><value type='CastExpr'><expression type='IntegerLiteralExpr' value='255'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='196'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='IntegerLiteralExpr' value='0'></value><value type='IntegerLiteralExpr' value='31'></value><value type='IntegerLiteralExpr' value='1'></value><value type='IntegerLiteralExpr' value='0'></value><value type='IntegerLiteralExpr' value='3'></value><value type='IntegerLiteralExpr' value='1'></value><value type='IntegerLiteralExpr' value='1'></value><value type='IntegerLiteralExpr' value='1'></value><value type='IntegerLiteralExpr' value='1'></value><value type='IntegerLiteralExpr' value='1'></value><value type='IntegerLiteralExpr' value='1'></value><value type='IntegerLiteralExpr' value='1'></value><value type='IntegerLiteralExpr' value='1'></value><value type='IntegerLiteralExpr' value='1'></value><value type='IntegerLiteralExpr' value='0'></value><value type='IntegerLiteralExpr' value='0'></value><value type='IntegerLiteralExpr' value='0'></value><value type='IntegerLiteralExpr' value='0'></value><value type='IntegerLiteralExpr' value='0'></value><value type='IntegerLiteralExpr' value='0'></value><value type='IntegerLiteralExpr' value='1'></value><value type='IntegerLiteralExpr' value='2'></value><value type='IntegerLiteralExpr' value='3'></value><value type='IntegerLiteralExpr' value='4'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='6'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='10'></value><value type='IntegerLiteralExpr' value='11'></value></values></initializer><name type='SimpleName' identifier='DCChrominanceTable'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='BYTE'></componentType></type></variable></variables></member><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='STATIC'></modifier></modifiers><variables><variable type='VariableDeclarator'><initializer type='ArrayInitializerExpr'><values><value type='CastExpr'><expression type='IntegerLiteralExpr' value='255'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='196'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='IntegerLiteralExpr' value='0'></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='181'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='IntegerLiteralExpr' value='16'></value><value type='IntegerLiteralExpr' value='0'></value><value type='IntegerLiteralExpr' value='2'></value><value type='IntegerLiteralExpr' value='1'></value><value type='IntegerLiteralExpr' value='3'></value><value type='IntegerLiteralExpr' value='3'></value><value type='IntegerLiteralExpr' value='2'></value><value type='IntegerLiteralExpr' value='4'></value><value type='IntegerLiteralExpr' value='3'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='4'></value><value type='IntegerLiteralExpr' value='4'></value><value type='IntegerLiteralExpr' value='0'></value><value type='IntegerLiteralExpr' value='0'></value><value type='IntegerLiteralExpr' value='1'></value><value type='IntegerLiteralExpr' value='125'></value><value type='IntegerLiteralExpr' value='1'></value><value type='IntegerLiteralExpr' value='2'></value><value type='IntegerLiteralExpr' value='3'></value><value type='IntegerLiteralExpr' value='0'></value><value type='IntegerLiteralExpr' value='4'></value><value type='IntegerLiteralExpr' value='17'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='18'></value><value type='IntegerLiteralExpr' value='33'></value><value type='IntegerLiteralExpr' value='49'></value><value type='IntegerLiteralExpr' value='65'></value><value type='IntegerLiteralExpr' value='6'></value><value type='IntegerLiteralExpr' value='19'></value><value type='IntegerLiteralExpr' value='81'></value><value type='IntegerLiteralExpr' value='97'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='34'></value><value type='IntegerLiteralExpr' value='113'></value><value type='IntegerLiteralExpr' value='20'></value><value type='IntegerLiteralExpr' value='50'></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='129'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='145'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='161'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='35'></value><value type='IntegerLiteralExpr' value='66'></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='177'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='193'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='IntegerLiteralExpr' value='21'></value><value type='IntegerLiteralExpr' value='82'></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='209'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='240'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='IntegerLiteralExpr' value='36'></value><value type='IntegerLiteralExpr' value='51'></value><value type='IntegerLiteralExpr' value='98'></value><value type='IntegerLiteralExpr' value='114'></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='130'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='10'></value><value type='IntegerLiteralExpr' value='22'></value><value type='IntegerLiteralExpr' value='23'></value><value type='IntegerLiteralExpr' value='24'></value><value type='IntegerLiteralExpr' value='25'></value><value type='IntegerLiteralExpr' value='26'></value><value type='IntegerLiteralExpr' value='37'></value><value type='IntegerLiteralExpr' value='38'></value><value type='IntegerLiteralExpr' value='39'></value><value type='IntegerLiteralExpr' value='40'></value><value type='IntegerLiteralExpr' value='41'></value><value type='IntegerLiteralExpr' value='42'></value><value type='IntegerLiteralExpr' value='52'></value><value type='IntegerLiteralExpr' value='53'></value><value type='IntegerLiteralExpr' value='54'></value><value type='IntegerLiteralExpr' value='55'></value><value type='IntegerLiteralExpr' value='56'></value><value type='IntegerLiteralExpr' value='57'></value><value type='IntegerLiteralExpr' value='58'></value><value type='IntegerLiteralExpr' value='67'></value><value type='IntegerLiteralExpr' value='68'></value><value type='IntegerLiteralExpr' value='69'></value><value type='IntegerLiteralExpr' value='70'></value><value type='IntegerLiteralExpr' value='71'></value><value type='IntegerLiteralExpr' value='72'></value><value type='IntegerLiteralExpr' value='73'></value><value type='IntegerLiteralExpr' value='74'></value><value type='IntegerLiteralExpr' value='83'></value><value type='IntegerLiteralExpr' value='84'></value><value type='IntegerLiteralExpr' value='85'></value><value type='IntegerLiteralExpr' value='86'></value><value type='IntegerLiteralExpr' value='87'></value><value type='IntegerLiteralExpr' value='88'></value><value type='IntegerLiteralExpr' value='89'></value><value type='IntegerLiteralExpr' value='90'></value><value type='IntegerLiteralExpr' value='99'></value><value type='IntegerLiteralExpr' value='100'></value><value type='IntegerLiteralExpr' value='101'></value><value type='IntegerLiteralExpr' value='102'></value><value type='IntegerLiteralExpr' value='103'></value><value type='IntegerLiteralExpr' value='104'></value><value type='IntegerLiteralExpr' value='105'></value><value type='IntegerLiteralExpr' value='106'></value><value type='IntegerLiteralExpr' value='115'></value><value type='IntegerLiteralExpr' value='116'></value><value type='IntegerLiteralExpr' value='117'></value><value type='IntegerLiteralExpr' value='118'></value><value type='IntegerLiteralExpr' value='119'></value><value type='IntegerLiteralExpr' value='120'></value><value type='IntegerLiteralExpr' value='121'></value><value type='IntegerLiteralExpr' value='122'></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='131'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='132'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='133'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='134'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='135'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='136'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='137'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='138'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='146'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='147'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='148'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='149'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='150'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='151'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='152'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='153'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='154'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='162'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='163'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='164'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='165'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='166'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='167'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='168'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='169'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='170'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='178'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='179'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='180'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='181'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='182'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='183'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='184'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='185'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='186'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='194'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='195'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='196'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='197'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='198'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='199'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='200'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='201'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='202'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='210'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='211'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='212'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='213'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='214'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='215'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='216'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='217'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='218'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='225'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='226'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='227'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='228'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='229'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='230'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='231'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='232'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='233'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='234'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='241'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='242'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='243'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='244'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='245'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='246'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='247'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='248'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='249'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='250'></expression><type type='PrimitiveType' specificType='BYTE'></type></value></values></initializer><name type='SimpleName' identifier='ACLuminanceTable'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='BYTE'></componentType></type></variable></variables></member><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='STATIC'></modifier></modifiers><variables><variable type='VariableDeclarator'><initializer type='ArrayInitializerExpr'><values><value type='CastExpr'><expression type='IntegerLiteralExpr' value='255'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='196'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='IntegerLiteralExpr' value='0'></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='181'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='IntegerLiteralExpr' value='17'></value><value type='IntegerLiteralExpr' value='0'></value><value type='IntegerLiteralExpr' value='2'></value><value type='IntegerLiteralExpr' value='1'></value><value type='IntegerLiteralExpr' value='2'></value><value type='IntegerLiteralExpr' value='4'></value><value type='IntegerLiteralExpr' value='4'></value><value type='IntegerLiteralExpr' value='3'></value><value type='IntegerLiteralExpr' value='4'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='4'></value><value type='IntegerLiteralExpr' value='4'></value><value type='IntegerLiteralExpr' value='0'></value><value type='IntegerLiteralExpr' value='1'></value><value type='IntegerLiteralExpr' value='2'></value><value type='IntegerLiteralExpr' value='119'></value><value type='IntegerLiteralExpr' value='0'></value><value type='IntegerLiteralExpr' value='1'></value><value type='IntegerLiteralExpr' value='2'></value><value type='IntegerLiteralExpr' value='3'></value><value type='IntegerLiteralExpr' value='17'></value><value type='IntegerLiteralExpr' value='4'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='33'></value><value type='IntegerLiteralExpr' value='49'></value><value type='IntegerLiteralExpr' value='6'></value><value type='IntegerLiteralExpr' value='18'></value><value type='IntegerLiteralExpr' value='65'></value><value type='IntegerLiteralExpr' value='81'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='97'></value><value type='IntegerLiteralExpr' value='113'></value><value type='IntegerLiteralExpr' value='19'></value><value type='IntegerLiteralExpr' value='34'></value><value type='IntegerLiteralExpr' value='50'></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='129'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='20'></value><value type='IntegerLiteralExpr' value='66'></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='145'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='161'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='177'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='193'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='35'></value><value type='IntegerLiteralExpr' value='51'></value><value type='IntegerLiteralExpr' value='82'></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='240'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='IntegerLiteralExpr' value='21'></value><value type='IntegerLiteralExpr' value='98'></value><value type='IntegerLiteralExpr' value='114'></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='209'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='IntegerLiteralExpr' value='10'></value><value type='IntegerLiteralExpr' value='22'></value><value type='IntegerLiteralExpr' value='36'></value><value type='IntegerLiteralExpr' value='52'></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='225'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='IntegerLiteralExpr' value='37'></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='241'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='IntegerLiteralExpr' value='23'></value><value type='IntegerLiteralExpr' value='24'></value><value type='IntegerLiteralExpr' value='25'></value><value type='IntegerLiteralExpr' value='26'></value><value type='IntegerLiteralExpr' value='38'></value><value type='IntegerLiteralExpr' value='39'></value><value type='IntegerLiteralExpr' value='40'></value><value type='IntegerLiteralExpr' value='41'></value><value type='IntegerLiteralExpr' value='42'></value><value type='IntegerLiteralExpr' value='53'></value><value type='IntegerLiteralExpr' value='54'></value><value type='IntegerLiteralExpr' value='55'></value><value type='IntegerLiteralExpr' value='56'></value><value type='IntegerLiteralExpr' value='57'></value><value type='IntegerLiteralExpr' value='58'></value><value type='IntegerLiteralExpr' value='67'></value><value type='IntegerLiteralExpr' value='68'></value><value type='IntegerLiteralExpr' value='69'></value><value type='IntegerLiteralExpr' value='70'></value><value type='IntegerLiteralExpr' value='71'></value><value type='IntegerLiteralExpr' value='72'></value><value type='IntegerLiteralExpr' value='73'></value><value type='IntegerLiteralExpr' value='74'></value><value type='IntegerLiteralExpr' value='83'></value><value type='IntegerLiteralExpr' value='84'></value><value type='IntegerLiteralExpr' value='85'></value><value type='IntegerLiteralExpr' value='86'></value><value type='IntegerLiteralExpr' value='87'></value><value type='IntegerLiteralExpr' value='88'></value><value type='IntegerLiteralExpr' value='89'></value><value type='IntegerLiteralExpr' value='90'></value><value type='IntegerLiteralExpr' value='99'></value><value type='IntegerLiteralExpr' value='100'></value><value type='IntegerLiteralExpr' value='101'></value><value type='IntegerLiteralExpr' value='102'></value><value type='IntegerLiteralExpr' value='103'></value><value type='IntegerLiteralExpr' value='104'></value><value type='IntegerLiteralExpr' value='105'></value><value type='IntegerLiteralExpr' value='106'></value><value type='IntegerLiteralExpr' value='115'></value><value type='IntegerLiteralExpr' value='116'></value><value type='IntegerLiteralExpr' value='117'></value><value type='IntegerLiteralExpr' value='118'></value><value type='IntegerLiteralExpr' value='119'></value><value type='IntegerLiteralExpr' value='120'></value><value type='IntegerLiteralExpr' value='121'></value><value type='IntegerLiteralExpr' value='122'></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='130'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='131'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='132'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='133'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='134'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='135'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='136'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='137'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='138'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='146'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='147'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='148'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='149'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='150'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='151'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='152'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='153'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='154'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='162'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='163'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='164'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='165'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='166'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='167'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='168'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='169'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='170'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='178'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='179'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='180'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='181'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='182'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='183'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='184'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='185'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='186'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='194'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='195'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='196'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='197'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='198'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='199'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='200'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='201'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='202'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='210'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='211'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='212'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='213'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='214'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='215'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='216'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='217'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='218'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='226'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='227'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='228'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='229'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='230'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='231'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='232'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='233'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='234'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='242'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='243'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='244'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='245'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='246'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='247'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='248'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='249'></expression><type type='PrimitiveType' specificType='BYTE'></type></value><value type='CastExpr'><expression type='IntegerLiteralExpr' value='250'></expression><type type='PrimitiveType' specificType='BYTE'></type></value></values></initializer><name type='SimpleName' identifier='ACChrominanceTable'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='BYTE'></componentType></type></variable></variables></member><member type='ConstructorDeclaration'><body type='BlockStmt'><statements><statement type='ExplicitConstructorInvocationStmt' isThis='false'><arguments><argument type='NameExpr'><name type='SimpleName' identifier='reference'></name></argument></arguments></statement></statements></body><name type='SimpleName' identifier='JPEGHuffmanTable'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='reference'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='BYTE'></componentType></type></parameter></parameters></member><member type='ConstructorDeclaration'><body type='BlockStmt'><statements><statement type='ExplicitConstructorInvocationStmt' isThis='false'><arguments><argument type='NameExpr'><name type='SimpleName' identifier='byteStream'></name></argument></arguments></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='initialize'></name></expression></statement></statements></body><name type='SimpleName' identifier='JPEGHuffmanTable'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='byteStream'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='LEDataInputStream'></name></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='allTables'></name></expression></statement></statements></body><type type='ArrayType' origin='TYPE'><componentType type='ClassOrInterfaceType'><name type='SimpleName' identifier='JPEGHuffmanTable'></name></componentType></type><name type='SimpleName' identifier='getAllTables'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='JPEGHuffmanTable'></name></type><arguments><argument type='NameExpr'><name type='SimpleName' identifier='ACChrominanceTable'></name></argument></arguments></initializer><name type='SimpleName' identifier='result'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='JPEGHuffmanTable'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='initialize'></name><scope type='NameExpr'><name type='SimpleName' identifier='result'></name></scope></expression></statement><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='result'></name></expression></statement></statements></body><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='JPEGHuffmanTable'></name></type><name type='SimpleName' identifier='getDefaultACChrominanceTable'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier><modifier type='Modifier' keyword='STATIC'></modifier></modifiers></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='JPEGHuffmanTable'></name></type><arguments><argument type='NameExpr'><name type='SimpleName' identifier='ACLuminanceTable'></name></argument></arguments></initializer><name type='SimpleName' identifier='result'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='JPEGHuffmanTable'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='initialize'></name><scope type='NameExpr'><name type='SimpleName' identifier='result'></name></scope></expression></statement><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='result'></name></expression></statement></statements></body><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='JPEGHuffmanTable'></name></type><name type='SimpleName' identifier='getDefaultACLuminanceTable'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier><modifier type='Modifier' keyword='STATIC'></modifier></modifiers></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='JPEGHuffmanTable'></name></type><arguments><argument type='NameExpr'><name type='SimpleName' identifier='DCChrominanceTable'></name></argument></arguments></initializer><name type='SimpleName' identifier='result'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='JPEGHuffmanTable'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='initialize'></name><scope type='NameExpr'><name type='SimpleName' identifier='result'></name></scope></expression></statement><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='result'></name></expression></statement></statements></body><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='JPEGHuffmanTable'></name></type><name type='SimpleName' identifier='getDefaultDCChrominanceTable'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier><modifier type='Modifier' keyword='STATIC'></modifier></modifiers></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='JPEGHuffmanTable'></name></type><arguments><argument type='NameExpr'><name type='SimpleName' identifier='DCLuminanceTable'></name></argument></arguments></initializer><name type='SimpleName' identifier='result'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='JPEGHuffmanTable'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='initialize'></name><scope type='NameExpr'><name type='SimpleName' identifier='result'></name></scope></expression></statement><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='result'></name></expression></statement></statements></body><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='JPEGHuffmanTable'></name></type><name type='SimpleName' identifier='getDefaultDCLuminanceTable'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier><modifier type='Modifier' keyword='STATIC'></modifier></modifiers></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='dhMaxCodes'></name></expression></statement></statements></body><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type><name type='SimpleName' identifier='getDhMaxCodes'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='dhMinCodes'></name></expression></statement></statements></body><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type><name type='SimpleName' identifier='getDhMinCodes'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='dhValPtrs'></name></expression></statement></statements></body><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type><name type='SimpleName' identifier='getDhValPtrs'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='dhValues'></name></expression></statement></statements></body><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type><name type='SimpleName' identifier='getDhValues'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='tableClass'></name></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='getTableClass'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='tableIdentifier'></name></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='getTableIdentifier'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='BinaryExpr' operator='MINUS'><left type='MethodCallExpr'><name type='SimpleName' identifier='getSegmentLength'></name></left><right type='IntegerLiteralExpr' value='2'></right></initializer><name type='SimpleName' identifier='totalLength'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='4'></initializer><name type='SimpleName' identifier='ofs'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayCreationExpr'><elementType type='PrimitiveType' specificType='INT'></elementType><levels><level type='ArrayCreationLevel'><dimension type='IntegerLiteralExpr' value='16'></dimension></level></levels></initializer><name type='SimpleName' identifier='bits'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayCreationExpr'><elementType type='ClassOrInterfaceType'><name type='SimpleName' identifier='JPEGHuffmanTable'></name></elementType><levels><level type='ArrayCreationLevel'><dimension type='IntegerLiteralExpr' value='8'></dimension></level></levels></initializer><name type='SimpleName' identifier='huffTables'></name><type type='ArrayType' origin='TYPE'><componentType type='ClassOrInterfaceType'><name type='SimpleName' identifier='JPEGHuffmanTable'></name></componentType></type></variable></variables></expression><comment type='LineComment' content=' maximum is 4 AC 4 DC'></comment></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='huffTableCount'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='WhileStmt'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='BinaryExpr' operator='DIVIDE'><left type='EnclosedExpr'><inner type='BinaryExpr' operator='BINARY AND'><left type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='ofs'></name></index><name type='NameExpr'><name type='SimpleName' identifier='reference'></name></name></left><right type='IntegerLiteralExpr' value='0xFF'></right></inner></left><right type='IntegerLiteralExpr' value='16'></right></initializer><name type='SimpleName' identifier='tc'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression><comment type='LineComment' content=' table class AC 1 or DC 0 '></comment></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='BinaryExpr' operator='REMAINDER'><left type='EnclosedExpr'><inner type='BinaryExpr' operator='BINARY AND'><left type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='ofs'></name></index><name type='NameExpr'><name type='SimpleName' identifier='reference'></name></name></left><right type='IntegerLiteralExpr' value='0xFF'></right></inner></left><right type='IntegerLiteralExpr' value='16'></right></initializer><name type='SimpleName' identifier='tid'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression><comment type='LineComment' content=' table id 0 1 baseline 0 3 prog ext'></comment></statement><statement type='ExpressionStmt'><expression type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='ofs'></name></expression></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='count'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression><comment type='BlockComment' content=' Read the 16 count bytes and add them together to get the table size '></comment></statement><statement type='ForStmt'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='BinaryExpr' operator='BINARY AND'><left type='ArrayAccessExpr'><index type='BinaryExpr' operator='PLUS'><left type='NameExpr'><name type='SimpleName' identifier='ofs'></name></left><right type='NameExpr'><name type='SimpleName' identifier='i'></name></right></index><name type='NameExpr'><name type='SimpleName' identifier='reference'></name></name></left><right type='IntegerLiteralExpr' value='0xFF'></right></initializer><name type='SimpleName' identifier='bCount'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='i'></name></index><name type='NameExpr'><name type='SimpleName' identifier='bits'></name></name></target><value type='NameExpr'><name type='SimpleName' identifier='bCount'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='PLUS'><target type='NameExpr'><name type='SimpleName' identifier='count'></name></target><value type='NameExpr'><name type='SimpleName' identifier='bCount'></name></value></expression></statement></statements></body><compare type='BinaryExpr' operator='LESS'><left type='NameExpr'><name type='SimpleName' identifier='i'></name></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='length'></name><scope type='NameExpr'><name type='SimpleName' identifier='bits'></name></scope></right></compare><initialization><initializatio type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='i'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></initializatio></initialization><update><updat type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='i'></name></expression></updat></update></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='PLUS'><target type='NameExpr'><name type='SimpleName' identifier='ofs'></name></target><value type='IntegerLiteralExpr' value='16'></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='MINUS'><target type='NameExpr'><name type='SimpleName' identifier='totalLength'></name></target><value type='IntegerLiteralExpr' value='17'></value></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayCreationExpr'><elementType type='PrimitiveType' specificType='INT'></elementType><levels><level type='ArrayCreationLevel'><dimension type='NameExpr'><name type='SimpleName' identifier='count'></name></dimension></level></levels></initializer><name type='SimpleName' identifier='huffVals'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></expression><comment type='BlockComment' content=' Read the table '></comment></statement><statement type='ForStmt'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='i'></name></index><name type='NameExpr'><name type='SimpleName' identifier='huffVals'></name></name></target><value type='BinaryExpr' operator='BINARY AND'><left type='ArrayAccessExpr'><index type='BinaryExpr' operator='PLUS'><left type='NameExpr'><name type='SimpleName' identifier='ofs'></name></left><right type='NameExpr'><name type='SimpleName' identifier='i'></name></right></index><name type='NameExpr'><name type='SimpleName' identifier='reference'></name></name></left><right type='IntegerLiteralExpr' value='0xFF'></right></value></expression></statement></statements></body><compare type='BinaryExpr' operator='LESS'><left type='NameExpr'><name type='SimpleName' identifier='i'></name></left><right type='NameExpr'><name type='SimpleName' identifier='count'></name></right></compare><initialization><initializatio type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='i'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></initializatio></initialization><update><updat type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='i'></name></expression></updat></update></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='PLUS'><target type='NameExpr'><name type='SimpleName' identifier='ofs'></name></target><value type='NameExpr'><name type='SimpleName' identifier='count'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='MINUS'><target type='NameExpr'><name type='SimpleName' identifier='totalLength'></name></target><value type='NameExpr'><name type='SimpleName' identifier='count'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayCreationExpr'><elementType type='PrimitiveType' specificType='INT'></elementType><levels><level type='ArrayCreationLevel'><dimension type='IntegerLiteralExpr' value='50'></dimension></level></levels></initializer><name type='SimpleName' identifier='huffCodeLengths'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></expression><comment type='LineComment' content=' start with 50 and increment as needed'></comment></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='huffCodeLengthsIndex'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ForStmt'><body type='BlockStmt'><statements><statement type='ForStmt'><body type='BlockStmt'><statements><statement type='IfStmt'><condition type='BinaryExpr' operator='GREATER EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='huffCodeLengthsIndex'></name></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='length'></name><scope type='NameExpr'><name type='SimpleName' identifier='huffCodeLengths'></name></scope></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayCreationExpr'><elementType type='PrimitiveType' specificType='INT'></elementType><levels><level type='ArrayCreationLevel'><dimension type='BinaryExpr' operator='PLUS'><left type='FieldAccessExpr'><name type='SimpleName' identifier='length'></name><scope type='NameExpr'><name type='SimpleName' identifier='huffCodeLengths'></name></scope></left><right type='IntegerLiteralExpr' value='50'></right></dimension></level></levels></initializer><name type='SimpleName' identifier='newHuffCodeLengths'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='arraycopy'></name><scope type='NameExpr'><name type='SimpleName' identifier='System'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='huffCodeLengths'></name></argument><argument type='IntegerLiteralExpr' value='0'></argument><argument type='NameExpr'><name type='SimpleName' identifier='newHuffCodeLengths'></name></argument><argument type='IntegerLiteralExpr' value='0'></argument><argument type='FieldAccessExpr'><name type='SimpleName' identifier='length'></name><scope type='NameExpr'><name type='SimpleName' identifier='huffCodeLengths'></name></scope></argument></arguments></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='huffCodeLengths'></name></target><value type='NameExpr'><name type='SimpleName' identifier='newHuffCodeLengths'></name></value></expression></statement></statements></thenStmt></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='huffCodeLengthsIndex'></name></index><name type='NameExpr'><name type='SimpleName' identifier='huffCodeLengths'></name></name></target><value type='BinaryExpr' operator='PLUS'><left type='NameExpr'><name type='SimpleName' identifier='i'></name></left><right type='IntegerLiteralExpr' value='1'></right></value></expression></statement><statement type='ExpressionStmt'><expression type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='huffCodeLengthsIndex'></name></expression></expression></statement></statements></body><compare type='BinaryExpr' operator='LESS'><left type='NameExpr'><name type='SimpleName' identifier='j'></name></left><right type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='i'></name></index><name type='NameExpr'><name type='SimpleName' identifier='bits'></name></name></right></compare><initialization><initializatio type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='j'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></initializatio></initialization><update><updat type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='j'></name></expression></updat></update></statement></statements></body><compare type='BinaryExpr' operator='LESS'><left type='NameExpr'><name type='SimpleName' identifier='i'></name></left><right type='IntegerLiteralExpr' value='16'></right></compare><initialization><initializatio type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='i'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></initializatio></initialization><update><updat type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='i'></name></expression></updat></update></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='LESS'><left type='NameExpr'><name type='SimpleName' identifier='huffCodeLengthsIndex'></name></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='length'></name><scope type='NameExpr'><name type='SimpleName' identifier='huffCodeLengths'></name></scope></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayCreationExpr'><elementType type='PrimitiveType' specificType='INT'></elementType><levels><level type='ArrayCreationLevel'><dimension type='NameExpr'><name type='SimpleName' identifier='huffCodeLengthsIndex'></name></dimension></level></levels></initializer><name type='SimpleName' identifier='newHuffCodeLengths'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='arraycopy'></name><scope type='NameExpr'><name type='SimpleName' identifier='System'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='huffCodeLengths'></name></argument><argument type='IntegerLiteralExpr' value='0'></argument><argument type='NameExpr'><name type='SimpleName' identifier='newHuffCodeLengths'></name></argument><argument type='IntegerLiteralExpr' value='0'></argument><argument type='NameExpr'><name type='SimpleName' identifier='huffCodeLengthsIndex'></name></argument></arguments></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='huffCodeLengths'></name></target><value type='NameExpr'><name type='SimpleName' identifier='newHuffCodeLengths'></name></value></expression></statement></statements></thenStmt><comment type='BlockComment' content=' Truncate huffCodeLengths to the correct size '></comment></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayCreationExpr'><elementType type='PrimitiveType' specificType='INT'></elementType><levels><level type='ArrayCreationLevel'><dimension type='IntegerLiteralExpr' value='50'></dimension></level></levels></initializer><name type='SimpleName' identifier='huffCodes'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></expression><comment type='LineComment' content=' start with 50 and increment as needed'></comment></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='huffCodesIndex'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='1'></initializer><name type='SimpleName' identifier='k'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='code'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayAccessExpr'><index type='IntegerLiteralExpr' value='0'></index><name type='NameExpr'><name type='SimpleName' identifier='huffCodeLengths'></name></name></initializer><name type='SimpleName' identifier='si'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='p'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='WhileStmt'><body type='BlockStmt'><statements><statement type='WhileStmt'><body type='BlockStmt'><statements><statement type='IfStmt'><condition type='BinaryExpr' operator='GREATER EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='huffCodesIndex'></name></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='length'></name><scope type='NameExpr'><name type='SimpleName' identifier='huffCodes'></name></scope></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayCreationExpr'><elementType type='PrimitiveType' specificType='INT'></elementType><levels><level type='ArrayCreationLevel'><dimension type='BinaryExpr' operator='PLUS'><left type='FieldAccessExpr'><name type='SimpleName' identifier='length'></name><scope type='NameExpr'><name type='SimpleName' identifier='huffCodes'></name></scope></left><right type='IntegerLiteralExpr' value='50'></right></dimension></level></levels></initializer><name type='SimpleName' identifier='newHuffCodes'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='arraycopy'></name><scope type='NameExpr'><name type='SimpleName' identifier='System'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='huffCodes'></name></argument><argument type='IntegerLiteralExpr' value='0'></argument><argument type='NameExpr'><name type='SimpleName' identifier='newHuffCodes'></name></argument><argument type='IntegerLiteralExpr' value='0'></argument><argument type='FieldAccessExpr'><name type='SimpleName' identifier='length'></name><scope type='NameExpr'><name type='SimpleName' identifier='huffCodes'></name></scope></argument></arguments></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='huffCodes'></name></target><value type='NameExpr'><name type='SimpleName' identifier='newHuffCodes'></name></value></expression></statement></statements></thenStmt></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='huffCodesIndex'></name></index><name type='NameExpr'><name type='SimpleName' identifier='huffCodes'></name></name></target><value type='NameExpr'><name type='SimpleName' identifier='code'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='huffCodesIndex'></name></expression></expression></statement><statement type='ExpressionStmt'><expression type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='code'></name></expression></expression></statement><statement type='ExpressionStmt'><expression type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='p'></name></expression></expression></statement></statements></body><condition type='BinaryExpr' operator='AND'><left type='EnclosedExpr'><inner type='BinaryExpr' operator='LESS'><left type='NameExpr'><name type='SimpleName' identifier='p'></name></left><right type='NameExpr'><name type='SimpleName' identifier='huffCodeLengthsIndex'></name></right></inner></left><right type='EnclosedExpr'><inner type='BinaryExpr' operator='EQUALS'><left type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='p'></name></index><name type='NameExpr'><name type='SimpleName' identifier='huffCodeLengths'></name></name></left><right type='NameExpr'><name type='SimpleName' identifier='si'></name></right></inner></right></condition></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='MULTIPLY'><target type='NameExpr'><name type='SimpleName' identifier='code'></name></target><value type='IntegerLiteralExpr' value='2'></value></expression></statement><statement type='ExpressionStmt'><expression type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='si'></name></expression></expression></statement></statements></body><condition type='BinaryExpr' operator='LESS'><left type='NameExpr'><name type='SimpleName' identifier='p'></name></left><right type='NameExpr'><name type='SimpleName' identifier='huffCodeLengthsIndex'></name></right></condition></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='LESS'><left type='NameExpr'><name type='SimpleName' identifier='huffCodesIndex'></name></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='length'></name><scope type='NameExpr'><name type='SimpleName' identifier='huffCodes'></name></scope></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayCreationExpr'><elementType type='PrimitiveType' specificType='INT'></elementType><levels><level type='ArrayCreationLevel'><dimension type='NameExpr'><name type='SimpleName' identifier='huffCodesIndex'></name></dimension></level></levels></initializer><name type='SimpleName' identifier='newHuffCodes'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='arraycopy'></name><scope type='NameExpr'><name type='SimpleName' identifier='System'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='huffCodes'></name></argument><argument type='IntegerLiteralExpr' value='0'></argument><argument type='NameExpr'><name type='SimpleName' identifier='newHuffCodes'></name></argument><argument type='IntegerLiteralExpr' value='0'></argument><argument type='NameExpr'><name type='SimpleName' identifier='huffCodesIndex'></name></argument></arguments></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='huffCodes'></name></target><value type='NameExpr'><name type='SimpleName' identifier='newHuffCodes'></name></value></expression></statement></statements></thenStmt><comment type='BlockComment' content=' Truncate huffCodes to the correct size '></comment></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='k'></name></target><value type='IntegerLiteralExpr' value='0'></value></expression><comment type='BlockComment' content=' Calculate the maximum and minimum codes '></comment></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayCreationExpr'><elementType type='PrimitiveType' specificType='INT'></elementType><levels><level type='ArrayCreationLevel'><dimension type='IntegerLiteralExpr' value='16'></dimension></level></levels></initializer><name type='SimpleName' identifier='maxCodes'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayCreationExpr'><elementType type='PrimitiveType' specificType='INT'></elementType><levels><level type='ArrayCreationLevel'><dimension type='IntegerLiteralExpr' value='16'></dimension></level></levels></initializer><name type='SimpleName' identifier='minCodes'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayCreationExpr'><elementType type='PrimitiveType' specificType='INT'></elementType><levels><level type='ArrayCreationLevel'><dimension type='IntegerLiteralExpr' value='16'></dimension></level></levels></initializer><name type='SimpleName' identifier='valPtrs'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></expression></statement><statement type='ForStmt'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='i'></name></index><name type='NameExpr'><name type='SimpleName' identifier='bits'></name></name></initializer><name type='SimpleName' identifier='bSize'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='bSize'></name></left><right type='IntegerLiteralExpr' value='0'></right></condition><elseStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='i'></name></index><name type='NameExpr'><name type='SimpleName' identifier='valPtrs'></name></name></target><value type='NameExpr'><name type='SimpleName' identifier='k'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='i'></name></index><name type='NameExpr'><name type='SimpleName' identifier='minCodes'></name></name></target><value type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='k'></name></index><name type='NameExpr'><name type='SimpleName' identifier='huffCodes'></name></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='PLUS'><target type='NameExpr'><name type='SimpleName' identifier='k'></name></target><value type='NameExpr'><name type='SimpleName' identifier='bSize'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='i'></name></index><name type='NameExpr'><name type='SimpleName' identifier='maxCodes'></name></name></target><value type='ArrayAccessExpr'><index type='BinaryExpr' operator='MINUS'><left type='NameExpr'><name type='SimpleName' identifier='k'></name></left><right type='IntegerLiteralExpr' value='1'></right></index><name type='NameExpr'><name type='SimpleName' identifier='huffCodes'></name></name></value></expression></statement></statements></elseStmt><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='i'></name></index><name type='NameExpr'><name type='SimpleName' identifier='maxCodes'></name></name></target><value type='UnaryExpr' operator='MINUS'><expression type='IntegerLiteralExpr' value='1'></expression></value></expression></statement></statements></thenStmt></statement></statements></body><compare type='BinaryExpr' operator='LESS'><left type='NameExpr'><name type='SimpleName' identifier='i'></name></left><right type='IntegerLiteralExpr' value='16'></right></compare><initialization><initializatio type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='i'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></initializatio></initialization><update><updat type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='i'></name></expression></updat></update></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayCreationExpr'><elementType type='PrimitiveType' specificType='INT'></elementType><levels><level type='ArrayCreationLevel'><dimension type='IntegerLiteralExpr' value='256'></dimension></level></levels></initializer><name type='SimpleName' identifier='eHuffCodes'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></expression><comment type='BlockComment' content=' Calculate the eHuffman codes and lengths '></comment></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayCreationExpr'><elementType type='PrimitiveType' specificType='BYTE'></elementType><levels><level type='ArrayCreationLevel'><dimension type='IntegerLiteralExpr' value='256'></dimension></level></levels></initializer><name type='SimpleName' identifier='eHuffSize'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='BYTE'></componentType></type></variable></variables></expression></statement><statement type='ForStmt'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='i'></name></index><name type='NameExpr'><name type='SimpleName' identifier='huffVals'></name></name></index><name type='NameExpr'><name type='SimpleName' identifier='eHuffCodes'></name></name></target><value type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='i'></name></index><name type='NameExpr'><name type='SimpleName' identifier='huffCodes'></name></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='i'></name></index><name type='NameExpr'><name type='SimpleName' identifier='huffVals'></name></name></index><name type='NameExpr'><name type='SimpleName' identifier='eHuffSize'></name></name></target><value type='CastExpr'><expression type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='i'></name></index><name type='NameExpr'><name type='SimpleName' identifier='huffCodeLengths'></name></name></expression><type type='PrimitiveType' specificType='BYTE'></type></value></expression></statement></statements></body><compare type='BinaryExpr' operator='LESS'><left type='NameExpr'><name type='SimpleName' identifier='i'></name></left><right type='NameExpr'><name type='SimpleName' identifier='huffCodesIndex'></name></right></compare><initialization><initializatio type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='i'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></initializatio></initialization><update><updat type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='i'></name></expression></updat></update></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='JPEGHuffmanTable'></name></type><arguments><argument type='NameExpr'><name type='SimpleName' identifier='reference'></name></argument></arguments></initializer><name type='SimpleName' identifier='dhtTable'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='JPEGHuffmanTable'></name></type></variable></variables></expression><comment type='BlockComment' content=' Create the new PEGHuffmanTable and add it to the allTables array '></comment></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='tableClass'></name><scope type='NameExpr'><name type='SimpleName' identifier='dhtTable'></name></scope></target><value type='NameExpr'><name type='SimpleName' identifier='tc'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='tableIdentifier'></name><scope type='NameExpr'><name type='SimpleName' identifier='dhtTable'></name></scope></target><value type='NameExpr'><name type='SimpleName' identifier='tid'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='dhValues'></name><scope type='NameExpr'><name type='SimpleName' identifier='dhtTable'></name></scope></target><value type='NameExpr'><name type='SimpleName' identifier='huffVals'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='dhMinCodes'></name><scope type='NameExpr'><name type='SimpleName' identifier='dhtTable'></name></scope></target><value type='NameExpr'><name type='SimpleName' identifier='minCodes'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='dhMaxCodes'></name><scope type='NameExpr'><name type='SimpleName' identifier='dhtTable'></name></scope></target><value type='NameExpr'><name type='SimpleName' identifier='maxCodes'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='dhValPtrs'></name><scope type='NameExpr'><name type='SimpleName' identifier='dhtTable'></name></scope></target><value type='NameExpr'><name type='SimpleName' identifier='valPtrs'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='ehCodes'></name><scope type='NameExpr'><name type='SimpleName' identifier='dhtTable'></name></scope></target><value type='NameExpr'><name type='SimpleName' identifier='eHuffCodes'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='ehCodeLengths'></name><scope type='NameExpr'><name type='SimpleName' identifier='dhtTable'></name></scope></target><value type='NameExpr'><name type='SimpleName' identifier='eHuffSize'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='huffTableCount'></name></index><name type='NameExpr'><name type='SimpleName' identifier='huffTables'></name></name></target><value type='NameExpr'><name type='SimpleName' identifier='dhtTable'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='huffTableCount'></name></expression></expression></statement></statements></body><condition type='BinaryExpr' operator='GREATER'><left type='NameExpr'><name type='SimpleName' identifier='totalLength'></name></left><right type='IntegerLiteralExpr' value='0'></right></condition></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='allTables'></name></target><value type='ArrayCreationExpr'><elementType type='ClassOrInterfaceType'><name type='SimpleName' identifier='JPEGHuffmanTable'></name></elementType><levels><level type='ArrayCreationLevel'><dimension type='NameExpr'><name type='SimpleName' identifier='huffTableCount'></name></dimension></level></levels></value></expression></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='arraycopy'></name><scope type='NameExpr'><name type='SimpleName' identifier='System'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='huffTables'></name></argument><argument type='IntegerLiteralExpr' value='0'></argument><argument type='NameExpr'><name type='SimpleName' identifier='allTables'></name></argument><argument type='IntegerLiteralExpr' value='0'></argument><argument type='NameExpr'><name type='SimpleName' identifier='huffTableCount'></name></argument></arguments></expression></statement></statements></body><type type='VoidType'></type><name type='SimpleName' identifier='initialize'></name></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='FieldAccessExpr'><name type='SimpleName' identifier='DHT'></name><scope type='NameExpr'><name type='SimpleName' identifier='JPEGFileFormat'></name></scope></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='signature'></name><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member></members><modifiers><modifier type='Modifier' keyword='FINAL'></modifier></modifiers></type></types></root>
