<root type='CompilationUnit'><packageDeclaration type='PackageDeclaration'><name type='Name' identifier='image'><qualifier type='Name' identifier='internal'><qualifier type='Name' identifier='swt'><qualifier type='Name' identifier='eclipse'><qualifier type='Name' identifier='org'></qualifier></qualifier></qualifier></qualifier></name></packageDeclaration><comment type='JavadocComment' content=' Copyright c 2000 2003 IBM Corporation and others All rights reserved This program and the accompanying materials are made available under the terms of the Eclipse Public License v1 0 which accompanies this distribution and is available at http www eclipse org legal epl v10 html Contributors IBM Corporation initial API and implementation '></comment><types><type type='ClassOrInterfaceDeclaration' isInterface='false'><name type='SimpleName' identifier='PngHuffmanTables'></name><members><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='literalTable'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngHuffmanTable'></name></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='distanceTable'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngHuffmanTable'></name></type></variable></variables></member><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='STATIC'></modifier></modifiers><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='FixedLiteralTable'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngHuffmanTable'></name></type></variable></variables></member><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='STATIC'></modifier></modifiers><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='FixedDistanceTable'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngHuffmanTable'></name></type></variable></variables></member><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='STATIC'></modifier><modifier type='Modifier' keyword='FINAL'></modifier></modifiers><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='288'></initializer><name type='SimpleName' identifier='LiteralTableSize'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></member><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='STATIC'></modifier><modifier type='Modifier' keyword='FINAL'></modifier></modifiers><variables><variable type='VariableDeclarator'><initializer type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='8'></value></values></initializer><name type='SimpleName' identifier='FixedLiteralLengths'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></member><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='STATIC'></modifier><modifier type='Modifier' keyword='FINAL'></modifier></modifiers><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='32'></initializer><name type='SimpleName' identifier='DistanceTableSize'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></member><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='STATIC'></modifier><modifier type='Modifier' keyword='FINAL'></modifier></modifiers><variables><variable type='VariableDeclarator'><initializer type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='5'></value></values></initializer><name type='SimpleName' identifier='FixedDistanceLengths'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></member><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='STATIC'></modifier><modifier type='Modifier' keyword='FINAL'></modifier></modifiers><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='19'></initializer><name type='SimpleName' identifier='LengthCodeTableSize'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></member><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='STATIC'></modifier><modifier type='Modifier' keyword='FINAL'></modifier></modifiers><variables><variable type='VariableDeclarator'><initializer type='ArrayInitializerExpr'><values><value type='IntegerLiteralExpr' value='16'></value><value type='IntegerLiteralExpr' value='17'></value><value type='IntegerLiteralExpr' value='18'></value><value type='IntegerLiteralExpr' value='0'></value><value type='IntegerLiteralExpr' value='8'></value><value type='IntegerLiteralExpr' value='7'></value><value type='IntegerLiteralExpr' value='9'></value><value type='IntegerLiteralExpr' value='6'></value><value type='IntegerLiteralExpr' value='10'></value><value type='IntegerLiteralExpr' value='5'></value><value type='IntegerLiteralExpr' value='11'></value><value type='IntegerLiteralExpr' value='4'></value><value type='IntegerLiteralExpr' value='12'></value><value type='IntegerLiteralExpr' value='3'></value><value type='IntegerLiteralExpr' value='13'></value><value type='IntegerLiteralExpr' value='2'></value><value type='IntegerLiteralExpr' value='14'></value><value type='IntegerLiteralExpr' value='1'></value><value type='IntegerLiteralExpr' value='15'></value></values></initializer><name type='SimpleName' identifier='LengthCodeOrder'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngHuffmanTables'></name></type><arguments><argument type='NameExpr'><name type='SimpleName' identifier='stream'></name></argument></arguments></expression></statement></statements></body><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngHuffmanTables'></name></type><name type='SimpleName' identifier='getDynamicTables'></name><modifiers><modifier type='Modifier' keyword='STATIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='stream'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngDecodingDataStream'></name></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngHuffmanTables'></name></type></expression></statement></statements></body><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngHuffmanTables'></name></type><name type='SimpleName' identifier='getFixedTables'></name><modifiers><modifier type='Modifier' keyword='STATIC'></modifier></modifiers></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='FixedLiteralTable'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='FixedLiteralTable'></name></target><value type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngHuffmanTable'></name></type><arguments><argument type='NameExpr'><name type='SimpleName' identifier='FixedLiteralLengths'></name></argument></arguments></value></expression></statement></statements></thenStmt></statement><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='FixedLiteralTable'></name></expression></statement></statements></body><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngHuffmanTable'></name></type><name type='SimpleName' identifier='getFixedLiteralTable'></name><modifiers><modifier type='Modifier' keyword='PRIVATE'></modifier></modifiers></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='FixedDistanceTable'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='FixedDistanceTable'></name></target><value type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngHuffmanTable'></name></type><arguments><argument type='NameExpr'><name type='SimpleName' identifier='FixedDistanceLengths'></name></argument></arguments></value></expression></statement></statements></thenStmt></statement><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='FixedDistanceTable'></name></expression></statement></statements></body><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngHuffmanTable'></name></type><name type='SimpleName' identifier='getFixedDistanceTable'></name><modifiers><modifier type='Modifier' keyword='PRIVATE'></modifier></modifiers></member><member type='ConstructorDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='literalTable'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='getFixedLiteralTable'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='distanceTable'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='getFixedDistanceTable'></name></value></expression></statement></statements></body><name type='SimpleName' identifier='PngHuffmanTables'></name><modifiers><modifier type='Modifier' keyword='PRIVATE'></modifier></modifiers></member><member type='ConstructorDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='BinaryExpr' operator='PLUS'><left type='FieldAccessExpr'><name type='SimpleName' identifier='FIRST LENGTH CODE'></name><scope type='NameExpr'><name type='SimpleName' identifier='PngLzBlockReader'></name></scope></left><right type='MethodCallExpr'><name type='SimpleName' identifier='getNextIdatBits'></name><scope type='NameExpr'><name type='SimpleName' identifier='stream'></name></scope><arguments><argument type='IntegerLiteralExpr' value='5'></argument></arguments></right></initializer><name type='SimpleName' identifier='literals'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='BinaryExpr' operator='PLUS'><left type='FieldAccessExpr'><name type='SimpleName' identifier='FIRST DISTANCE CODE'></name><scope type='NameExpr'><name type='SimpleName' identifier='PngLzBlockReader'></name></scope></left><right type='MethodCallExpr'><name type='SimpleName' identifier='getNextIdatBits'></name><scope type='NameExpr'><name type='SimpleName' identifier='stream'></name></scope><arguments><argument type='IntegerLiteralExpr' value='5'></argument></arguments></right></initializer><name type='SimpleName' identifier='distances'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='BinaryExpr' operator='PLUS'><left type='FieldAccessExpr'><name type='SimpleName' identifier='FIRST CODE LENGTH CODE'></name><scope type='NameExpr'><name type='SimpleName' identifier='PngLzBlockReader'></name></scope></left><right type='MethodCallExpr'><name type='SimpleName' identifier='getNextIdatBits'></name><scope type='NameExpr'><name type='SimpleName' identifier='stream'></name></scope><arguments><argument type='IntegerLiteralExpr' value='4'></argument></arguments></right></initializer><name type='SimpleName' identifier='codeLengthCodes'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='GREATER'><left type='NameExpr'><name type='SimpleName' identifier='codeLengthCodes'></name></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='LAST CODE LENGTH CODE'></name><scope type='NameExpr'><name type='SimpleName' identifier='PngLzBlockReader'></name></scope></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='error'></name><scope type='NameExpr'><name type='SimpleName' identifier='stream'></name></scope></expression></statement></statements></thenStmt></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayCreationExpr'><elementType type='PrimitiveType' specificType='INT'></elementType><levels><level type='ArrayCreationLevel'><dimension type='NameExpr'><name type='SimpleName' identifier='LengthCodeTableSize'></name></dimension></level></levels></initializer><name type='SimpleName' identifier='lengthCodes'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></expression><comment type='BlockComment' content=' Tricky tricky tricky The length codes are stored in a very odd order For the order see the definition of the static field lengthCodeOrder Also the data may not contain values for all the codes It may just contain values for the first X number of codes The table should be of size LengthCodeTableSize regardless of the number of values actually given in the table '></comment></statement><statement type='ForStmt'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='i'></name></index><name type='NameExpr'><name type='SimpleName' identifier='LengthCodeOrder'></name></name></index><name type='NameExpr'><name type='SimpleName' identifier='lengthCodes'></name></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='getNextIdatBits'></name><scope type='NameExpr'><name type='SimpleName' identifier='stream'></name></scope><arguments><argument type='IntegerLiteralExpr' value='3'></argument></arguments></value></expression></statement></statements></body><compare type='BinaryExpr' operator='LESS'><left type='NameExpr'><name type='SimpleName' identifier='i'></name></left><right type='NameExpr'><name type='SimpleName' identifier='codeLengthCodes'></name></right></compare><initialization><initializatio type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='i'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></initializatio></initialization><update><updat type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='i'></name></expression></updat></update></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngHuffmanTable'></name></type><arguments><argument type='NameExpr'><name type='SimpleName' identifier='lengthCodes'></name></argument></arguments></initializer><name type='SimpleName' identifier='codeLengthsTable'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngHuffmanTable'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='readLengths'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='stream'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='literals'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='codeLengthsTable'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='LiteralTableSize'></name></argument></arguments></initializer><name type='SimpleName' identifier='literalLengths'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='readLengths'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='stream'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='distances'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='codeLengthsTable'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='DistanceTableSize'></name></argument></arguments></initializer><name type='SimpleName' identifier='distanceLengths'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='literalTable'></name></target><value type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngHuffmanTable'></name></type><arguments><argument type='NameExpr'><name type='SimpleName' identifier='literalLengths'></name></argument></arguments></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='distanceTable'></name></target><value type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngHuffmanTable'></name></type><arguments><argument type='NameExpr'><name type='SimpleName' identifier='distanceLengths'></name></argument></arguments></value></expression></statement></statements></body><name type='SimpleName' identifier='PngHuffmanTables'></name><modifiers><modifier type='Modifier' keyword='PRIVATE'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='stream'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngDecodingDataStream'></name></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='ArrayCreationExpr'><elementType type='PrimitiveType' specificType='INT'></elementType><levels><level type='ArrayCreationLevel'><dimension type='NameExpr'><name type='SimpleName' identifier='tableSize'></name></dimension></level></levels></initializer><name type='SimpleName' identifier='lengths'></name><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type></variable></variables></expression></statement><statement type='ForStmt'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='getNextValue'></name><scope type='NameExpr'><name type='SimpleName' identifier='lengthsTable'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='stream'></name></argument></arguments></initializer><name type='SimpleName' identifier='value'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='LESS'><left type='NameExpr'><name type='SimpleName' identifier='value'></name></left><right type='IntegerLiteralExpr' value='16'></right></condition><elseStmt type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='value'></name></left><right type='IntegerLiteralExpr' value='16'></right></condition><elseStmt type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='value'></name></left><right type='IntegerLiteralExpr' value='17'></right></condition><elseStmt type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='value'></name></left><right type='IntegerLiteralExpr' value='18'></right></condition><elseStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='error'></name><scope type='NameExpr'><name type='SimpleName' identifier='stream'></name></scope></expression></statement></statements></elseStmt><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='BinaryExpr' operator='PLUS'><left type='MethodCallExpr'><name type='SimpleName' identifier='getNextIdatBits'></name><scope type='NameExpr'><name type='SimpleName' identifier='stream'></name></scope><arguments><argument type='IntegerLiteralExpr' value='7'></argument></arguments></left><right type='IntegerLiteralExpr' value='11'></right></initializer><name type='SimpleName' identifier='count'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression><comment type='LineComment' content=' Repeat 0 11 138 times '></comment></statement><statement type='ForStmt'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='index'></name></index><name type='NameExpr'><name type='SimpleName' identifier='lengths'></name></name></target><value type='IntegerLiteralExpr' value='0'></value></expression></statement><statement type='ExpressionStmt'><expression type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='index'></name></expression></expression></statement></statements></body><compare type='BinaryExpr' operator='LESS'><left type='NameExpr'><name type='SimpleName' identifier='i'></name></left><right type='NameExpr'><name type='SimpleName' identifier='count'></name></right></compare><initialization><initializatio type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='i'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></initializatio></initialization><update><updat type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='i'></name></expression></updat></update></statement></statements></thenStmt></elseStmt><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='BinaryExpr' operator='PLUS'><left type='MethodCallExpr'><name type='SimpleName' identifier='getNextIdatBits'></name><scope type='NameExpr'><name type='SimpleName' identifier='stream'></name></scope><arguments><argument type='IntegerLiteralExpr' value='3'></argument></arguments></left><right type='IntegerLiteralExpr' value='3'></right></initializer><name type='SimpleName' identifier='count'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression><comment type='LineComment' content=' Repeat 0 3 10 times '></comment></statement><statement type='ForStmt'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='index'></name></index><name type='NameExpr'><name type='SimpleName' identifier='lengths'></name></name></target><value type='IntegerLiteralExpr' value='0'></value></expression></statement><statement type='ExpressionStmt'><expression type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='index'></name></expression></expression></statement></statements></body><compare type='BinaryExpr' operator='LESS'><left type='NameExpr'><name type='SimpleName' identifier='i'></name></left><right type='NameExpr'><name type='SimpleName' identifier='count'></name></right></compare><initialization><initializatio type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='i'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></initializatio></initialization><update><updat type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='i'></name></expression></updat></update></statement></statements></thenStmt></elseStmt><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='BinaryExpr' operator='PLUS'><left type='MethodCallExpr'><name type='SimpleName' identifier='getNextIdatBits'></name><scope type='NameExpr'><name type='SimpleName' identifier='stream'></name></scope><arguments><argument type='IntegerLiteralExpr' value='2'></argument></arguments></left><right type='IntegerLiteralExpr' value='3'></right></initializer><name type='SimpleName' identifier='count'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression><comment type='LineComment' content=' Repeat the previous code 3 6 times '></comment></statement><statement type='ForStmt'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='index'></name></index><name type='NameExpr'><name type='SimpleName' identifier='lengths'></name></name></target><value type='ArrayAccessExpr'><index type='BinaryExpr' operator='MINUS'><left type='NameExpr'><name type='SimpleName' identifier='index'></name></left><right type='IntegerLiteralExpr' value='1'></right></index><name type='NameExpr'><name type='SimpleName' identifier='lengths'></name></name></value></expression></statement><statement type='ExpressionStmt'><expression type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='index'></name></expression></expression></statement></statements></body><compare type='BinaryExpr' operator='LESS'><left type='NameExpr'><name type='SimpleName' identifier='i'></name></left><right type='NameExpr'><name type='SimpleName' identifier='count'></name></right></compare><initialization><initializatio type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='i'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></initializatio></initialization><update><updat type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='i'></name></expression></updat></update></statement></statements></thenStmt></elseStmt><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='ArrayAccessExpr'><index type='NameExpr'><name type='SimpleName' identifier='index'></name></index><name type='NameExpr'><name type='SimpleName' identifier='lengths'></name></name></target><value type='NameExpr'><name type='SimpleName' identifier='value'></name></value></expression><comment type='LineComment' content=' Literal value'></comment></statement><statement type='ExpressionStmt'><expression type='UnaryExpr' operator='POSTFIX INCREMENT'><expression type='NameExpr'><name type='SimpleName' identifier='index'></name></expression></expression></statement></statements></thenStmt></statement></statements></body><compare type='BinaryExpr' operator='LESS'><left type='NameExpr'><name type='SimpleName' identifier='index'></name></left><right type='NameExpr'><name type='SimpleName' identifier='numLengths'></name></right></compare><initialization><initializatio type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='IntegerLiteralExpr' value='0'></initializer><name type='SimpleName' identifier='index'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></initializatio></initialization></statement><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='lengths'></name></expression></statement></statements></body><type type='ArrayType' origin='TYPE'><componentType type='PrimitiveType' specificType='INT'></componentType></type><name type='SimpleName' identifier='readLengths'></name><modifiers><modifier type='Modifier' keyword='PRIVATE'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='stream'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngDecodingDataStream'></name></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='numLengths'></name><type type='PrimitiveType' specificType='INT'></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='lengthsTable'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngHuffmanTable'></name></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='tableSize'></name><type type='PrimitiveType' specificType='INT'></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='getNextValue'></name><scope type='NameExpr'><name type='SimpleName' identifier='literalTable'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='stream'></name></argument></arguments></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='getNextLiteralValue'></name><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='stream'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngDecodingDataStream'></name></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='getNextValue'></name><scope type='NameExpr'><name type='SimpleName' identifier='distanceTable'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='stream'></name></argument></arguments></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='getNextDistanceValue'></name><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='stream'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngDecodingDataStream'></name></type></parameter></parameters></member></members><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></type></types></root>
