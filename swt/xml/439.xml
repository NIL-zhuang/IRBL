<root type='CompilationUnit'><packageDeclaration type='PackageDeclaration'><name type='Name' identifier='widgets'><qualifier type='Name' identifier='swt'><qualifier type='Name' identifier='eclipse'><qualifier type='Name' identifier='org'></qualifier></qualifier></qualifier></name></packageDeclaration><comment type='JavadocComment' content=' Copyright c 2000 2005 IBM Corporation and others All rights reserved This program and the accompanying materials are made available under the terms of the Eclipse Public License v1 0 which accompanies this distribution and is available at http www eclipse org legal epl v10 html Contributors IBM Corporation initial API and implementation '></comment><imports><import type='ImportDeclaration' isAsterisk='true' isStatic='false'><name type='Name' identifier='swt'><qualifier type='Name' identifier='eclipse'><qualifier type='Name' identifier='org'></qualifier></qualifier></name></import></imports><types><type type='ClassOrInterfaceDeclaration' isInterface='false'><name type='SimpleName' identifier='Dialog'></name><members><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='style'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='parent'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Shell'></name></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='title'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></type></variable></variables></member><member type='ConstructorDeclaration'><body type='BlockStmt'><statements><statement type='ExplicitConstructorInvocationStmt' isThis='true'><arguments><argument type='NameExpr'><name type='SimpleName' identifier='parent'></name></argument><argument type='FieldAccessExpr'><name type='SimpleName' identifier='PRIMARY MODAL'></name><scope type='NameExpr'><name type='SimpleName' identifier='SWT'></name></scope></argument></arguments></statement></statements></body><name type='SimpleName' identifier='Dialog'></name><comment type='JavadocComment' content=' Constructs a new instance of this class given only its parent param parent a shell which will be the parent of the new instance exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the parent is null li ul exception SWTException ul li ERROR THREAD INVALID ACCESS if not called from the thread that created the parent li ul '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='parent'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Shell'></name></type></parameter></parameters></member><member type='ConstructorDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='checkParent'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='parent'></name></argument></arguments></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='parent'></name><scope type='ThisExpr'></scope></target><value type='NameExpr'><name type='SimpleName' identifier='parent'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='style'></name><scope type='ThisExpr'></scope></target><value type='NameExpr'><name type='SimpleName' identifier='style'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='title'></name></target><value type='StringLiteralExpr' value=''></value></expression></statement></statements></body><name type='SimpleName' identifier='Dialog'></name><comment type='JavadocComment' content=' Constructs a new instance of this class given its parent and a style value describing its behavior and appearance p The style value is either one of the style constants defined in class code SWT code which is applicable to instances of this class or must be built by em bitwise OR em ing together that is using the code int code operator two or more of those code SWT code style constants The class description lists the style constants that are applicable to the class Style bits are also inherited from superclasses param parent a shell which will be the parent of the new instance param style the style of dialog to construct exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the parent is null li ul exception SWTException ul li ERROR THREAD INVALID ACCESS if not called from the thread that created the parent li ul '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='parent'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Shell'></name></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='style'></name><type type='PrimitiveType' specificType='INT'></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='IfStmt'><condition type='UnaryExpr' operator='LOGICAL COMPLEMENT'><expression type='MethodCallExpr'><name type='SimpleName' identifier='isValidClass'></name><scope type='NameExpr'><name type='SimpleName' identifier='Display'></name></scope><arguments><argument type='MethodCallExpr'><name type='SimpleName' identifier='getClass'></name></argument></arguments></expression></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='error'></name><arguments><argument type='FieldAccessExpr'><name type='SimpleName' identifier='ERROR INVALID SUBCLASS'></name><scope type='NameExpr'><name type='SimpleName' identifier='SWT'></name></scope></argument></arguments></expression></statement></statements></thenStmt></statement></statements></body><type type='VoidType'></type><name type='SimpleName' identifier='checkSubclass'></name><comment type='JavadocComment' content=' Checks that this class can be subclassed p IMPORTANT See the comment in code Widget checkSubclass code p exception SWTException ul li ERROR INVALID SUBCLASS if this class is not an allowed subclass li ul see Widget checkSubclass '></comment><modifiers><modifier type='Modifier' keyword='PROTECTED'></modifier></modifiers></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='parent'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='error'></name><arguments><argument type='FieldAccessExpr'><name type='SimpleName' identifier='ERROR NULL ARGUMENT'></name><scope type='NameExpr'><name type='SimpleName' identifier='SWT'></name></scope></argument></arguments></expression></thenStmt></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='checkWidget'></name><scope type='NameExpr'><name type='SimpleName' identifier='parent'></name></scope></expression></statement></statements></body><type type='VoidType'></type><name type='SimpleName' identifier='checkParent'></name><comment type='JavadocComment' content=' Throws an exception if the specified widget can not be used as a parent for the receiver exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the parent is null li li ERROR INVALID ARGUMENT if the parent is disposed li ul exception SWTException ul li ERROR THREAD INVALID ACCESS if not called from the thread that created the parent li ul '></comment><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='parent'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Shell'></name></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='error'></name><scope type='NameExpr'><name type='SimpleName' identifier='SWT'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='code'></name></argument></arguments></expression></statement></statements></body><type type='VoidType'></type><name type='SimpleName' identifier='error'></name><comment type='JavadocComment' content=' Does whatever dialog specific cleanup is required and then uses the code in code SWTError error code to handle the error param code the descriptive error code see SWT error int '></comment><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='code'></name><type type='PrimitiveType' specificType='INT'></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='parent'></name></expression></statement></statements></body><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Shell'></name></type><name type='SimpleName' identifier='getParent'></name><comment type='JavadocComment' content=' Returns the receiver s parent which must be a code Shell code or null return the receiver s parent exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='style'></name></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='getStyle'></name><comment type='JavadocComment' content=' Returns the receiver s style information p Note that the value which is returned by this method em may not match em the value which was provided to the constructor when the receiver was created p return the style bits exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='title'></name></expression></statement></statements></body><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></type><name type='SimpleName' identifier='getText'></name><comment type='JavadocComment' content=' Returns the receiver s text which is the string that the window manager will typically display as the receiver s em title em If the text has not previously been set returns an empty string return the text exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='string'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='error'></name><arguments><argument type='FieldAccessExpr'><name type='SimpleName' identifier='ERROR NULL ARGUMENT'></name><scope type='NameExpr'><name type='SimpleName' identifier='SWT'></name></scope></argument></arguments></expression></thenStmt></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='title'></name></target><value type='NameExpr'><name type='SimpleName' identifier='string'></name></value></expression></statement></statements></body><type type='VoidType'></type><name type='SimpleName' identifier='setText'></name><comment type='JavadocComment' content=' Sets the receiver s text which is the string that the window manager will typically display as the receiver s em title em to the argument which must not be null param string the new text exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the text is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='string'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></type></parameter></parameters></member></members><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier><modifier type='Modifier' keyword='ABSTRACT'></modifier></modifiers></type></types></root>
