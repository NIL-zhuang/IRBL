<root type='CompilationUnit'><packageDeclaration type='PackageDeclaration'><name type='Name' identifier='image'><qualifier type='Name' identifier='internal'><qualifier type='Name' identifier='swt'><qualifier type='Name' identifier='eclipse'><qualifier type='Name' identifier='org'></qualifier></qualifier></qualifier></qualifier></name></packageDeclaration><comment type='JavadocComment' content=' Copyright c 2000 2003 IBM Corporation and others All rights reserved This program and the accompanying materials are made available under the terms of the Eclipse Public License v1 0 which accompanies this distribution and is available at http www eclipse org legal epl v10 html Contributors IBM Corporation initial API and implementation '></comment><imports><import type='ImportDeclaration' isAsterisk='true' isStatic='false'><name type='Name' identifier='swt'><qualifier type='Name' identifier='eclipse'><qualifier type='Name' identifier='org'></qualifier></qualifier></name></import></imports><types><type type='ClassOrInterfaceDeclaration' isInterface='false'><name type='SimpleName' identifier='PngChunkReader'></name><members><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='inputStream'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='LEDataInputStream'></name></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='readState'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngFileReadState'></name></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='headerChunk'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngIhdrChunk'></name></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='paletteChunk'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngPlteChunk'></name></type></variable></variables></member><member type='ConstructorDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='inputStream'></name><scope type='ThisExpr'></scope></target><value type='NameExpr'><name type='SimpleName' identifier='inputStream'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='readState'></name></target><value type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngFileReadState'></name></type></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='headerChunk'></name></target><value type='NullLiteralExpr'></value></expression></statement></statements></body><name type='SimpleName' identifier='PngChunkReader'></name><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='inputStream'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='LEDataInputStream'></name></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='headerChunk'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='BlockStmt'><statements><statement type='TryStmt'><tryBlock type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='readNextFromStream'></name><scope type='NameExpr'><name type='SimpleName' identifier='PngChunk'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='inputStream'></name></argument></arguments></initializer><name type='SimpleName' identifier='chunk'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngChunk'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='headerChunk'></name></target><value type='CastExpr'><expression type='NameExpr'><name type='SimpleName' identifier='chunk'></name></expression><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngIhdrChunk'></name></type></value></expression></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='validate'></name><scope type='NameExpr'><name type='SimpleName' identifier='headerChunk'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='readState'></name></argument><argument type='NullLiteralExpr'></argument></arguments></expression></statement></statements></tryBlock><catchClauses><catchClause type='CatchClause'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='error'></name><scope type='NameExpr'><name type='SimpleName' identifier='SWT'></name></scope><arguments><argument type='FieldAccessExpr'><name type='SimpleName' identifier='ERROR INVALID IMAGE'></name><scope type='NameExpr'><name type='SimpleName' identifier='SWT'></name></scope></argument></arguments></expression></statement></statements></body><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='e'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='ClassCastException'></name></type></parameter></catchClause></catchClauses></statement></statements></thenStmt></statement><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='headerChunk'></name></expression></statement></statements></body><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngIhdrChunk'></name></type><name type='SimpleName' identifier='getIhdrChunk'></name></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='headerChunk'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='ReturnStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='getIhdrChunk'></name></expression></thenStmt></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='readNextFromStream'></name><scope type='NameExpr'><name type='SimpleName' identifier='PngChunk'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='inputStream'></name></argument></arguments></initializer><name type='SimpleName' identifier='chunk'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngChunk'></name></type></variable></variables></expression></statement><statement type='SwitchStmt'><selector type='MethodCallExpr'><name type='SimpleName' identifier='getChunkType'></name><scope type='NameExpr'><name type='SimpleName' identifier='chunk'></name></scope></selector><entries><entrie type='SwitchEntry' specificType='STATEMENT GROUP'><labels><label type='FieldAccessExpr'><name type='SimpleName' identifier='CHUNK tRNS'></name><scope type='NameExpr'><name type='SimpleName' identifier='PngChunk'></name></scope></label></labels><statements><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='validate'></name><scope type='EnclosedExpr'><inner type='CastExpr'><expression type='NameExpr'><name type='SimpleName' identifier='chunk'></name></expression><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngTrnsChunk'></name></type></inner></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='readState'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='headerChunk'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='paletteChunk'></name></argument></arguments></expression></statement><statement type='BreakStmt'></statement></statements></entrie><entrie type='SwitchEntry' specificType='STATEMENT GROUP'><labels><label type='FieldAccessExpr'><name type='SimpleName' identifier='CHUNK PLTE'></name><scope type='NameExpr'><name type='SimpleName' identifier='PngChunk'></name></scope></label></labels><statements><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='validate'></name><scope type='NameExpr'><name type='SimpleName' identifier='chunk'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='readState'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='headerChunk'></name></argument></arguments></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='paletteChunk'></name></target><value type='CastExpr'><expression type='NameExpr'><name type='SimpleName' identifier='chunk'></name></expression><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngPlteChunk'></name></type></value></expression></statement><statement type='BreakStmt'></statement></statements></entrie><entrie type='SwitchEntry' specificType='STATEMENT GROUP'><statements><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='validate'></name><scope type='NameExpr'><name type='SimpleName' identifier='chunk'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='readState'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='headerChunk'></name></argument></arguments></expression></statement></statements></entrie></entries></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='AND'><left type='FieldAccessExpr'><name type='SimpleName' identifier='readIDAT'></name><scope type='NameExpr'><name type='SimpleName' identifier='readState'></name></scope></left><right type='UnaryExpr' operator='LOGICAL COMPLEMENT'><expression type='EnclosedExpr'><inner type='BinaryExpr' operator='EQUALS'><left type='MethodCallExpr'><name type='SimpleName' identifier='getChunkType'></name><scope type='NameExpr'><name type='SimpleName' identifier='chunk'></name></scope></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='CHUNK IDAT'></name><scope type='NameExpr'><name type='SimpleName' identifier='PngChunk'></name></scope></right></inner></expression></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='readPixelData'></name><scope type='NameExpr'><name type='SimpleName' identifier='readState'></name></scope></target><value type='BooleanLiteralExpr' value='true'></value></expression></statement></statements></thenStmt></statement><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='chunk'></name></expression></statement></statements></body><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='PngChunk'></name></type><name type='SimpleName' identifier='readNextChunk'></name></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='FieldAccessExpr'><name type='SimpleName' identifier='readPixelData'></name><scope type='NameExpr'><name type='SimpleName' identifier='readState'></name></scope></expression></statement></statements></body><type type='PrimitiveType' specificType='BOOLEAN'></type><name type='SimpleName' identifier='readPixelData'></name></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ReturnStmt'><expression type='UnaryExpr' operator='LOGICAL COMPLEMENT'><expression type='FieldAccessExpr'><name type='SimpleName' identifier='readIEND'></name><scope type='NameExpr'><name type='SimpleName' identifier='readState'></name></scope></expression></expression></statement></statements></body><type type='PrimitiveType' specificType='BOOLEAN'></type><name type='SimpleName' identifier='hasMoreChunks'></name></member></members><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></type></types></root>
