<root type='CompilationUnit'><packageDeclaration type='PackageDeclaration'><name type='Name' identifier='events'><qualifier type='Name' identifier='swt'><qualifier type='Name' identifier='eclipse'><qualifier type='Name' identifier='org'></qualifier></qualifier></qualifier></name></packageDeclaration><comment type='JavadocComment' content=' Copyright c 2000 2005 IBM Corporation and others All rights reserved This program and the accompanying materials are made available under the terms of the Eclipse Public License v1 0 which accompanies this distribution and is available at http www eclipse org legal epl v10 html Contributors IBM Corporation initial API and implementation '></comment><imports><import type='ImportDeclaration' isAsterisk='true' isStatic='false'><name type='Name' identifier='widgets'><qualifier type='Name' identifier='swt'><qualifier type='Name' identifier='eclipse'><qualifier type='Name' identifier='org'></qualifier></qualifier></qualifier></name></import></imports><types><type type='ClassOrInterfaceDeclaration' isInterface='false'><name type='SimpleName' identifier='TraverseEvent'></name><extendedTypes><extendedType type='ClassOrInterfaceType'><name type='SimpleName' identifier='KeyEvent'></name></extendedType></extendedTypes><members><member type='FieldDeclaration'><comment type='JavadocComment' content=' The traversal type p ul li link org eclipse swt SWT TRAVERSE NONE li li link org eclipse swt SWT TRAVERSE ESCAPE li li link org eclipse swt SWT TRAVERSE RETURN li li link org eclipse swt SWT TRAVERSE TAB NEXT li li link org eclipse swt SWT TRAVERSE TAB PREVIOUS li li link org eclipse swt SWT TRAVERSE ARROW NEXT li li link org eclipse swt SWT TRAVERSE ARROW PREVIOUS li li link org eclipse swt SWT TRAVERSE MNEMONIC li li link org eclipse swt SWT TRAVERSE PAGE NEXT li li link org eclipse swt SWT TRAVERSE PAGE PREVIOUS li ul p Setting this field will change the type of traversal For example setting the detail to code TRAVERSE NONE code causes no traversal action to be taken When used in conjuction with the code doit code field the traversal detail field can be useful when overriding the default traversal mechanism for a control For example setting the doit field to code false code will cancel the operation and allow the traversal key stroke to be delivered to the control Setting the doit field to code true code indicates that the traversal described by the detail field is to be performed '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='detail'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></member><member type='FieldDeclaration'><modifiers><modifier type='Modifier' keyword='STATIC'></modifier><modifier type='Modifier' keyword='FINAL'></modifier></modifiers><variables><variable type='VariableDeclarator'><initializer type='LongLiteralExpr' value='3257565105301239349L'></initializer><name type='SimpleName' identifier='serialVersionUID'></name><type type='PrimitiveType' specificType='LONG'></type></variable></variables></member><member type='ConstructorDeclaration'><body type='BlockStmt'><statements><statement type='ExplicitConstructorInvocationStmt' isThis='false'><arguments><argument type='NameExpr'><name type='SimpleName' identifier='e'></name></argument></arguments></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='detail'></name><scope type='ThisExpr'></scope></target><value type='FieldAccessExpr'><name type='SimpleName' identifier='detail'></name><scope type='NameExpr'><name type='SimpleName' identifier='e'></name></scope></value></expression></statement></statements></body><name type='SimpleName' identifier='TraverseEvent'></name><comment type='JavadocComment' content=' Constructs a new instance of this class based on the information in the given untyped event param e the untyped event containing the information '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='e'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Event'></name></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='toString'></name><scope type='SuperExpr'></scope></initializer><name type='SimpleName' identifier='string'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></type></variable></variables></expression></statement><statement type='ReturnStmt'><expression type='BinaryExpr' operator='PLUS'><left type='BinaryExpr' operator='PLUS'><left type='BinaryExpr' operator='PLUS'><left type='MethodCallExpr'><name type='SimpleName' identifier='substring'></name><scope type='NameExpr'><name type='SimpleName' identifier='string'></name></scope><comment type='LineComment' content=' remove trailing '></comment><arguments><argument type='IntegerLiteralExpr' value='0'></argument><argument type='BinaryExpr' operator='MINUS'><left type='MethodCallExpr'><name type='SimpleName' identifier='length'></name><scope type='NameExpr'><name type='SimpleName' identifier='string'></name></scope></left><right type='IntegerLiteralExpr' value='1'></right></argument></arguments></left><right type='StringLiteralExpr' value=' detail '></right></left><right type='NameExpr'><name type='SimpleName' identifier='detail'></name></right></left><right type='StringLiteralExpr' value=' '></right></expression></statement></statements></body><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></type><name type='SimpleName' identifier='toString'></name><comment type='JavadocComment' content=' Returns a string containing a concise human readable description of the receiver return a string representation of the event '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member></members><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier><modifier type='Modifier' keyword='FINAL'></modifier></modifiers></type></types></root>
