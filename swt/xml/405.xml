<root type='CompilationUnit'><packageDeclaration type='PackageDeclaration'><name type='Name' identifier='layout'><qualifier type='Name' identifier='swt'><qualifier type='Name' identifier='eclipse'><qualifier type='Name' identifier='org'></qualifier></qualifier></qualifier></name></packageDeclaration><comment type='JavadocComment' content=' Copyright c 2000 2005 IBM Corporation and others All rights reserved This program and the accompanying materials are made available under the terms of the Eclipse Public License v1 0 which accompanies this distribution and is available at http www eclipse org legal epl v10 html Contributors IBM Corporation initial API and implementation '></comment><imports><import type='ImportDeclaration' isAsterisk='true' isStatic='false'><name type='Name' identifier='swt'><qualifier type='Name' identifier='eclipse'><qualifier type='Name' identifier='org'></qualifier></qualifier></name></import><import type='ImportDeclaration' isAsterisk='true' isStatic='false'><name type='Name' identifier='graphics'><qualifier type='Name' identifier='swt'><qualifier type='Name' identifier='eclipse'><qualifier type='Name' identifier='org'></qualifier></qualifier></qualifier></name></import><import type='ImportDeclaration' isAsterisk='true' isStatic='false'><name type='Name' identifier='widgets'><qualifier type='Name' identifier='swt'><qualifier type='Name' identifier='eclipse'><qualifier type='Name' identifier='org'></qualifier></qualifier></qualifier></name></import></imports><types><type type='ClassOrInterfaceDeclaration' isInterface='false'><name type='SimpleName' identifier='FormData'></name><comment type='JavadocComment' content=' Instances of this class are used to define the attachments of a control in a code FormLayout code p To set a code FormData code object into a control you use the code setLayoutData code method To define attachments for the code FormData code set the fields directly like this pre FormData data new FormData data left new FormAttachment 0 5 data right new FormAttachment 100 5 button setLayoutData formData pre p p code FormData code contains the code FormAttachments code for each edge of the control that the code FormLayout code uses to determine the size and position of the control code FormData code objects also allow you to set the width and height of controls within a code FormLayout code p see FormLayout see FormAttachment since 2 0 '></comment><members><member type='FieldDeclaration'><comment type='JavadocComment' content=' width specifies the preferred width in pixels This value is the wHint passed into Control computeSize int int boolean to determine the preferred size of the control The default value is SWT DEFAULT see Control computeSize int int boolean '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><variables><variable type='VariableDeclarator'><initializer type='FieldAccessExpr'><name type='SimpleName' identifier='DEFAULT'></name><scope type='NameExpr'><name type='SimpleName' identifier='SWT'></name></scope></initializer><name type='SimpleName' identifier='width'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></member><member type='FieldDeclaration'><comment type='JavadocComment' content=' height specifies the preferred height in pixels This value is the hHint passed into Control computeSize int int boolean to determine the preferred size of the control The default value is SWT DEFAULT see Control computeSize int int boolean '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><variables><variable type='VariableDeclarator'><initializer type='FieldAccessExpr'><name type='SimpleName' identifier='DEFAULT'></name><scope type='NameExpr'><name type='SimpleName' identifier='SWT'></name></scope></initializer><name type='SimpleName' identifier='height'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></member><member type='FieldDeclaration'><comment type='JavadocComment' content=' left specifies the attachment of the left side of the control '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='left'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type></variable></variables></member><member type='FieldDeclaration'><comment type='JavadocComment' content=' right specifies the attachment of the right side of the control '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='right'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type></variable></variables></member><member type='FieldDeclaration'><comment type='JavadocComment' content=' top specifies the attachment of the top of the control '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='top'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type></variable></variables></member><member type='FieldDeclaration'><comment type='JavadocComment' content=' bottom specifies the attachment of the bottom of the control '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='bottom'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><initializer type='UnaryExpr' operator='MINUS'><expression type='IntegerLiteralExpr' value='1'></expression></initializer><name type='SimpleName' identifier='cacheWidth'></name><type type='PrimitiveType' specificType='INT'></type></variable><variable type='VariableDeclarator'><initializer type='UnaryExpr' operator='MINUS'><expression type='IntegerLiteralExpr' value='1'></expression></initializer><name type='SimpleName' identifier='cacheHeight'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='defaultWhint'></name><type type='PrimitiveType' specificType='INT'></type></variable><variable type='VariableDeclarator'><name type='SimpleName' identifier='defaultHhint'></name><type type='PrimitiveType' specificType='INT'></type></variable><variable type='VariableDeclarator'><initializer type='UnaryExpr' operator='MINUS'><expression type='IntegerLiteralExpr' value='1'></expression></initializer><name type='SimpleName' identifier='defaultWidth'></name><type type='PrimitiveType' specificType='INT'></type></variable><variable type='VariableDeclarator'><initializer type='UnaryExpr' operator='MINUS'><expression type='IntegerLiteralExpr' value='1'></expression></initializer><name type='SimpleName' identifier='defaultHeight'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='currentWhint'></name><type type='PrimitiveType' specificType='INT'></type></variable><variable type='VariableDeclarator'><name type='SimpleName' identifier='currentHhint'></name><type type='PrimitiveType' specificType='INT'></type></variable><variable type='VariableDeclarator'><initializer type='UnaryExpr' operator='MINUS'><expression type='IntegerLiteralExpr' value='1'></expression></initializer><name type='SimpleName' identifier='currentWidth'></name><type type='PrimitiveType' specificType='INT'></type></variable><variable type='VariableDeclarator'><initializer type='UnaryExpr' operator='MINUS'><expression type='IntegerLiteralExpr' value='1'></expression></initializer><name type='SimpleName' identifier='currentHeight'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='cacheLeft'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type></variable><variable type='VariableDeclarator'><name type='SimpleName' identifier='cacheRight'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type></variable><variable type='VariableDeclarator'><name type='SimpleName' identifier='cacheTop'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type></variable><variable type='VariableDeclarator'><name type='SimpleName' identifier='cacheBottom'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type></variable></variables></member><member type='FieldDeclaration'><variables><variable type='VariableDeclarator'><name type='SimpleName' identifier='isVisited'></name><type type='PrimitiveType' specificType='BOOLEAN'></type></variable><variable type='VariableDeclarator'><name type='SimpleName' identifier='needed'></name><type type='PrimitiveType' specificType='BOOLEAN'></type></variable></variables></member><member type='ConstructorDeclaration'><body type='BlockStmt'></body><name type='SimpleName' identifier='FormData'></name><comment type='JavadocComment' content=' Constructs a new instance of FormData using default values '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member><member type='ConstructorDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='width'></name><scope type='ThisExpr'></scope></target><value type='NameExpr'><name type='SimpleName' identifier='width'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='height'></name><scope type='ThisExpr'></scope></target><value type='NameExpr'><name type='SimpleName' identifier='height'></name></value></expression></statement></statements></body><name type='SimpleName' identifier='FormData'></name><comment type='JavadocComment' content=' Constructs a new instance of FormData according to the parameters A value of SWT DEFAULT indicates that no minimum width or no minumum height is specified param width a minimum width for the control param height a minimum height for the control '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='width'></name><type type='PrimitiveType' specificType='INT'></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='height'></name><type type='PrimitiveType' specificType='INT'></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='IfStmt'><condition type='BinaryExpr' operator='AND'><left type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='cacheWidth'></name></left><right type='UnaryExpr' operator='MINUS'><expression type='IntegerLiteralExpr' value='1'></expression></right></left><right type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='cacheHeight'></name></left><right type='UnaryExpr' operator='MINUS'><expression type='IntegerLiteralExpr' value='1'></expression></right></right></condition><thenStmt type='ReturnStmt'></thenStmt></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='AND'><left type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='wHint'></name></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='width'></name><scope type='ThisExpr'></scope></right></left><right type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='hHint'></name></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='height'></name><scope type='ThisExpr'></scope></right></right></condition><thenStmt type='BlockStmt'><statements><statement type='IfStmt'><condition type='BinaryExpr' operator='OR'><left type='BinaryExpr' operator='OR'><left type='BinaryExpr' operator='OR'><left type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='defaultWidth'></name></left><right type='UnaryExpr' operator='MINUS'><expression type='IntegerLiteralExpr' value='1'></expression></right></left><right type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='defaultHeight'></name></left><right type='UnaryExpr' operator='MINUS'><expression type='IntegerLiteralExpr' value='1'></expression></right></right></left><right type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='wHint'></name></left><right type='NameExpr'><name type='SimpleName' identifier='defaultWhint'></name></right></right></left><right type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='hHint'></name></left><right type='NameExpr'><name type='SimpleName' identifier='defaultHhint'></name></right></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='computeSize'></name><scope type='NameExpr'><name type='SimpleName' identifier='control'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='wHint'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='hHint'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></initializer><name type='SimpleName' identifier='size'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Point'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='defaultWhint'></name></target><value type='NameExpr'><name type='SimpleName' identifier='wHint'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='defaultHhint'></name></target><value type='NameExpr'><name type='SimpleName' identifier='hHint'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='defaultWidth'></name></target><value type='FieldAccessExpr'><name type='SimpleName' identifier='x'></name><scope type='NameExpr'><name type='SimpleName' identifier='size'></name></scope></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='defaultHeight'></name></target><value type='FieldAccessExpr'><name type='SimpleName' identifier='y'></name><scope type='NameExpr'><name type='SimpleName' identifier='size'></name></scope></value></expression></statement></statements></thenStmt></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheWidth'></name></target><value type='NameExpr'><name type='SimpleName' identifier='defaultWidth'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheHeight'></name></target><value type='NameExpr'><name type='SimpleName' identifier='defaultHeight'></name></value></expression></statement><statement type='ReturnStmt'></statement></statements></thenStmt></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='OR'><left type='BinaryExpr' operator='OR'><left type='BinaryExpr' operator='OR'><left type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='currentWidth'></name></left><right type='UnaryExpr' operator='MINUS'><expression type='IntegerLiteralExpr' value='1'></expression></right></left><right type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='currentHeight'></name></left><right type='UnaryExpr' operator='MINUS'><expression type='IntegerLiteralExpr' value='1'></expression></right></right></left><right type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='wHint'></name></left><right type='NameExpr'><name type='SimpleName' identifier='currentWhint'></name></right></right></left><right type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='hHint'></name></left><right type='NameExpr'><name type='SimpleName' identifier='currentHhint'></name></right></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='computeSize'></name><scope type='NameExpr'><name type='SimpleName' identifier='control'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='wHint'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='hHint'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></initializer><name type='SimpleName' identifier='size'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Point'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='currentWhint'></name></target><value type='NameExpr'><name type='SimpleName' identifier='wHint'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='currentHhint'></name></target><value type='NameExpr'><name type='SimpleName' identifier='hHint'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='currentWidth'></name></target><value type='FieldAccessExpr'><name type='SimpleName' identifier='x'></name><scope type='NameExpr'><name type='SimpleName' identifier='size'></name></scope></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='currentHeight'></name></target><value type='FieldAccessExpr'><name type='SimpleName' identifier='y'></name><scope type='NameExpr'><name type='SimpleName' identifier='size'></name></scope></value></expression></statement></statements></thenStmt></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheWidth'></name></target><value type='NameExpr'><name type='SimpleName' identifier='currentWidth'></name></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheHeight'></name></target><value type='NameExpr'><name type='SimpleName' identifier='currentHeight'></name></value></expression></statement></statements></body><type type='VoidType'></type><name type='SimpleName' identifier='computeSize'></name><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='control'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Control'></name></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='wHint'></name><type type='PrimitiveType' specificType='INT'></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='hHint'></name><type type='PrimitiveType' specificType='INT'></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='flushCache'></name><type type='PrimitiveType' specificType='BOOLEAN'></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheWidth'></name></target><value type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheHeight'></name></target><value type='UnaryExpr' operator='MINUS'><expression type='IntegerLiteralExpr' value='1'></expression></value></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='defaultHeight'></name></target><value type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='defaultWidth'></name></target><value type='UnaryExpr' operator='MINUS'><expression type='IntegerLiteralExpr' value='1'></expression></value></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='currentHeight'></name></target><value type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='currentWidth'></name></target><value type='UnaryExpr' operator='MINUS'><expression type='IntegerLiteralExpr' value='1'></expression></value></value></expression></statement></statements></body><type type='VoidType'></type><name type='SimpleName' identifier='flushCache'></name></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='needed'></name></target><value type='BooleanLiteralExpr' value='true'></value></expression></statement><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='computeSize'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='control'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='width'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='height'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></expression></statement><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='cacheWidth'></name></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='getWidth'></name><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='control'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Control'></name></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='flushCache'></name><type type='PrimitiveType' specificType='BOOLEAN'></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='computeSize'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='control'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='width'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='height'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></expression></statement><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='cacheHeight'></name></expression></statement></statements></body><type type='PrimitiveType' specificType='INT'></type><name type='SimpleName' identifier='getHeight'></name><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='control'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Control'></name></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='flushCache'></name><type type='PrimitiveType' specificType='BOOLEAN'></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='IfStmt'><condition type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='cacheBottom'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='cacheBottom'></name></expression></thenStmt></statement><statement type='IfStmt'><condition type='NameExpr'><name type='SimpleName' identifier='isVisited'></name></condition><thenStmt type='ReturnStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheBottom'></name></target><value type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type><arguments><argument type='IntegerLiteralExpr' value='0'></argument><argument type='MethodCallExpr'><name type='SimpleName' identifier='getHeight'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='control'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></argument></arguments></value></expression></thenStmt></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='bottom'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='BlockStmt'><statements><statement type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='top'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='ReturnStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheBottom'></name></target><value type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type><arguments><argument type='IntegerLiteralExpr' value='0'></argument><argument type='MethodCallExpr'><name type='SimpleName' identifier='getHeight'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='control'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></argument></arguments></value></expression></thenStmt></statement><statement type='ReturnStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheBottom'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='plus'></name><scope type='MethodCallExpr'><name type='SimpleName' identifier='getTopAttachment'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='control'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='spacing'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></scope><arguments><argument type='MethodCallExpr'><name type='SimpleName' identifier='getHeight'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='control'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></argument></arguments></value></expression></statement></statements></thenStmt></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='FieldAccessExpr'><name type='SimpleName' identifier='control'></name><scope type='NameExpr'><name type='SimpleName' identifier='bottom'></name></scope></initializer><name type='SimpleName' identifier='bottomControl'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Control'></name></type></variable></variables></expression></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='bottomControl'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='BlockStmt'><statements><statement type='IfStmt'><condition type='MethodCallExpr'><name type='SimpleName' identifier='isDisposed'></name><scope type='NameExpr'><name type='SimpleName' identifier='bottomControl'></name></scope></condition><elseStmt type='BlockStmt'><statements><statement type='IfStmt'><condition type='BinaryExpr' operator='NOT EQUALS'><left type='MethodCallExpr'><name type='SimpleName' identifier='getParent'></name><scope type='NameExpr'><name type='SimpleName' identifier='bottomControl'></name></scope></left><right type='MethodCallExpr'><name type='SimpleName' identifier='getParent'></name><scope type='NameExpr'><name type='SimpleName' identifier='control'></name></scope></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='bottomControl'></name></target><value type='NullLiteralExpr'></value></expression></statement></statements></thenStmt></statement></statements></elseStmt><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='control'></name><scope type='NameExpr'><name type='SimpleName' identifier='bottom'></name></scope></target><value type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='bottomControl'></name></target><value type='NullLiteralExpr'></value></value></expression></statement></statements></thenStmt></statement></statements></thenStmt></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='bottomControl'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='ReturnStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheBottom'></name></target><value type='NameExpr'><name type='SimpleName' identifier='bottom'></name></value></expression></thenStmt></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='isVisited'></name></target><value type='BooleanLiteralExpr' value='true'></value></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='CastExpr'><expression type='MethodCallExpr'><name type='SimpleName' identifier='getLayoutData'></name><scope type='NameExpr'><name type='SimpleName' identifier='bottomControl'></name></scope></expression><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormData'></name></type></initializer><name type='SimpleName' identifier='bottomData'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormData'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='getBottomAttachment'></name><scope type='NameExpr'><name type='SimpleName' identifier='bottomData'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='bottomControl'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='spacing'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></initializer><name type='SimpleName' identifier='bottomAttachment'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type></variable></variables></expression></statement><statement type='SwitchStmt'><selector type='FieldAccessExpr'><name type='SimpleName' identifier='alignment'></name><scope type='NameExpr'><name type='SimpleName' identifier='bottom'></name></scope></selector><entries><entrie type='SwitchEntry' specificType='STATEMENT GROUP'><labels><label type='FieldAccessExpr'><name type='SimpleName' identifier='BOTTOM'></name><scope type='NameExpr'><name type='SimpleName' identifier='SWT'></name></scope></label></labels><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheBottom'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='plus'></name><scope type='NameExpr'><name type='SimpleName' identifier='bottomAttachment'></name></scope><arguments><argument type='FieldAccessExpr'><name type='SimpleName' identifier='offset'></name><scope type='NameExpr'><name type='SimpleName' identifier='bottom'></name></scope></argument></arguments></value></expression></statement><statement type='BreakStmt'></statement></statements></entrie><entrie type='SwitchEntry' specificType='STATEMENT GROUP'><labels><label type='FieldAccessExpr'><name type='SimpleName' identifier='CENTER'></name><scope type='NameExpr'><name type='SimpleName' identifier='SWT'></name></scope></label></labels><statements><statement type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='getTopAttachment'></name><scope type='NameExpr'><name type='SimpleName' identifier='bottomData'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='bottomControl'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='spacing'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></initializer><name type='SimpleName' identifier='topAttachment'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='minus'></name><scope type='NameExpr'><name type='SimpleName' identifier='bottomAttachment'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='topAttachment'></name></argument></arguments></initializer><name type='SimpleName' identifier='bottomHeight'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheBottom'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='minus'></name><scope type='NameExpr'><name type='SimpleName' identifier='bottomAttachment'></name></scope><arguments><argument type='MethodCallExpr'><name type='SimpleName' identifier='divide'></name><scope type='MethodCallExpr'><name type='SimpleName' identifier='minus'></name><scope type='NameExpr'><name type='SimpleName' identifier='bottomHeight'></name></scope><arguments><argument type='MethodCallExpr'><name type='SimpleName' identifier='getHeight'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='control'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></argument></arguments></scope><arguments><argument type='IntegerLiteralExpr' value='2'></argument></arguments></argument></arguments></value></expression></statement><statement type='BreakStmt'></statement></statements></statement></statements></entrie><entrie type='SwitchEntry' specificType='STATEMENT GROUP'><statements><statement type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='getTopAttachment'></name><scope type='NameExpr'><name type='SimpleName' identifier='bottomData'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='bottomControl'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='spacing'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></initializer><name type='SimpleName' identifier='topAttachment'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheBottom'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='plus'></name><scope type='NameExpr'><name type='SimpleName' identifier='topAttachment'></name></scope><arguments><argument type='BinaryExpr' operator='MINUS'><left type='FieldAccessExpr'><name type='SimpleName' identifier='offset'></name><scope type='NameExpr'><name type='SimpleName' identifier='bottom'></name></scope></left><right type='NameExpr'><name type='SimpleName' identifier='spacing'></name></right></argument></arguments></value></expression></statement><statement type='BreakStmt'></statement></statements></statement></statements></entrie></entries></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='isVisited'></name></target><value type='BooleanLiteralExpr' value='false'></value></expression></statement><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='cacheBottom'></name></expression></statement></statements></body><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type><name type='SimpleName' identifier='getBottomAttachment'></name><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='control'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Control'></name></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='spacing'></name><type type='PrimitiveType' specificType='INT'></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='flushCache'></name><type type='PrimitiveType' specificType='BOOLEAN'></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='IfStmt'><condition type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='cacheLeft'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='cacheLeft'></name></expression></thenStmt></statement><statement type='IfStmt'><condition type='NameExpr'><name type='SimpleName' identifier='isVisited'></name></condition><thenStmt type='ReturnStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheLeft'></name></target><value type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type><arguments><argument type='IntegerLiteralExpr' value='0'></argument><argument type='IntegerLiteralExpr' value='0'></argument></arguments></value></expression></thenStmt></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='left'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='BlockStmt'><statements><statement type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='right'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='ReturnStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheLeft'></name></target><value type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type><arguments><argument type='IntegerLiteralExpr' value='0'></argument><argument type='IntegerLiteralExpr' value='0'></argument></arguments></value></expression></thenStmt></statement><statement type='ReturnStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheLeft'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='minus'></name><scope type='MethodCallExpr'><name type='SimpleName' identifier='getRightAttachment'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='control'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='spacing'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></scope><arguments><argument type='MethodCallExpr'><name type='SimpleName' identifier='getWidth'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='control'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></argument></arguments></value></expression></statement></statements></thenStmt></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='FieldAccessExpr'><name type='SimpleName' identifier='control'></name><scope type='NameExpr'><name type='SimpleName' identifier='left'></name></scope></initializer><name type='SimpleName' identifier='leftControl'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Control'></name></type></variable></variables></expression></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='leftControl'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='BlockStmt'><statements><statement type='IfStmt'><condition type='MethodCallExpr'><name type='SimpleName' identifier='isDisposed'></name><scope type='NameExpr'><name type='SimpleName' identifier='leftControl'></name></scope></condition><elseStmt type='BlockStmt'><statements><statement type='IfStmt'><condition type='BinaryExpr' operator='NOT EQUALS'><left type='MethodCallExpr'><name type='SimpleName' identifier='getParent'></name><scope type='NameExpr'><name type='SimpleName' identifier='leftControl'></name></scope></left><right type='MethodCallExpr'><name type='SimpleName' identifier='getParent'></name><scope type='NameExpr'><name type='SimpleName' identifier='control'></name></scope></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='leftControl'></name></target><value type='NullLiteralExpr'></value></expression></statement></statements></thenStmt></statement></statements></elseStmt><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='control'></name><scope type='NameExpr'><name type='SimpleName' identifier='left'></name></scope></target><value type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='leftControl'></name></target><value type='NullLiteralExpr'></value></value></expression></statement></statements></thenStmt></statement></statements></thenStmt></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='leftControl'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='ReturnStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheLeft'></name></target><value type='NameExpr'><name type='SimpleName' identifier='left'></name></value></expression></thenStmt></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='isVisited'></name></target><value type='BooleanLiteralExpr' value='true'></value></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='CastExpr'><expression type='MethodCallExpr'><name type='SimpleName' identifier='getLayoutData'></name><scope type='NameExpr'><name type='SimpleName' identifier='leftControl'></name></scope></expression><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormData'></name></type></initializer><name type='SimpleName' identifier='leftData'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormData'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='getLeftAttachment'></name><scope type='NameExpr'><name type='SimpleName' identifier='leftData'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='leftControl'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='spacing'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></initializer><name type='SimpleName' identifier='leftAttachment'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type></variable></variables></expression></statement><statement type='SwitchStmt'><selector type='FieldAccessExpr'><name type='SimpleName' identifier='alignment'></name><scope type='NameExpr'><name type='SimpleName' identifier='left'></name></scope></selector><entries><entrie type='SwitchEntry' specificType='STATEMENT GROUP'><labels><label type='FieldAccessExpr'><name type='SimpleName' identifier='LEFT'></name><scope type='NameExpr'><name type='SimpleName' identifier='SWT'></name></scope></label></labels><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheLeft'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='plus'></name><scope type='NameExpr'><name type='SimpleName' identifier='leftAttachment'></name></scope><arguments><argument type='FieldAccessExpr'><name type='SimpleName' identifier='offset'></name><scope type='NameExpr'><name type='SimpleName' identifier='left'></name></scope></argument></arguments></value></expression></statement><statement type='BreakStmt'></statement></statements></entrie><entrie type='SwitchEntry' specificType='STATEMENT GROUP'><labels><label type='FieldAccessExpr'><name type='SimpleName' identifier='CENTER'></name><scope type='NameExpr'><name type='SimpleName' identifier='SWT'></name></scope></label></labels><statements><statement type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='getRightAttachment'></name><scope type='NameExpr'><name type='SimpleName' identifier='leftData'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='leftControl'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='spacing'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></initializer><name type='SimpleName' identifier='rightAttachment'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='minus'></name><scope type='NameExpr'><name type='SimpleName' identifier='rightAttachment'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='leftAttachment'></name></argument></arguments></initializer><name type='SimpleName' identifier='leftWidth'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheLeft'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='plus'></name><scope type='NameExpr'><name type='SimpleName' identifier='leftAttachment'></name></scope><arguments><argument type='MethodCallExpr'><name type='SimpleName' identifier='divide'></name><scope type='MethodCallExpr'><name type='SimpleName' identifier='minus'></name><scope type='NameExpr'><name type='SimpleName' identifier='leftWidth'></name></scope><arguments><argument type='MethodCallExpr'><name type='SimpleName' identifier='getWidth'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='control'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></argument></arguments></scope><arguments><argument type='IntegerLiteralExpr' value='2'></argument></arguments></argument></arguments></value></expression></statement><statement type='BreakStmt'></statement></statements></statement></statements></entrie><entrie type='SwitchEntry' specificType='STATEMENT GROUP'><statements><statement type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='getRightAttachment'></name><scope type='NameExpr'><name type='SimpleName' identifier='leftData'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='leftControl'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='spacing'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></initializer><name type='SimpleName' identifier='rightAttachment'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheLeft'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='plus'></name><scope type='NameExpr'><name type='SimpleName' identifier='rightAttachment'></name></scope><arguments><argument type='BinaryExpr' operator='PLUS'><left type='FieldAccessExpr'><name type='SimpleName' identifier='offset'></name><scope type='NameExpr'><name type='SimpleName' identifier='left'></name></scope></left><right type='NameExpr'><name type='SimpleName' identifier='spacing'></name></right></argument></arguments></value></expression></statement></statements></statement></statements></entrie></entries></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='isVisited'></name></target><value type='BooleanLiteralExpr' value='false'></value></expression></statement><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='cacheLeft'></name></expression></statement></statements></body><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type><name type='SimpleName' identifier='getLeftAttachment'></name><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='control'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Control'></name></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='spacing'></name><type type='PrimitiveType' specificType='INT'></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='flushCache'></name><type type='PrimitiveType' specificType='BOOLEAN'></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='getName'></name><scope type='MethodCallExpr'><name type='SimpleName' identifier='getClass'></name></scope></initializer><name type='SimpleName' identifier='string'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='lastIndexOf'></name><scope type='NameExpr'><name type='SimpleName' identifier='string'></name></scope><arguments><argument type='CharLiteralExpr' value=' '></argument></arguments></initializer><name type='SimpleName' identifier='index'></name><type type='PrimitiveType' specificType='INT'></type></variable></variables></expression></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='index'></name></left><right type='UnaryExpr' operator='MINUS'><expression type='IntegerLiteralExpr' value='1'></expression></right></condition><thenStmt type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='string'></name></expression></thenStmt></statement><statement type='ReturnStmt'><expression type='MethodCallExpr'><name type='SimpleName' identifier='substring'></name><scope type='NameExpr'><name type='SimpleName' identifier='string'></name></scope><arguments><argument type='BinaryExpr' operator='PLUS'><left type='NameExpr'><name type='SimpleName' identifier='index'></name></left><right type='IntegerLiteralExpr' value='1'></right></argument><argument type='MethodCallExpr'><name type='SimpleName' identifier='length'></name><scope type='NameExpr'><name type='SimpleName' identifier='string'></name></scope></argument></arguments></expression></statement></statements></body><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></type><name type='SimpleName' identifier='getName'></name></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='IfStmt'><condition type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='cacheRight'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='cacheRight'></name></expression></thenStmt></statement><statement type='IfStmt'><condition type='NameExpr'><name type='SimpleName' identifier='isVisited'></name></condition><thenStmt type='ReturnStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheRight'></name></target><value type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type><arguments><argument type='IntegerLiteralExpr' value='0'></argument><argument type='MethodCallExpr'><name type='SimpleName' identifier='getWidth'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='control'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></argument></arguments></value></expression></thenStmt></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='right'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='BlockStmt'><statements><statement type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='left'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='ReturnStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheRight'></name></target><value type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type><arguments><argument type='IntegerLiteralExpr' value='0'></argument><argument type='MethodCallExpr'><name type='SimpleName' identifier='getWidth'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='control'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></argument></arguments></value></expression></thenStmt></statement><statement type='ReturnStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheRight'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='plus'></name><scope type='MethodCallExpr'><name type='SimpleName' identifier='getLeftAttachment'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='control'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='spacing'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></scope><arguments><argument type='MethodCallExpr'><name type='SimpleName' identifier='getWidth'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='control'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></argument></arguments></value></expression></statement></statements></thenStmt></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='FieldAccessExpr'><name type='SimpleName' identifier='control'></name><scope type='NameExpr'><name type='SimpleName' identifier='right'></name></scope></initializer><name type='SimpleName' identifier='rightControl'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Control'></name></type></variable></variables></expression></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='rightControl'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='BlockStmt'><statements><statement type='IfStmt'><condition type='MethodCallExpr'><name type='SimpleName' identifier='isDisposed'></name><scope type='NameExpr'><name type='SimpleName' identifier='rightControl'></name></scope></condition><elseStmt type='BlockStmt'><statements><statement type='IfStmt'><condition type='BinaryExpr' operator='NOT EQUALS'><left type='MethodCallExpr'><name type='SimpleName' identifier='getParent'></name><scope type='NameExpr'><name type='SimpleName' identifier='rightControl'></name></scope></left><right type='MethodCallExpr'><name type='SimpleName' identifier='getParent'></name><scope type='NameExpr'><name type='SimpleName' identifier='control'></name></scope></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='rightControl'></name></target><value type='NullLiteralExpr'></value></expression></statement></statements></thenStmt></statement></statements></elseStmt><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='control'></name><scope type='NameExpr'><name type='SimpleName' identifier='right'></name></scope></target><value type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='rightControl'></name></target><value type='NullLiteralExpr'></value></value></expression></statement></statements></thenStmt></statement></statements></thenStmt></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='rightControl'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='ReturnStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheRight'></name></target><value type='NameExpr'><name type='SimpleName' identifier='right'></name></value></expression></thenStmt></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='isVisited'></name></target><value type='BooleanLiteralExpr' value='true'></value></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='CastExpr'><expression type='MethodCallExpr'><name type='SimpleName' identifier='getLayoutData'></name><scope type='NameExpr'><name type='SimpleName' identifier='rightControl'></name></scope></expression><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormData'></name></type></initializer><name type='SimpleName' identifier='rightData'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormData'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='getRightAttachment'></name><scope type='NameExpr'><name type='SimpleName' identifier='rightData'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='rightControl'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='spacing'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></initializer><name type='SimpleName' identifier='rightAttachment'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type></variable></variables></expression></statement><statement type='SwitchStmt'><selector type='FieldAccessExpr'><name type='SimpleName' identifier='alignment'></name><scope type='NameExpr'><name type='SimpleName' identifier='right'></name></scope></selector><entries><entrie type='SwitchEntry' specificType='STATEMENT GROUP'><labels><label type='FieldAccessExpr'><name type='SimpleName' identifier='RIGHT'></name><scope type='NameExpr'><name type='SimpleName' identifier='SWT'></name></scope></label></labels><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheRight'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='plus'></name><scope type='NameExpr'><name type='SimpleName' identifier='rightAttachment'></name></scope><arguments><argument type='FieldAccessExpr'><name type='SimpleName' identifier='offset'></name><scope type='NameExpr'><name type='SimpleName' identifier='right'></name></scope></argument></arguments></value></expression></statement><statement type='BreakStmt'></statement></statements></entrie><entrie type='SwitchEntry' specificType='STATEMENT GROUP'><labels><label type='FieldAccessExpr'><name type='SimpleName' identifier='CENTER'></name><scope type='NameExpr'><name type='SimpleName' identifier='SWT'></name></scope></label></labels><statements><statement type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='getLeftAttachment'></name><scope type='NameExpr'><name type='SimpleName' identifier='rightData'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='rightControl'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='spacing'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></initializer><name type='SimpleName' identifier='leftAttachment'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='minus'></name><scope type='NameExpr'><name type='SimpleName' identifier='rightAttachment'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='leftAttachment'></name></argument></arguments></initializer><name type='SimpleName' identifier='rightWidth'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheRight'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='minus'></name><scope type='NameExpr'><name type='SimpleName' identifier='rightAttachment'></name></scope><arguments><argument type='MethodCallExpr'><name type='SimpleName' identifier='divide'></name><scope type='MethodCallExpr'><name type='SimpleName' identifier='minus'></name><scope type='NameExpr'><name type='SimpleName' identifier='rightWidth'></name></scope><arguments><argument type='MethodCallExpr'><name type='SimpleName' identifier='getWidth'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='control'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></argument></arguments></scope><arguments><argument type='IntegerLiteralExpr' value='2'></argument></arguments></argument></arguments></value></expression></statement><statement type='BreakStmt'></statement></statements></statement></statements></entrie><entrie type='SwitchEntry' specificType='STATEMENT GROUP'><statements><statement type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='getLeftAttachment'></name><scope type='NameExpr'><name type='SimpleName' identifier='rightData'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='rightControl'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='spacing'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></initializer><name type='SimpleName' identifier='leftAttachment'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheRight'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='plus'></name><scope type='NameExpr'><name type='SimpleName' identifier='leftAttachment'></name></scope><arguments><argument type='BinaryExpr' operator='MINUS'><left type='FieldAccessExpr'><name type='SimpleName' identifier='offset'></name><scope type='NameExpr'><name type='SimpleName' identifier='right'></name></scope></left><right type='NameExpr'><name type='SimpleName' identifier='spacing'></name></right></argument></arguments></value></expression></statement><statement type='BreakStmt'></statement></statements></statement></statements></entrie></entries></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='isVisited'></name></target><value type='BooleanLiteralExpr' value='false'></value></expression></statement><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='cacheRight'></name></expression></statement></statements></body><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type><name type='SimpleName' identifier='getRightAttachment'></name><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='control'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Control'></name></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='spacing'></name><type type='PrimitiveType' specificType='INT'></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='flushCache'></name><type type='PrimitiveType' specificType='BOOLEAN'></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='IfStmt'><condition type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='cacheTop'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='cacheTop'></name></expression></thenStmt></statement><statement type='IfStmt'><condition type='NameExpr'><name type='SimpleName' identifier='isVisited'></name></condition><thenStmt type='ReturnStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheTop'></name></target><value type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type><arguments><argument type='IntegerLiteralExpr' value='0'></argument><argument type='IntegerLiteralExpr' value='0'></argument></arguments></value></expression></thenStmt></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='top'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='BlockStmt'><statements><statement type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='bottom'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='ReturnStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheTop'></name></target><value type='ObjectCreationExpr'><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type><arguments><argument type='IntegerLiteralExpr' value='0'></argument><argument type='IntegerLiteralExpr' value='0'></argument></arguments></value></expression></thenStmt></statement><statement type='ReturnStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheTop'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='minus'></name><scope type='MethodCallExpr'><name type='SimpleName' identifier='getBottomAttachment'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='control'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='spacing'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></scope><arguments><argument type='MethodCallExpr'><name type='SimpleName' identifier='getHeight'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='control'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></argument></arguments></value></expression></statement></statements></thenStmt></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='FieldAccessExpr'><name type='SimpleName' identifier='control'></name><scope type='NameExpr'><name type='SimpleName' identifier='top'></name></scope></initializer><name type='SimpleName' identifier='topControl'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Control'></name></type></variable></variables></expression></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='topControl'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='BlockStmt'><statements><statement type='IfStmt'><condition type='MethodCallExpr'><name type='SimpleName' identifier='isDisposed'></name><scope type='NameExpr'><name type='SimpleName' identifier='topControl'></name></scope></condition><elseStmt type='BlockStmt'><statements><statement type='IfStmt'><condition type='BinaryExpr' operator='NOT EQUALS'><left type='MethodCallExpr'><name type='SimpleName' identifier='getParent'></name><scope type='NameExpr'><name type='SimpleName' identifier='topControl'></name></scope></left><right type='MethodCallExpr'><name type='SimpleName' identifier='getParent'></name><scope type='NameExpr'><name type='SimpleName' identifier='control'></name></scope></right></condition><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='topControl'></name></target><value type='NullLiteralExpr'></value></expression></statement></statements></thenStmt></statement></statements></elseStmt><thenStmt type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='FieldAccessExpr'><name type='SimpleName' identifier='control'></name><scope type='NameExpr'><name type='SimpleName' identifier='top'></name></scope></target><value type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='topControl'></name></target><value type='NullLiteralExpr'></value></value></expression></statement></statements></thenStmt></statement></statements></thenStmt></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='topControl'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='ReturnStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheTop'></name></target><value type='NameExpr'><name type='SimpleName' identifier='top'></name></value></expression></thenStmt></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='isVisited'></name></target><value type='BooleanLiteralExpr' value='true'></value></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='CastExpr'><expression type='MethodCallExpr'><name type='SimpleName' identifier='getLayoutData'></name><scope type='NameExpr'><name type='SimpleName' identifier='topControl'></name></scope></expression><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormData'></name></type></initializer><name type='SimpleName' identifier='topData'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormData'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='getTopAttachment'></name><scope type='NameExpr'><name type='SimpleName' identifier='topData'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='topControl'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='spacing'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></initializer><name type='SimpleName' identifier='topAttachment'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type></variable></variables></expression></statement><statement type='SwitchStmt'><selector type='FieldAccessExpr'><name type='SimpleName' identifier='alignment'></name><scope type='NameExpr'><name type='SimpleName' identifier='top'></name></scope></selector><entries><entrie type='SwitchEntry' specificType='STATEMENT GROUP'><labels><label type='FieldAccessExpr'><name type='SimpleName' identifier='TOP'></name><scope type='NameExpr'><name type='SimpleName' identifier='SWT'></name></scope></label></labels><statements><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheTop'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='plus'></name><scope type='NameExpr'><name type='SimpleName' identifier='topAttachment'></name></scope><arguments><argument type='FieldAccessExpr'><name type='SimpleName' identifier='offset'></name><scope type='NameExpr'><name type='SimpleName' identifier='top'></name></scope></argument></arguments></value></expression></statement><statement type='BreakStmt'></statement></statements></entrie><entrie type='SwitchEntry' specificType='STATEMENT GROUP'><labels><label type='FieldAccessExpr'><name type='SimpleName' identifier='CENTER'></name><scope type='NameExpr'><name type='SimpleName' identifier='SWT'></name></scope></label></labels><statements><statement type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='getBottomAttachment'></name><scope type='NameExpr'><name type='SimpleName' identifier='topData'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='topControl'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='spacing'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></initializer><name type='SimpleName' identifier='bottomAttachment'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='minus'></name><scope type='NameExpr'><name type='SimpleName' identifier='bottomAttachment'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='topAttachment'></name></argument></arguments></initializer><name type='SimpleName' identifier='topHeight'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheTop'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='plus'></name><scope type='NameExpr'><name type='SimpleName' identifier='topAttachment'></name></scope><arguments><argument type='MethodCallExpr'><name type='SimpleName' identifier='divide'></name><scope type='MethodCallExpr'><name type='SimpleName' identifier='minus'></name><scope type='NameExpr'><name type='SimpleName' identifier='topHeight'></name></scope><arguments><argument type='MethodCallExpr'><name type='SimpleName' identifier='getHeight'></name><arguments><argument type='NameExpr'><name type='SimpleName' identifier='control'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></argument></arguments></scope><arguments><argument type='IntegerLiteralExpr' value='2'></argument></arguments></argument></arguments></value></expression></statement><statement type='BreakStmt'></statement></statements></statement></statements></entrie><entrie type='SwitchEntry' specificType='STATEMENT GROUP'><statements><statement type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='MethodCallExpr'><name type='SimpleName' identifier='getBottomAttachment'></name><scope type='NameExpr'><name type='SimpleName' identifier='topData'></name></scope><arguments><argument type='NameExpr'><name type='SimpleName' identifier='topControl'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='spacing'></name></argument><argument type='NameExpr'><name type='SimpleName' identifier='flushCache'></name></argument></arguments></initializer><name type='SimpleName' identifier='bottomAttachment'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type></variable></variables></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='cacheTop'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='plus'></name><scope type='NameExpr'><name type='SimpleName' identifier='bottomAttachment'></name></scope><arguments><argument type='BinaryExpr' operator='PLUS'><left type='FieldAccessExpr'><name type='SimpleName' identifier='offset'></name><scope type='NameExpr'><name type='SimpleName' identifier='top'></name></scope></left><right type='NameExpr'><name type='SimpleName' identifier='spacing'></name></right></argument></arguments></value></expression></statement><statement type='BreakStmt'></statement></statements></statement></statements></entrie></entries></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='isVisited'></name></target><value type='BooleanLiteralExpr' value='false'></value></expression></statement><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='cacheTop'></name></expression></statement></statements></body><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='FormAttachment'></name></type><name type='SimpleName' identifier='getTopAttachment'></name><parameters><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='control'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='Control'></name></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='spacing'></name><type type='PrimitiveType' specificType='INT'></type></parameter><parameter type='Parameter' isVarArgs='false'><name type='SimpleName' identifier='flushCache'></name><type type='PrimitiveType' specificType='BOOLEAN'></type></parameter></parameters></member><member type='MethodDeclaration'><body type='BlockStmt'><statements><statement type='ExpressionStmt'><expression type='VariableDeclarationExpr'><variables><variable type='VariableDeclarator'><initializer type='BinaryExpr' operator='PLUS'><left type='MethodCallExpr'><name type='SimpleName' identifier='getName'></name></left><right type='StringLiteralExpr' value=' '></right></initializer><name type='SimpleName' identifier='string'></name><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></type></variable></variables></expression></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='width'></name></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='DEFAULT'></name><scope type='NameExpr'><name type='SimpleName' identifier='SWT'></name></scope></right></condition><thenStmt type='ExpressionStmt'><expression type='AssignExpr' operator='PLUS'><target type='NameExpr'><name type='SimpleName' identifier='string'></name></target><value type='BinaryExpr' operator='PLUS'><left type='BinaryExpr' operator='PLUS'><left type='StringLiteralExpr' value='width '></left><right type='NameExpr'><name type='SimpleName' identifier='width'></name></right></left><right type='StringLiteralExpr' value=' '></right></value></expression></thenStmt></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='height'></name></left><right type='FieldAccessExpr'><name type='SimpleName' identifier='DEFAULT'></name><scope type='NameExpr'><name type='SimpleName' identifier='SWT'></name></scope></right></condition><thenStmt type='ExpressionStmt'><expression type='AssignExpr' operator='PLUS'><target type='NameExpr'><name type='SimpleName' identifier='string'></name></target><value type='BinaryExpr' operator='PLUS'><left type='BinaryExpr' operator='PLUS'><left type='StringLiteralExpr' value='height '></left><right type='NameExpr'><name type='SimpleName' identifier='height'></name></right></left><right type='StringLiteralExpr' value=' '></right></value></expression></thenStmt></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='left'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='ExpressionStmt'><expression type='AssignExpr' operator='PLUS'><target type='NameExpr'><name type='SimpleName' identifier='string'></name></target><value type='BinaryExpr' operator='PLUS'><left type='BinaryExpr' operator='PLUS'><left type='StringLiteralExpr' value='left '></left><right type='NameExpr'><name type='SimpleName' identifier='left'></name></right></left><right type='StringLiteralExpr' value=' '></right></value></expression></thenStmt></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='right'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='ExpressionStmt'><expression type='AssignExpr' operator='PLUS'><target type='NameExpr'><name type='SimpleName' identifier='string'></name></target><value type='BinaryExpr' operator='PLUS'><left type='BinaryExpr' operator='PLUS'><left type='StringLiteralExpr' value='right '></left><right type='NameExpr'><name type='SimpleName' identifier='right'></name></right></left><right type='StringLiteralExpr' value=' '></right></value></expression></thenStmt></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='top'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='ExpressionStmt'><expression type='AssignExpr' operator='PLUS'><target type='NameExpr'><name type='SimpleName' identifier='string'></name></target><value type='BinaryExpr' operator='PLUS'><left type='BinaryExpr' operator='PLUS'><left type='StringLiteralExpr' value='top '></left><right type='NameExpr'><name type='SimpleName' identifier='top'></name></right></left><right type='StringLiteralExpr' value=' '></right></value></expression></thenStmt></statement><statement type='IfStmt'><condition type='BinaryExpr' operator='NOT EQUALS'><left type='NameExpr'><name type='SimpleName' identifier='bottom'></name></left><right type='NullLiteralExpr'></right></condition><thenStmt type='ExpressionStmt'><expression type='AssignExpr' operator='PLUS'><target type='NameExpr'><name type='SimpleName' identifier='string'></name></target><value type='BinaryExpr' operator='PLUS'><left type='BinaryExpr' operator='PLUS'><left type='StringLiteralExpr' value='bottom '></left><right type='NameExpr'><name type='SimpleName' identifier='bottom'></name></right></left><right type='StringLiteralExpr' value=' '></right></value></expression></thenStmt></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='ASSIGN'><target type='NameExpr'><name type='SimpleName' identifier='string'></name></target><value type='MethodCallExpr'><name type='SimpleName' identifier='trim'></name><scope type='NameExpr'><name type='SimpleName' identifier='string'></name></scope></value></expression></statement><statement type='ExpressionStmt'><expression type='AssignExpr' operator='PLUS'><target type='NameExpr'><name type='SimpleName' identifier='string'></name></target><value type='StringLiteralExpr' value=' '></value></expression></statement><statement type='ReturnStmt'><expression type='NameExpr'><name type='SimpleName' identifier='string'></name></expression></statement></statements></body><type type='ClassOrInterfaceType'><name type='SimpleName' identifier='String'></name></type><name type='SimpleName' identifier='toString'></name><comment type='JavadocComment' content=' Returns a string containing a concise human readable description of the receiver return a string representation of the event '></comment><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier></modifiers></member></members><modifiers><modifier type='Modifier' keyword='PUBLIC'></modifier><modifier type='Modifier' keyword='FINAL'></modifier></modifiers></type></types></root>
