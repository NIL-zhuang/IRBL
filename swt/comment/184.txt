long
NON NLS 1
Load the SWT library
NON NLS 1 NON NLS 2
NON NLS 1 NON NLS 2
Constructs a new instance of this class given an object to send the message to a string naming the method to invoke and an argument count Note that if the object is an instance of code Class code it is assumed that the method is a static method on that class param object the object to send the message to param method the name of the method to invoke param argCount the number of arguments that the method takes
Constructs a new instance of this class given an object to send the message to a string naming the method to invoke an argument count and a flag indicating whether or not the arguments will be passed in an array Note that if the object is an instance of code Class code it is assumed that the method is a static method on that class param object the object to send the message to param method the name of the method to invoke param argCount the number of arguments that the method takes param isArrayBased code true code if the arguments should be passed in an array and false otherwise
Set the callback fields
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
Inline the common cases
Bind the address
Constructs a new instance of this class given an object to send the message to a string naming the method to invoke an argument count a flag indicating whether or not the arguments will be passed in an array and a value to return when an exception happens Note that if the object is an instance of code Class code it is assumed that the method is a static method on that class param object the object to send the message to param method the name of the method to invoke param argCount the number of arguments that the method takes param isArrayBased code true code if the arguments should be passed in an array and false otherwise param errorResult the return value if the java code throws an exception
long
long
Allocates the native level resources associated with the callback This method is only invoked from within the constructor for the argument param callback the callback to bind param object the callback s object param method the callback s method param signature the callback s method signature param argCount the callback s method argument count param isStatic whether the callback s method is static param isArrayBased whether the callback s method is array based param errorResult the callback s error result
long
Releases the native level resources associated with the callback and removes all references between the callback and other objects This helps to prevent bad application code from accidentally holding onto extraneous garbage
long
Returns the address of a block of machine code which will invoke the callback represented by the receiver return the callback address
Returns the SWT platform name return the platform name of the currently running SWT
Returns the number of times the system has been recursively entered through a callback p Note This should not be called by application code p return the entry count since 2 1
NON NLS 1
NON NLS 1
Indicates whether or not callbacks which are triggered at the native level should cause the messages described by the matching code Callback code objects to be invoked This method is used to safely shut down SWT when it is run within environments which can generate spurious events p Note This should not be called by application code p param enable true if callbacks should be invoked
Returns whether or not callbacks which are triggered at the native level should cause the messages described by the matching code Callback code objects to be invoked This method is used to safely shut down SWT when it is run within environments which can generate spurious events p Note This should not be called by application code p return true if callbacks should not be invoked
This might be called directly from native code in environments which can generate spurious events Check before removing it deprecated param ignore true if callbacks should not be invoked
Immediately wipes out all native level state associated with em all em callbacks p b WARNING b This operation is em extremely em dangerous and should never be performed by application code p
Releases the native level resources associated with the callback see dispose
