Constructs a new instance of this class given its parent which must be a code TabFolder code and a style value describing its behavior and appearance The item is added to the end of the items maintained by its parent p The style value is either one of the style constants defined in class code SWT code which is applicable to instances of this class or must be built by em bitwise OR em ing together that is using the code int code operator two or more of those code SWT code style constants The class description lists the style constants that are applicable to the class Style bits are also inherited from superclasses p param parent a composite control which will be the parent of the new instance cannot be null param style the style of control to construct exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the parent is null li ul exception SWTException ul li ERROR THREAD INVALID ACCESS if not called from the thread that created the parent li li ERROR INVALID SUBCLASS if this class is not an allowed subclass li ul see SWT see Widget checkSubclass see Widget getStyle
Constructs a new instance of this class given its parent which must be a code TabFolder code a style value describing its behavior and appearance and the index at which to place it in the items maintained by its parent p The style value is either one of the style constants defined in class code SWT code which is applicable to instances of this class or must be built by em bitwise OR em ing together that is using the code int code operator two or more of those code SWT code style constants The class description lists the style constants that are applicable to the class Style bits are also inherited from superclasses p param parent a composite control which will be the parent of the new instance cannot be null param style the style of control to construct param index the index to store the receiver in its parent exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the parent is null li li ERROR INVALID RANGE if the index is either negative or greater than the parent s current tab count li ul exception SWTException ul li ERROR THREAD INVALID ACCESS if not called from the thread that created the parent li li ERROR INVALID SUBCLASS if this class is not an allowed subclass li ul see SWT see Widget checkSubclass see Widget getStyle
Returns the control that is used to fill the client area of the tab folder when the user selects the tab item If no control has been set return code null code p return the control exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the receiver s parent which must be a code TabFolder code return the receiver s parent exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the receiver s tool tip text or null if it has not been set return the receiver s tool tip text exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Sets the control that is used to fill the client area of the tab folder when the user selects the tab item p param control the new control or null exception IllegalArgumentException ul li ERROR INVALID ARGUMENT if the control has been disposed li li ERROR INVALID PARENT if the control is not in the same widget tree li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Bug in Windows In version 6 00 of COMCTL32 DLL tab items with an image and a label that includes cause the tab to draw incorrectly even when doubled The image overlaps the label The fix is to remove all characters from the string
Bug in Windows In version 6 00 of COMCTL32 DLL tab items with an image and a label that includes cause the tab to draw incorrectly even when doubled The image overlaps the label The fix is to remove all characters from the string
Sets the receiver s text The string may include the mnemonic character p p Mnemonics are indicated by an amp that causes the next character to be the mnemonic When the user presses a key sequence that matches the mnemonic a selection event occurs On most platforms the mnemonic appears underlined but may be emphasised in a platform specific manner The mnemonic indicator character amp can be escaped by doubling it in the string causing a single amp to be displayed p param string the new text exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the text is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Sets the receiver s tool tip text to the argument which may be null indicating that no tool tip text should be shown param string the new tool tip text or null exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
