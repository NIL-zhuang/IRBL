Instances of this class represent a selectable user interface object that displays a text with links p dl dt b Styles b dt dd none dd dt b Events b dt dd Selection dd dl p IMPORTANT This class is em not em intended to be subclassed p since 3 1
Constructs a new instance of this class given its parent and a style value describing its behavior and appearance p The style value is either one of the style constants defined in class code SWT code which is applicable to instances of this class or must be built by em bitwise OR em ing together that is using the code int code operator two or more of those code SWT code style constants The class description lists the style constants that are applicable to the class Style bits are also inherited from superclasses p param parent a composite control which will be the parent of the new instance cannot be null param style the style of control to construct exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the parent is null li ul exception SWTException ul li ERROR THREAD INVALID ACCESS if not called from the thread that created the parent li li ERROR INVALID SUBCLASS if this class is not an allowed subclass li ul see Widget checkSubclass see Widget getStyle
Adds the listener to the collection of listeners who will be notified when the control is selected by sending it one of the messages defined in the code SelectionListener code interface p code widgetSelected code is called when the control is selected code widgetDefaultSelected code is not called p param listener the listener which should be notified exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see SelectionListener see removeSelectionListener see SelectionEvent
TEMPORARY CODE
temporary code to disable text selection
Feature in Windows For some reason setting LIS ENABLED state using LM SETITEM causes the SysLink to become enabled To be specific calling IsWindowEnabled returns true The fix is disable the SysLink after LM SETITEM
NON NLS 1
Returns the receiver s text which will be an empty string if it has never been set or if the receiver is a code SEPARATOR code label return the receiver s text exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Removes the listener from the collection of listeners who will be notified when the control is selected param listener the listener which should no longer be notified exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see SelectionListener see addSelectionListener
Sets the receiver s text p The string can contain both regular text and hyperlinks A hyperlink is delimited by an anchor tag lt A gt and lt A gt Within an anchor a single HREF attribute is supported When a hyperlink is selected the text field of the selection event contains either the text of the hyperlink or the value of its HREF if one was specified In the rare case of identical hyperlinks within the same string the HREF tag can be used to distinguish between them The string may include the mnemonic character and line delimiters p param string the new text exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the text is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
NOTE Call the window proc with WM KEYDOWN rather than WM CHAR so that the key that was ignored during WM KEYDOWN is processed This allows the application to cancel an operation that is normally performed in WM KEYDOWN from WM CHAR
Ensure that the window proc does not process VK SPACE VK RETURN or VK TAB so that it can be handled in WM CHAR This allows the application to cancel an operation that is normally performed in WM KEYDOWN from WM CHAR
