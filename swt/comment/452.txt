Constructs a new instance of this class given its parent and a style value describing its behavior and appearance p The style value is either one of the style constants defined in class code SWT code which is applicable to instances of this class or must be built by em bitwise OR em ing together that is using the code int code operator two or more of those code SWT code style constants The class description lists the style constants that are applicable to the class Style bits are also inherited from superclasses p param parent a composite control which will be the parent of the new instance cannot be null param style the style of control to construct exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the parent is null li ul exception SWTException ul li ERROR THREAD INVALID ACCESS if not called from the thread that created the parent li li ERROR INVALID SUBCLASS if this class is not an allowed subclass li ul see SWT SINGLE see SWT MULTI see Widget checkSubclass see Widget getStyle
Adds the argument to the end of the receiver s list param string the new item exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the string is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see add String int
Adds the argument to the receiver s list at the given zero relative index p Note To add an item at the end of the list use the result of calling code getItemCount code as the index or use code add String code p param string the new item param index the index for the item exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the string is null li li ERROR INVALID RANGE if the index is not between 0 and the number of elements in the list inclusive li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see add String
Adds the listener to the collection of listeners who will be notified when the receiver s selection changes by sending it one of the messages defined in the code SelectionListener code interface p code widgetSelected code is called when the selection changes code widgetDefaultSelected code is typically called when an item is double clicked p param listener the listener which should be notified exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see SelectionListener see removeSelectionListener see SelectionEvent
Deselects the items at the given zero relative indices in the receiver If the item at the given zero relative index in the receiver is selected it is deselected If the item at the index was not selected it remains deselected Indices that are out of range and duplicate indices are ignored param indices the array of indices for the items to deselect exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the set of indices is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Deselects the item at the given zero relative index in the receiver If the item at the index was already deselected it remains deselected Indices that are out of range are ignored param index the index of the item to deselect exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Ensure that at least one item is contained in the range from start to end Note that when start end LB SELITEMRANGEEX deselects the item
Deselects the items at the given zero relative indices in the receiver If the item at the given zero relative index in the receiver is selected it is deselected If the item at the index was not selected it remains deselected The range of the indices is inclusive Indices that are out of range are ignored param start the start index of the items to deselect param end the end index of the items to deselect exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Deselects all selected items in the receiver exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the zero relative index of the item which currently has the focus in the receiver or 1 if no item has focus return the index of the selected item exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the item at the given zero relative index in the receiver Throws an exception if the index is out of range param index the index of the item to return return the item at the given index exception IllegalArgumentException ul li ERROR INVALID RANGE if the index is not between 0 and the number of elements in the list minus 1 inclusive li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the number of items contained in the receiver return the number of items exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the height of the area which would be used to display em one em of the items in the list return the height of one item exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns a possibly empty array of code String code s which are the items in the receiver p Note This is not the actual structure used by the receiver to maintain its list of items so modifying the array will not affect the receiver p return the items in the receiver s list exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns an array of code String code s that are currently selected in the receiver The order of the items is unspecified An empty array indicates that no items are selected p Note This is not the actual structure used by the receiver to maintain its selection so modifying the array will not affect the receiver p return an array representing the selection exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the number of selected items contained in the receiver return the number of selected items exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the zero relative index of the item which is currently selected in the receiver or 1 if no item is selected return the index of the selected item or 1 exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the zero relative indices of the items which are currently selected in the receiver The order of the indices is unspecified The array is empty if no items are selected p Note This is not the actual structure used by the receiver to maintain its selection so modifying the array will not affect the receiver p return the array of indices of the selected items exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the zero relative index of the item which is currently at the top of the receiver This index can change when items are scrolled or new items are added or removed return the index of the top item exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Gets the index of an item p The list is searched starting at 0 until an item is found that is equal to the search item If no item is found 1 is returned Indexing is zero based param string the search item return the index of the item exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the string is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Bug in Windows For some reason LB FINDSTRINGEXACT will not find empty strings even though it is legal to insert an empty string into a list The fix is to search the list an item at a time
Use LB FINDSTRINGEXACT to search for the item
Searches the receiver s list starting at the given zero relative index until an item is found that is equal to the argument and returns the index of that item If no item is found or the starting index is out of range returns 1 param string the search item param start the zero relative index at which to start the search return the index of the item exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the string is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns code true code if the item is selected and code false code otherwise Indices out of range are ignored param index the index of the item return the visibility state of the item at the index exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Removes the items from the receiver at the given zero relative indices param indices the array of indices of the items exception IllegalArgumentException ul li ERROR INVALID RANGE if the index is not between 0 and the number of elements in the list minus 1 inclusive li li ERROR NULL ARGUMENT if the indices array is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Removes the item from the receiver at the given zero relative index param index the index for the item exception IllegalArgumentException ul li ERROR INVALID RANGE if the index is not between 0 and the number of elements in the list minus 1 inclusive li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Removes the items from the receiver which are between the given zero relative start and end indices inclusive param start the start of the range param end the end of the range exception IllegalArgumentException ul li ERROR INVALID RANGE if either the start or end are not between 0 and the number of elements in the list minus 1 inclusive li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Searches the receiver s list starting at the first item until an item is found that is equal to the argument and removes that item from the list param string the item to remove exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the string is null li li ERROR INVALID ARGUMENT if the string is not found in the list li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Removes all of the items from the receiver p exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Removes the listener from the collection of listeners who will be notified when the receiver s selection changes param listener the listener which should no longer be notified exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see SelectionListener see addSelectionListener
Selects the items at the given zero relative indices in the receiver The current selection is not cleared before the new items are selected p If the item at a given index is not selected it is selected If the item at a given index was already selected it remains selected Indices that are out of range and duplicate indices are ignored If the receiver is single select and multiple indices are specified then all indices are ignored param indices the array of indices for the items to select exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the array of indices is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see List setSelection int
Selects the item at the given zero relative index in the receiver s list If the item at the index was already selected it remains selected Indices that are out of range are ignored param index the index of the item to select exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Selects the items in the range specified by the given zero relative indices in the receiver The range of indices is inclusive The current selection is not cleared before the new items are selected p If an item in the given range is not selected it is selected If an item in the given range was already selected it remains selected Indices that are out of range are ignored and no items will be selected if start is greater than end If the receiver is single select and there is more than one item in the given range then all indices are ignored param start the start of the range param end the end of the range exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see List setSelection int int
Note that when start end LB SELITEMRANGEEX deselects the item
Selects all of the items in the receiver p If the receiver is single select do nothing exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Bug in Windows If the receiver is scrolled horizontally and is resized the list does not redraw properly The fix is to redraw the control when resizing is not deferred and the new size is different from the previous size
checkWidget
Sets the text of the item in the receiver s list at the given zero relative index to the string argument This is equivalent to code remove code ing the old item at the index and then code add code ing the new item at that index param index the index for the item param string the new text for the item exception IllegalArgumentException ul li ERROR INVALID RANGE if the index is not between 0 and the number of elements in the list minus 1 inclusive li li ERROR NULL ARGUMENT if the string is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Sets the receiver s items to be the given array of items param items the array of items exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the items array is null li li ERROR INVALID ARGUMENT if an item in the items array is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Selects the items at the given zero relative indices in the receiver The current selection is cleared before the new items are selected p Indices that are out of range and duplicate indices are ignored If the receiver is single select and multiple indices are specified then all indices are ignored param indices the indices of the items to select exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the array of indices is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see List deselectAll see List select int
Sets the receiver s selection to be the given array of items The current selection is cleared before the new items are selected p Items that are not in the receiver are ignored If the receiver is single select and multiple items are specified then all items are ignored param items the array of items exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the array of items is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see List deselectAll see List select int see List setSelection int
Selects the item at the given zero relative index in the receiver If the item at the index was already selected it remains selected The current selection is first cleared then the new item is selected Indices that are out of range are ignored param index the index of the item to select exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see List deselectAll see List select int
Selects the items in the range specified by the given zero relative indices in the receiver The range of indices is inclusive The current selection is cleared before the new items are selected p Indices that are out of range are ignored and no items will be selected if start is greater than end If the receiver is single select and there is more than one item in the given range then all indices are ignored param start the start index of the items to select param end the end index of the items to select exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see List deselectAll see List select int int
Sets the zero relative index of the item which is currently at the top of the receiver This index can change when items are scrolled or new items are added and removed param index the index of the top item exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Shows the selection If the selection is already showing in the receiver this method simply returns Otherwise the items are scrolled until the selection is visible exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
