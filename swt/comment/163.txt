the handle to the OS device context Warning This field is platform dependent p b IMPORTANT b This field is em not em part of the SWT public API It is marked public only so that it can be shared within the packages provided by SWT It is not available on all platforms and should never be accessed from application code p
Prevents uninitialized instances from being created outside the package
Constructs a new instance of this class which has been configured to draw on the specified drawable Sets the foreground and background color in the GC to match those in the drawable p You must dispose the graphics context when it is no longer required p param drawable the drawable to draw on exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the drawable is null li li ERROR NULL ARGUMENT if there is no current device li li ERROR INVALID ARGUMENT if the drawable is an image that is not a bitmap or an icon if the drawable is an image or printer that is already selected into another graphics context li ul exception SWTError ul li ERROR NO HANDLES if a handle could not be obtained for gc creation li ul
Constructs a new instance of this class which has been configured to draw on the specified drawable Sets the foreground and background color in the GC to match those in the drawable p You must dispose the graphics context when it is no longer required p param drawable the drawable to draw on param style the style of GC to construct exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the drawable is null li li ERROR NULL ARGUMENT if there is no current device li li ERROR INVALID ARGUMENT if the drawable is an image that is not a bitmap or an icon if the drawable is an image or printer that is already selected into another graphics context li ul exception SWTError ul li ERROR NO HANDLES if a handle could not be obtained for gc creation li ul since 2 1 2
Get the HDC for the device
Copy the bitmap area
Release the HDC for the device
Copies a rectangular area of the receiver at the specified position into the image which must be of type code SWT BITMAP code param image the image to copy into param x the x coordinate in the receiver of the area to be copied param y the y coordinate in the receiver of the area to be copied exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the image is null li li ERROR INVALID ARGUMENT if the image is not a bitmap or has been disposed li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Copies a rectangular area of the receiver at the source position onto the receiver at the destination position param srcX the x coordinate in the receiver of the area to be copied param srcY the y coordinate in the receiver of the area to be copied param width the width of the area to copy param height the height of the area to copy param destX the x coordinate in the receiver of the area to copy to param destY the y coordinate in the receiver of the area to copy to exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Feature in WinCE The function WindowFromDC is not part of the WinCE SDK The fix is to remember the HWND
Feature in WinCE ScrollWindowEx does not accept combined vertical and horizontal scrolling The fix is to do a BitBlt and invalidate the appropriate source area
Copies a rectangular area of the receiver at the source position onto the receiver at the destination position param srcX the x coordinate in the receiver of the area to be copied param srcY the y coordinate in the receiver of the area to be copied param width the width of the area to copy param height the height of the area to copy param destX the x coordinate in the receiver of the area to copy to param destY the y coordinate in the receiver of the area to copy to param paint if code true code paint events will be generated for old and obscured areas exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul since 3 1
NON NLS 1
Feature in Windows The default end caps is PS ENDCAP ROUND and the default line join is PS OIN ROUND which are different from other platforms The fix is to change these values when line width is widened
Select stock pen and brush objects and free resources
Put back the original bitmap into the device context This will ensure that we have not left a bitmap selected in it when we delete the HDC
Dispose the HDC
Disposes of the operating system resources associated with the graphics context Applications must dispose of all GCs which they allocate
swap angles
compute arc with a simple linear interpolation
Feature in WinCE The function Arc is not present in the WinCE SDK The fix is to emulate arc drawing by using Polyline
Draws the outline of a circular or elliptical arc within the specified rectangular area p The resulting arc begins at code startAngle code and extends for code arcAngle code degrees using the current color Angles are interpreted such that 0 degrees is at the 3 o clock position A positive value indicates a counter clockwise rotation while a negative value indicates a clockwise rotation p p The center of the arc is the center of the rectangle whose origin is code x code code y code and whose size is specified by the code width code and code height code arguments p p The resulting arc covers an area code width 1 code pixels wide by code height 1 code pixels tall p param x the x coordinate of the upper left corner of the arc to be drawn param y the y coordinate of the upper left corner of the arc to be drawn param width the width of the arc to be drawn param height the height of the arc to be drawn param startAngle the beginning angle param arcAngle the angular extent of the arc relative to the start angle exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Draws a rectangle based on the specified arguments which has the appearance of the platform s em focus rectangle em if the platform supports such a notion and otherwise draws a simple rectangle in the receiver s foreground color param x the x coordinate of the rectangle param y the y coordinate of the rectangle param width the width of the rectangle param height the height of the rectangle exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul see drawRectangle int int int int
Draws the given image in the receiver at the specified coordinates param image the image to draw param x the x coordinate of where to draw param y the y coordinate of where to draw exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the image is null li li ERROR INVALID ARGUMENT if the image has been disposed li li ERROR INVALID ARGUMENT if the given coordinates are outside the bounds of the image li exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul exception SWTError ul li ERROR NO HANDLES if no handles are available to perform the operation li ul
Copies a rectangular area from the source image into a potentially different sized rectangular area in the receiver If the source and destination areas are of differing sizes then the source area will be stretched or shrunk to fit the destination area as it is copied The copy fails if any part of the source rectangle lies outside the bounds of the source image or if any of the width or height arguments are negative param image the source image param srcX the x coordinate in the source image to copy from param srcY the y coordinate in the source image to copy from param srcWidth the width in pixels to copy from the source param srcHeight the height in pixels to copy from the source param destX the x coordinate in the destination to copy to param destY the y coordinate in the destination to copy to param destWidth the width in pixels of the destination rectangle param destHeight the height in pixels of the destination rectangle exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the image is null li li ERROR INVALID ARGUMENT if the image has been disposed li li ERROR INVALID ARGUMENT if any of the width or height arguments are negative li ERROR INVALID ARGUMENT if the source rectangle is not contained within the bounds of the source image li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul exception SWTError ul li ERROR NO HANDLES if no handles are available to perform the operation li ul
TODO cache bitmap
Simple case no stretching entire icon
Get the icon info
Get the icon width and height
Draw the icon
Create the icon info and HDC s
Blt the color bitmap
Blt the mask bitmap
Destroy the new icon src and mask and hdc s
Simple case no stretching entire icon
Free icon info
Simple cases
Feature in Windows AlphaBlend alters the alpha channel if the destination is a 32 bit depth bitmap The fix is to draw to a temporary 24 bit depth bitmap first and then draw the temporary bitmap
Check clipping
Optimization Recalculate src and dest rectangles so that only the clipping area is drawn
Create resources
Get the background pixels
Get the foreground pixels
Merge the alpha channel in place
Scale the foreground pixels with alpha
Bug in WinCE and Win98 StretchBlt does not correctly stretch when the source and destination HDCs are the same The workaround is to stretch to a temporary HDC and blit back into the original HDC Note that on WinCE StretchBlt correctly compresses the image when the source and destination HDCs are the same
Compose the pixels
Draw the composed pixels
Free resources
Create a clipping region from the mask
Stretch the clipping mask if needed
Find the RGB values for the transparent pixel
Direct color image
Palette based bitmap
Set the few fields necessary to get the RGB data out
Palette based DIBSECTION
Create the mask for the source image
Draw the source bitmap transparently using invert and mask invert
Most printers do not support BitBlt draw the source bitmap transparently using clipping
Note in WinCE TransparentImage uses the first entry of a palette based image when there are multiple entries that have the same transparent color
Draws a line using the foreground color between the points code x1 code code y1 code and code x2 code code y2 code param x1 the first point s x coordinate param y1 the first point s y coordinate param x2 the second point s x coordinate param y2 the second point s y coordinate exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
set the background color we may not have to do this work
Draws the outline of an oval using the foreground color within the specified rectangular area p The result is a circle or ellipse that fits within the rectangle specified by the code x code code y code code width code and code height code arguments p p The oval covers an area that is code width 1 code pixels wide and code height 1 code pixels tall p param x the x coordinate of the upper left corner of the oval to be drawn param y the y coordinate of the upper left corner of the oval to be drawn param width the width of the oval to be drawn param height the height of the oval to be drawn exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Draws the path described by the parameter param path the path to draw exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the parameter is null li li ERROR INVALID ARGUMENT if the parameter has been disposed li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul see Path since 3 1
Draws a pixel using the foreground color at the specified point code x code code y code p Note that the receiver s line attributes do not affect this operation p param x the point s x coordinate param y the point s y coordinate exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul since 3 0
Draws the closed polygon which is defined by the specified array of integer coordinates using the receiver s foreground color The array contains alternating x and y values which are considered to represent points which are the vertices of the polygon Lines are drawn between each consecutive pair and between the first pair and last pair in the array param pointArray an array of alternating x and y values which are the vertices of the polygon exception IllegalArgumentException ul li ERROR NULL ARGUMENT if pointArray is null li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Draws the polyline which is defined by the specified array of integer coordinates using the receiver s foreground color The array contains alternating x and y values which are considered to represent points which are the corners of the polyline Lines are drawn between each consecutive pair but not between the first pair and last pair in the array param pointArray an array of alternating x and y values which are the corners of the polyline exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the point array is null li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Draws the outline of the rectangle specified by the arguments using the receiver s foreground color The left and right edges of the rectangle are at code x code and code x width code The top and bottom edges are at code y code and code y height code param x the x coordinate of the rectangle to be drawn param y the y coordinate of the rectangle to be drawn param width the width of the rectangle to be drawn param height the height of the rectangle to be drawn exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Draws the outline of the specified rectangle using the receiver s foreground color The left and right edges of the rectangle are at code rect x code and code rect x rect width code The top and bottom edges are at code rect y code and code rect y rect height code param rect the rectangle to draw exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the rectangle is null li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Bug in WinCE PPC On certain devices RoundRect does not draw all the pixels The workaround is to draw a round rectangle using lines and arcs
Draws the outline of the round cornered rectangle specified by the arguments using the receiver s foreground color The left and right edges of the rectangle are at code x code and code x width code The top and bottom edges are at code y code and code y height code The em roundness em of the corners is specified by the code arcWidth code and code arcHeight code arguments which are respectively the width and height of the ellipse used to draw the corners param x the x coordinate of the rectangle to be drawn param y the y coordinate of the rectangle to be drawn param width the width of the rectangle to be drawn param height the height of the rectangle to be drawn param arcWidth the width of the arc param arcHeight the height of the arc exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Draws the given string using the receiver s current font and foreground color No tab expansion or carriage return processing will be performed The background of the rectangular area where the string is being drawn will be filled with the receiver s background color param string the string to be drawn param x the x coordinate of the top left corner of the rectangular area where the string is to be drawn param y the y coordinate of the top left corner of the rectangular area where the string is to be drawn exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the string is null li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
TCHAR buffer new TCHAR getCodePage string false
Draws the given string using the receiver s current font and foreground color No tab expansion or carriage return processing will be performed If code isTransparent code is code true code then the background of the rectangular area where the string is being drawn will not be modified otherwise it will be filled with the receiver s background color param string the string to be drawn param x the x coordinate of the top left corner of the rectangular area where the string is to be drawn param y the y coordinate of the top left corner of the rectangular area where the string is to be drawn param isTransparent if code true code the background will be transparent otherwise it will be opaque exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the string is null li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Draws the given string using the receiver s current font and foreground color Tab expansion and carriage return processing are performed The background of the rectangular area where the text is being drawn will be filled with the receiver s background color param string the string to be drawn param x the x coordinate of the top left corner of the rectangular area where the text is to be drawn param y the y coordinate of the top left corner of the rectangular area where the text is to be drawn exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the string is null li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Draws the given string using the receiver s current font and foreground color Tab expansion and carriage return processing are performed If code isTransparent code is code true code then the background of the rectangular area where the text is being drawn will not be modified otherwise it will be filled with the receiver s background color param string the string to be drawn param x the x coordinate of the top left corner of the rectangular area where the text is to be drawn param y the y coordinate of the top left corner of the rectangular area where the text is to be drawn param isTransparent if code true code the background will be transparent otherwise it will be opaque exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the string is null li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Feature in Windows For some reason DrawText the maximum value for the bottom and right coordinates for the RECT that is used to position the text is different on between Windows versions If this value is larger than the maximum nothing is drawn On Windows 98 the limit is 0x7FFF On Windows CE NT and 2000 it is 0x6FFFFFF And on XP it is 0x7FFFFFFF The fix is to use the the smaller limit for Windows 98 and the larger limit on the other Windows platforms
Draws the given string using the receiver s current font and foreground color Tab expansion line delimiter and mnemonic processing are performed according to the specified flags If code flags code includes code DRAW TRANSPARENT code then the background of the rectangular area where the text is being drawn will not be modified otherwise it will be filled with the receiver s background color p The parameter code flags code may be a combination of dl dt b DRAW DELIMITER b dt dd draw multiple lines dd dt b DRAW TAB b dt dd expand tabs dd dt b DRAW MNEMONIC b dt dd underline the mnemonic character dd dt b DRAW TRANSPARENT b dt dd transparent background dd dl p param string the string to be drawn param x the x coordinate of the top left corner of the rectangular area where the text is to be drawn param y the y coordinate of the top left corner of the rectangular area where the text is to be drawn param flags the flags specifing how to process the text exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the string is null li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Compares the argument to the receiver and returns true if they represent the em same em object using a class specific comparison param object the object to compare with this object return code true code if the object is the same as this object and code false code otherwise see hashCode
swap angles
compute arc with a simple linear interpolation
Feature in WinCE The function Pie is not present in the WinCE SDK The fix is to emulate it by using Polygon
Fills the interior of a circular or elliptical arc within the specified rectangular area with the receiver s background color p The resulting arc begins at code startAngle code and extends for code arcAngle code degrees using the current color Angles are interpreted such that 0 degrees is at the 3 o clock position A positive value indicates a counter clockwise rotation while a negative value indicates a clockwise rotation p p The center of the arc is the center of the rectangle whose origin is code x code code y code and whose size is specified by the code width code and code height code arguments p p The resulting arc covers an area code width 1 code pixels wide by code height 1 code pixels tall p param x the x coordinate of the upper left corner of the arc to be filled param y the y coordinate of the upper left corner of the arc to be filled param width the width of the arc to be filled param height the height of the arc to be filled param startAngle the beginning angle param arcAngle the angular extent of the arc relative to the start angle exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul see drawArc
Bug in Windows On Windows 2000 when the device is a printer GradientFill swaps red and blue color components causing the gradient to be printed in the wrong color On Windows 98 when the device is a printer GradientFill does not fill completely to the right edge of the rectangle The fix is not to use GradientFill for printer devices
Fills the interior of the specified rectangle with a gradient sweeping from left to right or top to bottom progressing from the receiver s foreground color to its background color param x the x coordinate of the rectangle to be filled param y the y coordinate of the rectangle to be filled param width the width of the rectangle to be filled may be negative inverts direction of gradient if horizontal param height the height of the rectangle to be filled may be negative inverts direction of gradient if vertical param vertical if true sweeps from top to bottom else sweeps from left to right exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul see drawRectangle int int int int
Assumes that user sets the background color
Fills the interior of an oval within the specified rectangular area with the receiver s background color param x the x coordinate of the upper left corner of the oval to be filled param y the y coordinate of the upper left corner of the oval to be filled param width the width of the oval to be filled param height the height of the oval to be filled exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul see drawOval
Fills the path described by the parameter param path the path to fill exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the parameter is null li li ERROR INVALID ARGUMENT if the parameter has been disposed li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul see Path since 3 1
Fills the interior of the closed polygon which is defined by the specified array of integer coordinates using the receiver s background color The array contains alternating x and y values which are considered to represent points which are the vertices of the polygon Lines are drawn between each consecutive pair and between the first pair and last pair in the array param pointArray an array of alternating x and y values which are the vertices of the polygon exception IllegalArgumentException ul li ERROR NULL ARGUMENT if pointArray is null li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul see drawPolygon
Fills the interior of the rectangle specified by the arguments using the receiver s background color param x the x coordinate of the rectangle to be filled param y the y coordinate of the rectangle to be filled param width the width of the rectangle to be filled param height the height of the rectangle to be filled exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul see drawRectangle int int int int
Fills the interior of the specified rectangle using the receiver s background color param rect the rectangle to be filled exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the rectangle is null li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul see drawRectangle int int int int
Fills the interior of the round cornered rectangle specified by the arguments using the receiver s background color param x the x coordinate of the rectangle to be filled param y the y coordinate of the rectangle to be filled param width the width of the rectangle to be filled param height the height of the rectangle to be filled param arcWidth the width of the arc param arcHeight the height of the arc exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul see drawRoundRectangle
Note Flush does not flush the output to the underline HDC This is done by calling GetHDC followed by ReleaseHDC
Returns the em advance width em of the specified character in the font which is currently selected into the receiver p The advance width is defined as the horizontal distance the cursor should move after printing the character in the selected font p param ch the character to measure return the distance in the x direction to move past the character before painting the next exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Returns code true code if receiver is using the operating system s advanced graphics subsystem Otherwise code false code is returned to indicate that normal graphics are in use p Advanced graphics may not be installed for the operating system In this case code false code is always returned Some operating system have only one graphics subsystem If this subsystem supports advanced graphics then code true code is always returned If any graphics operation such as alpha antialias patterns interpolation paths clipping or transformation has caused the receiver to switch from regular to advanced graphics mode code true code is returned If the receiver has been explicitly switched to advanced mode and this mode is supported code true code is returned p return the advanced value exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul see setAdvanced since 3 1
Returns the receiver s alpha value return the alpha value exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul since 3 1
Returns the receiver s anti aliasing setting value which will be one of code SWT DEFAULT code code SWT OFF code or code SWT ON code Note that this controls anti aliasing for all em non text drawing em operations return the anti aliasing setting exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul see getTextAntialias since 3 1
Returns the background color return the receiver s background color exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Returns the background pattern The default value is code null code return the receiver s background pattern exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul see Pattern since 3 1
GetCharABCWidths only succeeds on truetype fonts
It wasn t a truetype font
Returns the width of the specified character in the font selected into the receiver p The width is defined as the space taken up by the actual character not including the leading and tailing whitespace or overhang p param ch the character to measure return the width of the character exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Returns the bounding rectangle of the receiver s clipping region If no clipping region is set the return value will be a rectangle which covers the entire bounds of the object the receiver is drawing on return the bounding rectangle of the clipping region exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Sets the region managed by the argument to the current clipping region of the receiver param region the region to fill with the clipping region exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the region is null li li ERROR INVALID ARGUMENT if the region is disposed li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Returns the receiver s fill rule which will be one of code SWT FILL EVEN ODD code or code SWT FILL WINDING code return the receiver s fill rule exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul since 3 1
Returns the font currently being used by the receiver to draw and measure text return the receiver s font exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Returns a FontMetrics which contains information about the font currently being used by the receiver to draw and measure text return font metrics for the receiver s font exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Returns the receiver s foreground color return the color used for drawing foreground things exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Returns the foreground pattern The default value is code null code return the receiver s foreground pattern exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul see Pattern since 3 1
Returns the receiver s interpolation setting which will be one of code SWT DEFAULT code code SWT NONE code code SWT LOW code or code SWT HIGH code return the receiver s interpolation setting exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul since 3 1
Returns the receiver s line cap style which will be one of the constants code SWT CAP FLAT code code SWT CAP ROUND code or code SWT CAP SQUARE code return the cap style used for drawing lines exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul since 3 1
Returns the receiver s line dash style The default value is code null code return the lin dash style used for drawing lines exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul since 3 1
Returns the receiver s line join style which will be one of the constants code SWT OIN MITER code code SWT OIN ROUND code or code SWT OIN BEVEL code return the join style used for drawing lines exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul since 3 1
Returns the receiver s line style which will be one of the constants code SWT LINE SOLID code code SWT LINE DASH code code SWT LINE DOT code code SWT LINE DASHDOT code or code SWT LINE DASHDOTDOT code return the style used for drawing lines exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Returns the width that will be used when drawing lines for all of the figure drawing operations that is code drawLine code code drawRectangle code code drawPolyline code and so forth return the receiver s line width exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Returns the receiver s style information p Note that the value which is returned by this method em may not match em the value which was provided to the constructor when the receiver was created This can occur when the underlying operating system does not support a particular combination of requested styles p return the style bits exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul since 2 1 2
Returns the receiver s text drawing anti aliasing setting value which will be one of code SWT DEFAULT code code SWT OFF code or code SWT ON code Note that this controls anti aliasing em only em for text drawing operations return the anti aliasing setting exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul see getAntialias since 3 1
Sets the parameter to the transform that is currently being used by the receiver param transform the destination to copy the transform into exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the parameter is null li li ERROR INVALID ARGUMENT if the parameter has been disposed li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul see Transform since 3 1
Returns code true code if this GC is drawing in the mode where the resulting color in the destination is the em exclusive or em of the color values in the source and the destination and code false code if it is drawing in the mode where the destination color is being replaced with the source color value return code true code true if the receiver is in XOR mode and false otherwise exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Feature in GDI The GDI clipping set with Graphics SetClip is always intersected with the GDI clipping at the time the GDI graphics is created This means that the clipping cannot be reset The fix is to clear the clipping before the GDI graphics is created and reset it afterwards
Returns an integer hash code for the receiver Any two objects that return code true code when passed to code equals code must return the same value for this method return the receiver s hash exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul see equals
Returns code true code if the receiver has a clipping region set into it and code false code otherwise If this method returns false the receiver will draw on all available space in the destination If it returns true it will draw only in the area that is covered by the region that can be accessed with code getClipping region code return code true code if the GC has a clipping region and code false code otherwise exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Returns code true code if the GC has been disposed and code false code otherwise p This method gets the dispose state for the GC When a GC has been disposed it is an error to invoke any other method using the GC return code true code when the GC is disposed and code false code otherwise
Sets the receiver to always use the operating system s advanced graphics subsystem for all graphics operations if the argument is code true code If the argument is code false code the advanced graphics subsystem is no longer used advanced graphics state is cleared and the normal graphics subsystem is used from now on p Normally the advanced graphics subsystem is invoked automatically when any one of the alpha antialias patterns interpolation paths clipping or transformation operations in the receiver is requested When the receiver is switched into advanced mode the advanced graphics subsystem performs both advanced and normal graphics operations Because the two subsystems are different their output may differ Switching to advanced graphics before any graphics operations are performed ensures that the output is consistent p p Advanced graphics may not be installed for the operating system In this case this operation does nothing Some operating system have only one graphics subsystem so switching from normal to advanced graphics does nothing However switching from advanced to normal graphics will always clear the advanced graphics state even for operating systems that have only one graphics subsystem p param advanced the new advanced graphics state exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul see setAlpha see setAntialias see setBackgroundPattern see setClipping Path see setForegroundPattern see setInterpolation see setTextAntialias see setTransform see getAdvanced since 3 1
Sets the receiver s anti aliasing value to the parameter which must be one of code SWT DEFAULT code code SWT OFF code or code SWT ON code Note that this controls anti aliasing for all em non text drawing em operations param antialias the anti aliasing setting exception IllegalArgumentException ul li ERROR INVALID ARGUMENT if the parameter is not one of code SWT DEFAULT code code SWT OFF code or code SWT ON code li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul see setTextAntialias since 3 1
Sets the receiver s alpha value param alpha the alpha value exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul since 3 1
Sets the background color The background color is used for fill operations and as the background color when text is drawn param color the new background color for the receiver exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the color is null li li ERROR INVALID ARGUMENT if the color has been disposed li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Sets the background pattern The default value is code null code param pattern the new background pattern exception IllegalArgumentException ul li ERROR INVALID ARGUMENT if the parameter has been disposed li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul see Pattern since 3 1
Sets the area of the receiver which can be changed by drawing operations to the rectangular area specified by the arguments param x the x coordinate of the clipping rectangle param y the y coordinate of the clipping rectangle param width the width of the clipping rectangle param height the height of the clipping rectangle exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Sets the area of the receiver which can be changed by drawing operations to the path specified by the argument param path the clipping path exception IllegalArgumentException ul li ERROR INVALID ARGUMENT if the path has been disposed li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul see Path since 3 1
Sets the area of the receiver which can be changed by drawing operations to the rectangular area specified by the argument Specifying code null code for the rectangle reverts the receiver s clipping area to its original value param rect the clipping rectangle or code null code exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Sets the area of the receiver which can be changed by drawing operations to the region specified by the argument Specifying code null code for the region reverts the receiver s clipping area to its original value param region the clipping region or code null code exception IllegalArgumentException ul li ERROR INVALID ARGUMENT if the region has been disposed li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Sets the receiver s fill rule to the parameter which must be one of code SWT FILL EVEN ODD code or code SWT FILL WINDING code param rule the new fill rule exception IllegalArgumentException ul li ERROR INVALID ARGUMENT if the rule is not one of code SWT FILL EVEN ODD code or code SWT FILL WINDING code li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul since 3 1
Sets the font which will be used by the receiver to draw and measure text to the argument If the argument is null then a default font appropriate for the platform will be used instead param font the new font for the receiver or null to indicate a default font exception IllegalArgumentException ul li ERROR INVALID ARGUMENT if the font has been disposed li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Sets the foreground color The foreground color is used for drawing operations including when text is drawn param color the new foreground color for the receiver exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the color is null li li ERROR INVALID ARGUMENT if the color has been disposed li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Sets the foreground pattern The default value is code null code param pattern the new foreground pattern exception IllegalArgumentException ul li ERROR INVALID ARGUMENT if the parameter has been disposed li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul see Pattern since 3 1
Sets the receiver s interpolation setting to the parameter which must be one of code SWT DEFAULT code code SWT NONE code code SWT LOW code or code SWT HIGH code param interpolation the new interpolation setting exception IllegalArgumentException ul li ERROR INVALID ARGUMENT if the rule is not one of code SWT DEFAULT code code SWT NONE code code SWT LOW code or code SWT HIGH code ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul since 3 1
Sets the receiver s line cap style to the argument which must be one of the constants code SWT CAP FLAT code code SWT CAP ROUND code or code SWT CAP SQUARE code param cap the cap style to be used for drawing lines exception IllegalArgumentException ul li ERROR INVALID ARGUMENT if the style is not valid li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul since 3 1
Sets the receiver s line dash style to the argument The default value is code null code If the argument is not code null code the receiver s line style is set to code SWT LINE CUSTOM code otherwise it is set to code SWT LINE SOLID code param dashes the dash style to be used for drawing lines exception IllegalArgumentException ul li ERROR INVALID ARGUMENT if any of the values in the array is less than or equal 0 li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul since 3 1
Sets the receiver s line join style to the argument which must be one of the constants code SWT OIN MITER code code SWT OIN ROUND code or code SWT OIN BEVEL code param join the join style to be used for drawing lines exception IllegalArgumentException ul li ERROR INVALID ARGUMENT if the style is not valid li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul since 3 1
Sets the receiver s line style to the argument which must be one of the constants code SWT LINE SOLID code code SWT LINE DASH code code SWT LINE DOT code code SWT LINE DASHDOT code or code SWT LINE DASHDOTDOT code param lineStyle the style to be used for drawing lines exception IllegalArgumentException ul li ERROR INVALID ARGUMENT if the style is not valid li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Sets the width that will be used when drawing lines for all of the figure drawing operations that is code drawLine code code drawRectangle code code drawPolyline code and so forth p Note that line width of zero is used as a hint to indicate that the fastest possible line drawing algorithms should be used This means that the output may be different from line width one p param lineWidth the width of a line exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Feature in Windows The default end caps is PS ENDCAP ROUND and the default line join is PS OIN ROUND which are different from other platforms The fix is to change these values when line width is widened
Feature in Windows Windows does not honour line styles other then PS SOLID for pens wider than 1 pixel created with CreatePen The fix is to use ExtCreatePen instead
Feature in Windows PS GEOMETRIC pens cannot have zero width
If the argument is code true code puts the receiver in a drawing mode where the resulting color in the destination is the em exclusive or em of the color values in the source and the destination and if the argument is code false code puts the receiver in a drawing mode where the destination color is replaced with the source color value p Note that this mode in fundamentally unsupportable on certain platforms notably Carbon Mac OS X Clients that want their code to run on all platforms need to avoid this method p param xor if code true code then em xor em mode is used otherwise em source copy em mode is used exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul deprecated this functionality is not supported on some platforms
Sets the receiver s text anti aliasing value to the parameter which must be one of code SWT DEFAULT code code SWT OFF code or code SWT ON code Note that this controls anti aliasing only for all em text drawing em operations param antialias the anti aliasing setting exception IllegalArgumentException ul li ERROR INVALID ARGUMENT if the parameter is not one of code SWT DEFAULT code code SWT OFF code or code SWT ON code li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul see setAntialias since 3 1
Sets the transform that is currently being used by the receiver If the argument is code null code the current transform is set to the identity transform param transform the transform to set exception IllegalArgumentException ul li ERROR INVALID ARGUMENT if the parameter has been disposed li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul see Transform since 3 1
TCHAR buffer new TCHAR getCodePage string false
OS GetTextExtentPoint32 handle SPACE SPACE length size
Returns the extent of the given string No tab expansion or carriage return processing will be performed p The em extent em of a string is the width and height of the rectangular area it would cover if drawn in a particular font in this case the current font in the receiver p param string the string to measure return a point containing the extent of the string exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the string is null li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Returns the extent of the given string Tab expansion and carriage return processing are performed p The em extent em of a string is the width and height of the rectangular area it would cover if drawn in a particular font in this case the current font in the receiver p param string the string to measure return a point containing the extent of the string exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the string is null li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
OS GetTextExtentPoint32 handle SPACE SPACE length size
Returns the extent of the given string Tab expansion line delimiter and mnemonic processing are performed according to the specified flags which can be a combination of dl dt b DRAW DELIMITER b dt dd draw multiple lines dd dt b DRAW TAB b dt dd expand tabs dd dt b DRAW MNEMONIC b dt dd underline the mnemonic character dd dt b DRAW TRANSPARENT b dt dd transparent background dd dl p The em extent em of a string is the width and height of the rectangular area it would cover if drawn in a particular font in this case the current font in the receiver p param string the string to measure param flags the flags specifing how to process the text return a point containing the extent of the string exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the string is null li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Returns a string containing a concise human readable description of the receiver return a string representation of the receiver
Invokes platform specific functionality to allocate a new graphics context p b IMPORTANT b This method is em not em part of the public API for code GC code It is marked public only so that it can be shared within the packages provided by SWT It is not available on all platforms and should never be called from application code p param drawable the Drawable for the receiver param data the data for the receiver return a new code GC code
Invokes platform specific functionality to wrap a graphics context p b IMPORTANT b This method is em not em part of the public API for code GC code It is marked public only so that it can be shared within the packages provided by SWT It is not available on all platforms and should never be called from application code p param hDC the Windows HDC param data the data for the receiver return a new code GC code
