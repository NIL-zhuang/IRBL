Instances of this class provide a selectable user interface object that displays a hierarchy of items and issue notification when an item in the hierarchy is selected p The item children that may be added to instances of this class must be of type code TreeItem code p p Note that although this class is a subclass of code Composite code it does not make sense to add code Control code children to it or set a layout on it p p dl dt b Styles b dt dd SINGLE MULTI CHECK FULL SELECTION dd dt b Events b dt dd Selection DefaultSelection Collapse Expand dd dl p Note Only one of the styles SINGLE and MULTI may be specified p p IMPORTANT This class is em not em intended to be subclassed p
Constructs a new instance of this class given its parent and a style value describing its behavior and appearance p The style value is either one of the style constants defined in class code SWT code which is applicable to instances of this class or must be built by em bitwise OR em ing together that is using the code int code operator two or more of those code SWT code style constants The class description lists the style constants that are applicable to the class Style bits are also inherited from superclasses p param parent a composite control which will be the parent of the new instance cannot be null param style the style of control to construct exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the parent is null li ul exception SWTException ul li ERROR THREAD INVALID ACCESS if not called from the thread that created the parent li li ERROR INVALID SUBCLASS if this class is not an allowed subclass li ul see SWT SINGLE see SWT MULTI see SWT CHECK see Widget checkSubclass see Widget getStyle
Feature in Windows It is not possible to create a tree that scrolls and does not have scroll bars The TVS NOSCROLL style will remove the scroll bars but the tree will never scroll Therefore no matter what style bits are specified set the H SCROLL and V SCROLL bits so that the SWT style will match the widget that Windows creates
Bug in Windows When TVM GETBKCOLOR is used more than once to set the background color of a tree the background color of the lines and the plus minus does not change to the new color The fix is to set the background color to the default before setting the new color
Adds the listener to the collection of listeners who will be notified when the receiver s selection changes by sending it one of the messages defined in the code SelectionListener code interface p When code widgetSelected code is called the item field of the event object is valid If the reciever has code SWT CHECK code style set and the check selection changes the event object detail field contains the value code SWT CHECK code code widgetDefaultSelected code is typically called when an item is double clicked The item field of the event object is valid for default selection but the detail field is not used p param listener the listener which should be notified exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see SelectionListener see removeSelectionListener see SelectionEvent
Adds the listener to the collection of listeners who will be notified when an item in the receiver is expanded or collapsed by sending it one of the messages defined in the code TreeListener code interface param listener the listener which should be notified exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see TreeListener see removeTreeListener
Bug in Windows For some reason when the user clicks on this control the Windows hook WH MSGFILTER is sent despite the fact that an input event from a dialog box message box menu or scroll bar did not seem to occur The fix is to ignore the hook
Feature in Windows If redraw is turned off using WM SETREDRAW and a tree item that is not a child of the first root is selected or scrolled using TVM SELECTITEM or TVM ENSUREVISIBLE then scrolling does not occur The fix is to detect this case and make sure that redraw is temporarly enabled To avoid flashing DefWindowProc is called to disable redrawing NOTE The code that actually works around the problem is in the callers of this method
Feature in Windows In version 5 8 of COMCTL32 DLL if the font is changed for an item the bounds for the item are not updated causing the text to be clipped The fix is to detect the version of COMCTL32 DLL and if it is one of the versions with the problem then use version 5 00 of the control a version that does not have the problem This is the recomended work around from the MSDN
Set the checkbox image list
Feature in Windows When the control is created it does not use the default system font A new HFONT is created and destroyed when the control is destroyed This means that a program that queries the font from this control uses the font in another control and then destroys this control will have the font unexpectedly destroyed in the other control The fix is to assign the font ourselves each time the control is created The control will not destroy a font that it did not create
Bug in Windows For some reason when HDM INSERTITEM is used to insert an item into a header without text if is not possible to set the text at a later time The fix is to insert the item with an empty string
When the first column is created hide the horizontal scroll bar
Redraw to hide the items when the first column is created
Bug in Windows When a child item is added to a parent item that has no children outside of WM NOTIFY with control code TVN ITEMEXPANDED the tree widget does not redraw the indicator The fix is to detect the case when the first child is added to a visible parent item and redraw the parent
if oldStyle OS WS VISIBLE 0 newStyle OS WS VISIBLE
Deselects all selected items in the receiver exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
When the last column is deleted show the horizontal scroll bar Otherwise left align the first column and redraw the columns to the right
Feature in Windows When an item is removed that is not visible in the tree because it belongs to a collapsed branch Windows redraws the tree causing a flash for each item that is removed The fix is to detect whether the item is visible force the widget to be fully painted turn off redraw remove the item and validate the damage caused by the removing of the item
If the item that was deleted was the last child of a tree item that is visible redraw the parent item to force the to be updated
Feature in Windows When a tree is given a background color using TVM SETBKCOLOR and the tree is disabled Windows draws the tree using the background color rather than the disabled colors This is different from the table which draws grayed The fix is to set the default background color while the tree is disabled and restore it when enabled
Feature in Windows When a tree is given a background color using TVM SETBKCOLOR and the tree is disabled Windows draws the tree using the background color rather than the disabled colors This is different from the table which draws grayed The fix is to set the default background color while the tree is disabled and restore it when enabled
Returns the width in pixels of a grid line return the width of a grid line in pixels exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 1
Returns the height of the receiver s header return the height of the header or zero if the header is not visible exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 1
Returns code true code if the receiver s header is visible and code false code otherwise p If one of the receiver s ancestors is not visible or some other condition makes the receiver not visible this method may still indicate that it is considered visible even though it may not actually be showing p return the receiver s header s visibility state exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 1
Returns the column at the given zero relative index in the receiver Throws an exception if the index is out of range If no code TreeColumn code s were created by the programmer this method will throw code ERROR INVALID RANGE code despite the fact that a single column of data may be visible in the tree This occurs when the programmer uses the tree like a list adding items but never creating a column param index the index of the column to return return the column at the given index exception IllegalArgumentException ul li ERROR INVALID RANGE if the index is not between 0 and the number of elements in the list minus 1 inclusive li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 1
Returns the number of columns contained in the receiver If no code TreeColumn code s were created by the programmer this value is zero despite the fact that visually one column of items may be visible This occurs when the programmer uses the tree like a list adding items but never creating a column return the number of columns exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 1
Returns an array of code TreeColumn code s which are the columns in the receiver If no code TreeColumn code s were created by the programmer the array is empty despite the fact that visually one column of items may be visible This occurs when the programmer uses the tree like a list adding items but never creating a column p Note This is not the actual structure used by the receiver to maintain its list of items so modifying the array will not affect the receiver p return the items in the receiver exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 1
Returns the item at the given zero relative index in the receiver Throws an exception if the index is out of range param index the index of the item to return return the item at the given index exception IllegalArgumentException ul li ERROR INVALID RANGE if the index is not between 0 and the number of elements in the list minus 1 inclusive li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 1
Returns the item at the given point in the receiver or null if no such item exists The point is in the coordinate system of the receiver param point the point used to locate the item return the item at the given point exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the point is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the number of items contained in the receiver that are direct item children of the receiver The number that is returned is the number of roots in the tree return the number of items exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the height of the area which would be used to display em one em of the items in the tree return the height of one item exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns a possibly empty array of items contained in the receiver that are direct item children of the receiver These are the roots of the tree p Note This is not the actual structure used by the receiver to maintain its list of items so modifying the array will not affect the receiver p return the items exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Feature in Windows In some cases an expand or collapse message can occurs from within TVM DELETEITEM When this happens the item being destroyed has been removed from the list of items but has not been deleted from the tree The fix is to check for null items and remove them from the list
Returns code true code if the receiver s lines are visible and code false code otherwise p If one of the receiver s ancestors is not visible or some other condition makes the receiver not visible this method may still indicate that it is considered visible even though it may not actually be showing p return the visibility state of the lines exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 1
Returns the receiver s parent item which must be a code TreeItem code or null when the receiver is a root return the receiver s parent item exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns an array of code TreeItem code s that are currently selected in the receiver The order of the items is unspecified An empty array indicates that no items are selected p Note This is not the actual structure used by the receiver to maintain its selection so modifying the array will not affect the receiver p return an array representing the selection exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the number of selected items contained in the receiver return the number of selected items exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the item which is currently at the top of the receiver This item can change when items are expanded collapsed scrolled or new items are added or removed return the item at the top of the receiver exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 2 1
Searches the receiver s list starting at the first column index 0 until a column is found that is equal to the argument and returns the index of that column If no column is found returns 1 param column the search column return the index of the column exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the string is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 1
Searches the receiver s list starting at the first item index 0 until an item is found that is equal to the argument and returns the index of that item If no item is found returns 1 param item the search item return the index of the item exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the tool item is null li li ERROR INVALID ARGUMENT if the tool item has been disposed li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 1
Feature in Windows For some reason when TVM GETIMAGELIST or TVM SETIMAGELIST is sent the tree issues NM CUSTOMDRAW messages This behavior is unwanted when the tree is being disposed The fix is to ingore NM CUSTOMDRAW messages by clearing the custom draw flag NOTE This only happens on Windows XP
OS SendMessage handle OS WM SETREDRAW 1 0
Removes all of the items from the receiver p exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Removes the listener from the collection of listeners who will be notified when the receiver s selection changes param listener the listener which should no longer be notified exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see SelectionListener see addSelectionListener
Removes the listener from the collection of listeners who will be notified when items in the receiver are expanded or collapsed param listener the listener which should no longer be notified exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see TreeListener see addTreeListener
Display a mark indicating the point at which an item will be inserted The drop insert item has a visual hint to show where a dragged item will be inserted when dropped on the tree param item the insert item Null will clear the insertion mark param before true places the insert mark above item false places the insert mark below item exception IllegalArgumentException ul li ERROR INVALID ARGUMENT if the item has been disposed li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Marks the receiver s lines as visible if the argument is code true code and marks it invisible otherwise p If one of the receiver s ancestors is not visible or some other condition makes the receiver not visible marking it visible may not actually cause it to be displayed p param show the new visibility state exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 1
Selects all of the items in the receiver p If the receiver is single select do nothing exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Feature in Windows When a tree is given a background color using TVM SETBKCOLOR and the tree is disabled Windows draws the tree using the background color rather than the disabled colors This is different from the table which draws grayed The fix is to set the default background color while the tree is disabled and restore it when enabled
Ensure that the selection is visible when the tree is resized from a zero size to a size that can show the selection
Bug in Windows Under certain circumstances when WM SETCURSOR is sent from SendMessage Windows GP s in the window proc for the tree The fix is to avoid calling the tree window proc and set the cursor for the tree outside of WM SETCURSOR NOTE This code assumes that the default cursor for the tree is IDC ARROW
Marks the receiver s header as visible if the argument is code true code and marks it invisible otherwise p If one of the receiver s ancestors is not visible or some other condition makes the receiver not visible marking it visible may not actually cause it to be displayed p param show the new visibility state exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 1
Bug in Windows For some reason when WM SETREDRAW is used to turn redraw on for a tree and the tree contains no items the last item in the tree does not redraw properly If the tree has only one item that item is not drawn If another window is dragged on top of the item parts of the item are redrawn and erased at random The fix is to ensure that this case doesn t happen by inserting and deleting an item when redraw is turned on and there are no items in the tree
Select deselect the first item
Bug in Windows When TVM SELECTITEM is used to select and scroll an item to be visible and the client area of the tree is smaller that the size of one item TVM SELECTITEM makes the next item in the tree visible by making it the top item instead of making the desired item visible The fix is to detect the case when the client area is too small and make the desired visible item be the top item in the tree Note that TVM SELECTITEM when called with TVGN FIRSTVISIBLE also requires the work around for scrolling
Feature in Windows When the old and new focused item are the same Windows does not check to make sure that the item is actually selected not just focused The fix is to force the item to draw selected by setting the state mask and to ensure that it is visible
Select deselect the rest of the items
Sets the receiver s selection to be the given array of items The current selection is cleared before the new items are selected p Items that are not in the receiver are ignored If the receiver is single select and multiple items are specified then all items are ignored param items the array of items exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the array of items is null li li ERROR INVALID ARGUMENT if one of the items has been disposed li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see Tree deselectAll
Sets the item which is currently at the top of the receiver This item can change when items are expanded collapsed scrolled or new items are added or removed param item the item to be shown exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the item is null li li ERROR INVALID ARGUMENT if the item has been disposed li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see Tree getTopItem since 2 1
Bug in Windows When TVM ENSUREVISIBLE is used to ensure that an item is visible and the client area of the tree is smaller that the size of one item TVM ENSUREVISIBLE makes the next item in the tree visible by making it the top item instead of making the desired item visible The fix is to detect the case when the client area is too small and make the desired visible item be the top item in the tree
Shows the column If the column is already showing in the receiver this method simply returns Otherwise the columns are scrolled until the column is visible param column the column to be shown exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the item is null li li ERROR INVALID ARGUMENT if the item has been disposed li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 1
Shows the item If the item is already showing in the receiver this method simply returns Otherwise the items are scrolled and expanded until the item is visible param item the item to be shown exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the item is null li li ERROR INVALID ARGUMENT if the item has been disposed li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see Tree showSelection
Shows the selection If the selection is already showing in the receiver this method simply returns Otherwise the items are scrolled until the selection is visible exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see Tree showItem TreeItem
NON NLS 1
bits OS TVS NOTOOLTIPS
Bug on WinCE lParam should be NULL when the message is not sent by a scroll bar control but it contains the handle to the window When the message is sent by a scroll bar control it correctly contains the handle to the scroll bar The fix is to check for both
Keyboard messages
Mouse messages
Other messages
Feature in Windows The tree control beeps in WM CHAR when the search for the item that matches the key stroke fails This is the standard tree behavior but is unexpected when the key that was typed was ESC CR or SPACE The fix is to avoid calling the tree window proc in these cases
Feature in Windows Windows sends NM RETURN from WM KEYDOWN instead of using WM CHAR This means that application code that expects to consume the key press and therefore avoid a SWT DefaultSelection event from WM CHAR will fail The fix is to implement SWT DefaultSelection in WM CHAR instead of using NM RETURN
Ensure that there is an accessible object created for this control because support for checked item and tree column accessibility is temporarily implemented in the accessibility package
Ensure that the window proc does not process VK SPACE so that it can be handled in WM CHAR This allows the application to cancel an operation that is normally performed in WM KEYDOWN from WM CHAR
OS SendMessage handle OS WM SETREDRAW 1 0
Feature in Windows When multiple item have the TVIS SELECTED state Windows redraws only the focused item in the color used to show the selection when the tree loses or gains focus The fix is to force Windows to redraw all the visible items when focus is gained or lost
In a multi select tree if the user is collapsing a subtree that contains selected items clear the selection from these items and issue a selection event Only items that are selected and visible are cleared This code also runs in the case when no item is selected
Look for check uncheck
Get the selected state of the item under the mouse
Get the selected state of the last selected item
Check for CONTROL or drag selection
Do the selection
Feature in Windows When the old and new focused item are the same Windows does not check to make sure that the item is actually selected not just focused The fix is to force the item to draw selected by setting the state mask This is only necessary when the tree is single select
OS SendMessage handle OS WM SETREDRAW 1 0
Check for CONTROL and reselect the last item
Check for SHIFT or normal select and delect reselect items
Reselect the last item that was unselected
Issue notification
Feature in Windows Inside WM LBUTTONDOWN and WM RBUTTONDOWN the widget starts a modal loop to determine if the user wants to begin a drag drop operation or marque select Unfortunately this modal loop eats the corresponding mouse up The fix is to detect the cases when the modal loop has eaten the mouse up and issue a fake mouse up
Feature in Windows On NT the automatically created header control is created as a UNICODE window not an ANSI window despite the fact that the parent is created as an ANSI window This means that it sends UNICODE notification messages to the parent window on NT for no good reason The data and size in the NMHEADER and HDITEM structs is identical between the platforms so no different message is actually necessary Despite this Windows sends different messages The fix is to look for both messages despite the platform This works because only one will be sent on either platform never both
TODO column flashes when resized
Feature in Windows The receiver uses WM RBUTTONDOWN to initiate a drag drop operation depending on how the user moves the mouse If the user clicks the right button without moving the mouse the tree consumes the corresponding WM RBUTTONUP The fix is to avoid calling the window proc for the tree
if OS GetCapture handle OS SetCapture handle
Feature in Windows When the user selects a tree item with the right mouse button the item remains selected only as long as the user does not release or move the mouse As soon as this happens the selection snaps back to the previous selection This behavior can be observed in the Explorer but is not instantly apparent because the Explorer explicity sets the selection when the user chooses a menu item If the user cancels the menu the selection snaps back The fix is to avoid calling the window proc and do the selection ourselves This behavior is consistent with the table
Feature in Windows For some reason when WM PRINT is used to capture an image of a hierarchy that contains a tree with columns the clipping that is used to stop the first column from drawing on top of subsequent columns stops the first column and the tree lines from drawing This does not happen during WM PAINT The fix is to draw without clipping and then draw the rest of the columns on top Since the drawing is happening in WM PRINTCLIENT the redrawing is not visible
Feature in Windows When multiple item have the TVIS SELECTED state Windows redraws only the focused item in the color used to show the selection when the tree loses or gains focus The fix is to force Windows to redraw all the visible items when focus is gained or lost
Feature in Windows Tree controls send WM CTLCOLOREDIT to allow application code to change the default colors This is undocumented and conflicts with TVM SETTEXTCOLOR and TVM SETBKCOLOR the documented way to do this The fix is to ignore WM CTLCOLOREDIT messages from trees
Feature in Windows When a new tree item is inserted using TVM INSERTITEM a TVN GETDISPINFO is sent before TVM INSERTITEM returns and before the item is added to the items array The fix is to check for null NOTE This only happens on XP with the version 6 00 of COMCTL32 DLL
Feature in Windows When a new tree item is inserted using TVM INSERTITEM and the tree is using custom draw a NM CUSTOMDRAW is sent before TVM INSERTITEM returns and before the item is added to the items array The fix is to check for null NOTE This only happens on XP with the version 6 00 of COMCTL32 DLL
Feature in Windows Under certain circumstances Windows sends CDDS ITEMPOSTPAINT for an empty rectangle This is not a problem providing that graphics do not occur outside the rectangle The fix is to test for the rectangle and draw nothing NOTE This seems to happen when both I IMAGECALLBACK and LPSTR TEXTCALLBACK are used at the same time with TVM SETITEM
Feature in Windows When the mouse is pressed and the selection is first drawn for a tree the item is drawn selected but the TVIS SELECTED bits for the item are not set When the user moves the mouse slightly and a drag and drop operation is not started the item is drawn again and this time TVIS SELECTED is set This means that an item that is in a tree that has the style TVS FULLROWSELECT and that also contains colored cells will not draw the entire row selected until the user moves the mouse The fix is to test for the selection colors and guess that the item is selected NOTE This code doesn t work when the foreground and background of the tree are set to the selection colors but this does not happen in a regular application
Bug in Windows When DrawText is used with DT VCENTER and DT ENDELLIPSIS the ellipsis can draw outside of the rectangle when the rectangle is empty The fix is avoid all text drawing for empty rectangles
Restore the old selection state of both items
Save the old selection state for both items
Bug in Windows When TVM SETINSERTMARK is used to set an insert mark for a tree and an item is expanded or collapsed near the insert mark the tree does not redraw the insert mark properly The fix is to hide and show the insert mark whenever an item is expanded or collapsed
Bug in Windows When TVM SETINSERTMARK is used to set an insert mark for a tree and an item is expanded or collapsed near the insert mark the tree does not redraw the insert mark properly The fix is to hide and show the insert mark whenever an item is expanded or collapsed
Feature in Windows In some cases TVM ITEMEXPANDING is sent from within TVM DELETEITEM for the tree item being destroyed By the time the message is sent the item has already been removed from the list of items The fix is to check for null
Bug in Windows When the numeric keypad asterisk key is used to expand every item in the tree Windows sends TVN ITEMEXPANDING to items in the tree that have already been expanded The fix is to detect that the item is already expanded and ignore the notification
Feature in Pocket PC The tree and table controls detect the tap and hold gesture by default They send a GN CONTEXTMENU message to show the popup menu This default behaviour is unwanted on Pocket PC 2002 when no menu has been set as it still draws a red circle The fix is to disable this default behaviour when no menu is set by returning TRUE when receiving the Pocket PC 2002 specific NM RECOGNIZEGESTURE message
