NOTE Good javadoc coding style is to put the values of static final constants in the comments This reinforces the fact that consumers are allowed to rely on the value and they must since the values are compiled inline in their code We can em not em change the values of these constants between releases
The null event type value is 0 since 3 0
The key down event type value is 1
The key up event type value is 2
The mouse down event type value is 3
The mouse up event type value is 4
The mouse move event type value is 5
The mouse enter event type value is 6
The mouse exit event type value is 7
The mouse double click event type value is 8
The paint event type value is 9
The move event type value is 10
The resize event type value is 11
The dispose event type value is 12
The selection event type value is 13 p This event is sent when selection occurs For example selection occurs in a List when the user selects an item or items with the keyboard or mouse On some platforms the event occurs when a mouse button or key is pressed On others it happens when the mouse or key is released The exact key or mouse gesture that causes this event is platform specific p
The default selection event type value is 14 p This event is sent when default selection occurs For example on some platforms default selection occurs in a List when the user double clicks an item or types return in a Text On some platforms the event occurs when a mouse button or key is pressed On others it happens when the mouse or key is released The exact key or mouse gesture that causes this event is platform specific p
The focus in event type value is 15
The focus out event type value is 16
The expand event type value is 17
The collapse event type value is 18
The iconify event type value is 19
The de iconify event type value is 20
The close event type value is 21
The show event type value is 22
The hide event type value is 23
The modify event type value is 24
The verify event type value is 25
The activate event type value is 26
The deactivate event type value is 27
The help event type value is 28
The drag detect event type value is 29
The arm event type value is 30
The traverse event type value is 31
The mouse hover event type value is 32
The hardware key down event type value is 33
The hardware key up event type value is 34
The menu detect event type value is 35 since 3 0
The set data event type value is 36 since 3 0
The mouse wheel event type value is 37 since 3 1
A constant known to be zero 0 used in operations which take bit flags to indicate that no bits are set
Indicates that a user interface component is being dragged for example dragging the thumb of a scroll bar value is 1
A constant known to be zero 0 used in operations which take pointers to indicate a null argument
Indicates that a default should be used value is 1
Indicates that a property is off value is 0 since 3 1
Indicates that a property is on value is 1 since 3 1
Indicates low quality value is 1 since 3 1
Indicates high quality value is 2 since 3 1
Style constant for menu bar behavior value is 1 lt lt 1 p b Used By b ul li code Menu code li ul p
Style constant for drop down menu list behavior value is 1 lt lt 2 p b Used By b ul li code Menu code li li code ToolItem code li li code CoolItem code li li code Combo code li ul p
Style constant for pop up menu behavior value is 1 lt lt 3 p b Used By b ul li code Menu code li ul p
Style constant for line separator behavior value is 1 lt lt 1 p b Used By b ul li code Label code li li code MenuItem code li li code ToolItem code li ul p
Style constant for toggle button behavior value is 1 lt lt 1 p b Used By b ul li code Button code li ul p
Style constant for arrow button behavior value is 1 lt lt 2 p b Used By b ul li code Button code li ul p
Style constant for push button behavior value is 1 lt lt 3 p b Used By b ul li code Button code li li code MenuItem code li li code ToolItem code li ul p
Style constant for radio button behavior value is 1 lt lt 4 p b Used By b ul li code Button code li li code MenuItem code li li code ToolItem code li ul p
Style constant for check box behavior value is 1 lt lt 5 p b Used By b ul li code Button code li li code MenuItem code li li code ToolItem code li li code Table code li li code Tree code li ul p
Style constant for cascade behavior value is 1 lt lt 6 p b Used By b ul li code MenuItem code li ul p
Style constant for multi selection behavior in lists and multiple line support on text fields value is 1 lt lt 1 p b Used By b ul li code Text code li li code List code li li code FileDialog code li ul p
Style constant for single selection behavior in lists and single line support on text fields value is 1 lt lt 2 p b Used By b ul li code Text code li li code List code li li code Table code li li code Tree code li ul p
Style constant for read only behavior value is 1 lt lt 3 p b Used By b ul li code Combo code li li code Text code li ul p
Style constant for automatic line wrap behavior value is 1 lt lt 6 p b Used By b ul li code Label code li li code Text code li li code ToolBar code li li code Spinner code li ul p
Style constant for simple not drop down behavior value is 1 lt lt 6 p b Used By b ul li code Combo code li ul p
Style constant for password behavior value is 1 lt lt 22 p b Used By b ul li code Text code li ul p since 3 0
Style constant for shadow in behavior value is 1 lt lt 2 br Note that this is a em HINT em p b Used By b ul li code Label code li li code Group code li ul p
Style constant for shadow out behavior value is 1 lt lt 3 br Note that this is a em HINT em p b Used By b ul li code Label code li li code Group code li li code ToolBar code li ul p
Style constant for shadow etched in behavior value is 1 lt lt 4 br Note that this is a em HINT em It is ignored on all platforms except Motif p b Used By b ul li code Group code li ul p
Style constant for shadow etched out behavior value is 1 lt lt 6 br Note that this is a em HINT em It is ignored on all platforms except Motif p b Used By b ul li code Group code li ul p
Style constant for no shadow behavior value is 1 lt lt 5 br Note that this is a em HINT em p b Used By b ul li code Label code li li code Group code li ul p
Style constant for progress bar behavior value is 1 lt lt 1 p b Used By b ul li code ProgressBar code li ul p
Style constant for tool window behavior value is 1 lt lt 2 p A tool window is a window intended to be used as a floating toolbar It typically has a title bar that is shorter than a normal title bar and the window title is typically drawn using a smaller font br Note that this is a em HINT em p p b Used By b ul li code Decorations code and subclasses li ul p
Style constant to ensure no trimmings are used value is 1 lt lt 3 br Note that this overrides all other trim styles p b Used By b ul li code Decorations code and subclasses li ul p
Style constant for resize box trim value is 1 lt lt 4 p b Used By b ul li code Decorations code and subclasses li li code Tracker code li ul p
Style constant for title area trim value is 1 lt lt 5 p b Used By b ul li code Decorations code and subclasses li ul p
Style constant for close box trim value is 1 lt lt 6 since we do not distinguish between CLOSE style and MENU style p b Used By b ul li code Decorations code and subclasses li ul p
Style constant for shell menu trim value is 1 lt lt 6 since we do not distinguish between CLOSE style and MENU style p b Used By b ul li code Decorations code and subclasses li ul p
Style constant for minimize box trim value is 1 lt lt 7 p b Used By b ul li code Decorations code and subclasses li ul p
Style constant for maximize box trim value is 1 lt lt 10 p b Used By b ul li code Decorations code and subclasses li ul p
Style constant for horizontal scrollbar behavior value is 1 lt lt 8 p b Used By b ul li code Scrollable code and subclasses li ul p
Style constant for vertical scrollbar behavior value is 1 lt lt 9 p b Used By b ul li code Scrollable code and subclasses li ul p
Style constant for bordered behavior value is 1 lt lt 11 br Note that this is a em HINT em p b Used By b ul li code Control code and subclasses li ul p
Style constant indicating that the window manager should clip a widget s children with respect to its viewable area value is 1 lt lt 12 br Note that this is a em HINT em p b Used By b ul li code Control code and subclasses li ul p
Style constant indicating that the window manager should clip a widget s siblings with respect to its viewable area value is 1 lt lt 13 br Note that this is a em HINT em p b Used By b ul li code Control code and subclasses li ul p
Style constant for always on top behavior value is 1 lt lt 14 br Note that this is a em HINT em p b Used By b ul li code Shell code and subclasses li ul p
Trim style convenience constant for the most common top level shell appearance value is CLOSE TITLE MIN MAX RESIZE p b Used By b ul li code Shell code li ul p
Trim style convenience constant for the most common dialog shell appearance value is CLOSE TITLE BORDER p b Used By b ul li code Shell code li ul p
Style constant for modeless behavior value is 0 br Note that this is a em HINT em p b Used By b ul li code Dialog code li li code Shell code li ul p
Style constant for primary modal behavior value is 1 lt lt 15 br Note that this is a em HINT em p b Used By b ul li code Dialog code li li code Shell code li ul p
Style constant for application modal behavior value is 1 lt lt 16 br Note that this is a em HINT em p b Used By b ul li code Dialog code li li code Shell code li ul p
Style constant for system modal behavior value is 1 lt lt 17 br Note that this is a em HINT em p b Used By b ul li code Dialog code li li code Shell code li ul p
Style constant for selection hiding behavior when the widget loses focus value is 1 lt lt 15 br Note that this is a em HINT em p b Used By b ul li code Table code li ul p
Style constant for full row selection behavior value is 1 lt lt 16 br Note that this is a em HINT em p b Used By b ul li code StyledText code li li code Table code li li code Tree code li ul p
Style constant for flat appearance value is 1 lt lt 23 br Note that this is a em HINT em p b Used By b ul li code Button code li li code ToolBar code li ul p
Style constant for flat appearance value is 1 lt lt 16 br Note that this is a em HINT em p b Used By b ul li code ProgressBar code li li code Sash code li ul p
Style constant for no background behavior value is 1 lt lt 18 p By default before a widget paints the client area is filled with the current background color When this style is specified the background is not filled and the application is responsible for filling every pixel of the client area This style might be used as an alternative to double buffering in order to reduce flicker This style does not mean transparent widgets that are obscured will not draw through p p b Used By b ul li code Composite code li ul p
Style constant for no focus from the mouse behavior value is 1 lt lt 19 br Note that this is a em HINT em p b Used By b ul li code Composite code li ul p
Style constant for no redraw on resize behavior value is 1 lt lt 20 p This style stops the entire client area from being invalidated when the size of the Canvas changes Specifically when the size of the Canvas gets smaller the SWT Paint event is not sent When it gets bigger an SWT Paint event is sent with a GC clipped to only the new areas to be painted Without this style the entire client area will be repainted p p b Used By b ul li code Composite code li ul p
Style constant for no paint event merging behavior value is 1 lt lt 21 p b Used By b ul li code Composite code li ul p
Style constant for preventing child radio group behavior value is 1 lt lt 22 p b Used By b ul li code Composite code li ul p
Style constant for left to right orientation value is 1 lt lt 25 p When orientation is not explicitly specified orientation is inherited This means that children will be assigned the orientation of their parent To override this behavior and force an orientation for a child explicitly set the orientation of the child when that child is created br Note that this is a em HINT em p p b Used By b ul li code Control code li li code Menu code li li code GC code li ul p since 2 1 2
Style constant for right to left orientation value is 1 lt lt 26 p When orientation is not explicitly specified orientation is inherited This means that children will be assigned the orientation of their parent To override this behavior and force an orientation for a child explicitly set the orientation of the child when that child is created br Note that this is a em HINT em p p b Used By b ul li code Control code li li code Menu code li li code GC code li ul p since 2 1 2
Style constant to indicate coordinate mirroring value is 1 lt lt 27 p b Used By b ul li code Control code li li code Menu code li ul p since 2 1 2
Style constant to allow embedding value is 1 lt lt 24 p b Used By b ul li code Composite code li ul p since 3 0
Style constant to allow virtual data value is 1 lt lt 28 p b Used By b ul li code Table code li ul p since 3 0
Style constant to indicate double buffering value is 1 lt lt 29 p b Used By b ul li code Control code li ul p since 3 1
Style constant for align up behavior value is 1 lt lt 7 since align UP and align TOP are considered the same p b Used By b ul li code Button code with code ARROW code style li li code Tracker code li ul p
Style constant for align top behavior value is 1 lt lt 7 since align UP and align TOP are considered the same p b Used By b ul li code FormAttachment code in a code FormLayout code li ul p
Style constant for align down behavior value is 1 lt lt 10 since align DOWN and align BOTTOM are considered the same p b Used By b ul li code Button code with code ARROW code style li li code Tracker code li ul p
Style constant for align bottom behavior value is 1 lt lt 10 since align DOWN and align BOTTOM are considered the same p b Used By b ul li code FormAttachment code in a code FormLayout code li ul p
Style constant for leading alignment value is 1 lt lt 14 p b Used By b ul li code Button code li li code Label code li li code TableColumn code li li code Tracker code li li code FormAttachment code in a code FormLayout code li ul p since 2 1 2
Style constant for align left behavior value is 1 lt lt 14 This is a synonym for LEAD value is 1 lt lt 14 Newer applications should use LEAD instead of LEFT to make code more understandable on right to left platforms
Style constant for trailiing alignment value is 1 lt lt 17 p b Used By b ul li code Button code li li code Label code li li code TableColumn code li li code Tracker code li li code FormAttachment code in a code FormLayout code li ul p since 2 1 2
Style constant for align right behavior value is 1 lt lt 17 This is a synonym for TRAIL value is 1 lt lt 14 Newer applications should use TRAIL instead of RIGHT to make code more understandable on right to left platforms
Style constant for align center behavior value is 1 lt lt 24 p b Used By b ul li code Button code li li code Label code li li code TableColumn code li li code FormAttachment code in a code FormLayout code li ul p
Style constant for horizontal alignment or orientation behavior value is 1 lt lt 8 p b Used By b ul li code Label code li li code ProgressBar code li li code Sash code li li code Scale code li li code ScrollBar code li li code Slider code li li code ToolBar code li li code FillLayout code type li li code RowLayout code type li ul p
Style constant for vertical alignment or orientation behavior value is 1 lt lt 9 p b Used By b ul li code Label code li li code ProgressBar code li li code Sash code li li code Scale code li li code ScrollBar code li li code Slider code li li code ToolBar code li li code FillLayout code type li li code RowLayout code type li ul p
Style constant for vertical alignment or orientation behavior value is 1 p b Used By b ul li code GridLayout code type li ul p
Style constant for vertical alignment or orientation behavior value is 4 p b Used By b ul li code GridLayout code type li ul p
Input Method Editor style constant for double byte input behavior value is 1 lt lt 1
Input Method Editor style constant for alpha input behavior value is 1 lt lt 2
Input Method Editor style constant for native input behavior value is 1 lt lt 3
Input Method Editor style constant for phonetic input behavior value is 1 lt lt 4
Input Method Editor style constant for romanicized input behavior value is 1 lt lt 5
ASCII character convenience constant for the backspace character value is the code char code b
ASCII character convenience constant for the carriage return character value is the code char code r
ASCII character convenience constant for the delete character value is the code char code with value 127
ASCII character convenience constant for the escape character value is the code char code with value 27
ASCII character convenience constant for the line feed character value is the code char code n
ASCII character convenience constant for the tab character value is the code char code t since 2 1
keyboard and or mouse event mask indicating that the ALT key was pushed on the keyboard when the event was generated value is 1 lt lt 16
Keyboard and or mouse event mask indicating that the SHIFT key was pushed on the keyboard when the event was generated value is 1 lt lt 17
Keyboard and or mouse event mask indicating that the CTRL key was pushed on the keyboard when the event was generated value is 1 lt lt 18
Keyboard and or mouse event mask indicating that the CTRL key was pushed on the keyboard when the event was generated This is a synonym for CTRL value is 1 lt lt 18
Keyboard and or mouse event mask indicating that the COMMAND key was pushed on the keyboard when the event was generated value is 1 lt lt 22 since 2 1
Keyboard and or mouse event mask indicating all possible keyboard modifiers To allow for the future this mask is intended to be used in place of code that references each individual keyboard mask For example the following expression will determine whether any modifer is pressed and will continue to work as new modifier masks are added code stateMask SWT MODIFIER MASK 0 code since 2 1
Keyboard and or mouse event mask indicating that mouse button one was pushed when the event was generated value is 1 lt lt 19
Keyboard and or mouse event mask indicating that mouse button two was pushed when the event was generated value is 1 lt lt 20
Keyboard and or mouse event mask indicating that mouse button three was pushed when the event was generated value is 1 lt lt 21
Keyboard and or mouse event mask indicating that mouse button four was pushed when the event was generated value is 1 lt lt 23 since 3 1
Keyboard and or mouse event mask indicating that mouse button five was pushed when the event was generated value is 1 lt lt 25 since 3 1
Keyboard and or mouse event mask indicating all possible mouse buttons To allow for the future this mask is intended to be used in place of code that references each individual button mask For example the following expression will determine whether any button is pressed and will continue to work as new button masks are added code stateMask SWT BUTTON MASK 0 code since 2 1
Keyboard and or mouse event mask indicating that the MOD1 key was pushed on the keyboard when the event was generated This is the primary keyboard modifier for the platform since 2 1
Keyboard and or mouse event mask indicating that the MOD2 key was pushed on the keyboard when the event was generated This is the secondary keyboard modifier for the platform since 2 1
Keyboard and or mouse event mask indicating that the MOD3 key was pushed on the keyboard when the event was generated since 2 1
Keyboard and or mouse event mask indicating that the MOD4 key was pushed on the keyboard when the event was generated since 2 1
Constants to indicate line scrolling value is 1 p b Used By b ul li code Control code li ul p since 3 1
Constants to indicate page scrolling value is 2 p b Used By b ul li code Control code li ul p since 3 1
Accelerator constant used to differentiate a key code from a unicode character If this bit is set then the key stroke portion of an accelerator represents a key code If this bit is not set then the key stroke portion of an accelerator is a unicode character The following expression is false code SWT MOD1 SWT MOD2 T SWT KEYCODE BIT 0 code The following expression is true code SWT MOD3 SWT F2 SWT KEYCODE BIT 0 code value is 1 lt lt 24 since 2 1
Accelerator constant used to extract the key stroke portion of an accelerator The key stroke may be a key code or a unicode value If the key stroke is a key code code KEYCODE BIT code will be set since 2 1
Keyboard event constant representing the UP ARROW key value is 1 lt lt 24 1
Keyboard event constant representing the DOWN ARROW key value is 1 lt lt 24 2
Keyboard event constant representing the LEFT ARROW key value is 1 lt lt 24 3
Keyboard event constant representing the RIGHT ARROW key value is 1 lt lt 24 4
Keyboard event constant representing the PAGE UP key value is 1 lt lt 24 5
Keyboard event constant representing the PAGE DOWN key value is 1 lt lt 24 6
Keyboard event constant representing the HOME key value is 1 lt lt 24 7
Keyboard event constant representing the END key value is 1 lt lt 24 8
Keyboard event constant representing the INSERT key value is 1 lt lt 24 9
Keyboard event constant representing the F1 key value is 1 lt lt 24 10
Keyboard event constant representing the F2 key value is 1 lt lt 24 11
Keyboard event constant representing the F3 key value is 1 lt lt 24 12
Keyboard event constant representing the F4 key value is 1 lt lt 24 13
Keyboard event constant representing the F5 key value is 1 lt lt 24 14
Keyboard event constant representing the F6 key value is 1 lt lt 24 15
Keyboard event constant representing the F7 key value is 1 lt lt 24 16
Keyboard event constant representing the F8 key value is 1 lt lt 24 17
Keyboard event constant representing the F9 key value is 1 lt lt 24 18
Keyboard event constant representing the F10 key value is 1 lt lt 24 19
Keyboard event constant representing the F11 key value is 1 lt lt 24 20
Keyboard event constant representing the F12 key value is 1 lt lt 24 21
Keyboard event constant representing the F13 key value is 1 lt lt 24 22 since 3 0
Keyboard event constant representing the F14 key value is 1 lt lt 24 23 since 3 0
Keyboard event constant representing the F15 key value is 1 lt lt 24 24 since 3 0
Keyboard event constant representing the numeric key pad multiply key value is 1 lt lt 24 42 since 3 0
Keyboard event constant representing the numeric key pad add key value is 1 lt lt 24 43 since 3 0
Keyboard event constant representing the numeric key pad subtract key value is 1 lt lt 24 45 since 3 0
Keyboard event constant representing the numeric key pad decimal key value is 1 lt lt 24 46 since 3 0
Keyboard event constant representing the numeric key pad divide key value is 1 lt lt 24 47 since 3 0
Keyboard event constant representing the numeric key pad zero key value is 1 lt lt 24 48 since 3 0
Keyboard event constant representing the numeric key pad one key value is 1 lt lt 24 49 since 3 0
Keyboard event constant representing the numeric key pad two key value is 1 lt lt 24 50 since 3 0
Keyboard event constant representing the numeric key pad three key value is 1 lt lt 24 51 since 3 0
Keyboard event constant representing the numeric key pad four key value is 1 lt lt 24 52 since 3 0
Keyboard event constant representing the numeric key pad five key value is 1 lt lt 24 53 since 3 0
Keyboard event constant representing the numeric key pad six key value is 1 lt lt 24 54 since 3 0
Keyboard event constant representing the numeric key pad seven key value is 1 lt lt 24 55 since 3 0
Keyboard event constant representing the numeric key pad eight key value is 1 lt lt 24 56 since 3 0
Keyboard event constant representing the numeric key pad nine key value is 1 lt lt 24 57 since 3 0
Keyboard event constant representing the numeric key pad equal key value is 1 lt lt 24 61 since 3 0
Keyboard event constant representing the numeric key pad enter key value is 1 lt lt 24 80 since 3 0
Keyboard event constant representing the help key value is 1 lt lt 24 81 NOTE The HELP key maps to the key labeled help not F1 If your keyboard does not have a HELP key you will never see this key press To listen for help on a control use SWT Help since 3 0 see SWT Help
Keyboard event constant representing the caps lock key value is 1 lt lt 24 82 since 3 0
Keyboard event constant representing the num lock key value is 1 lt lt 24 83 since 3 0
Keyboard event constant representing the scroll lock key value is 1 lt lt 24 84 since 3 0
Keyboard event constant representing the pause key value is 1 lt lt 24 85 since 3 0
Keyboard event constant representing the break key value is 1 lt lt 24 86 since 3 0
Keyboard event constant representing the break key value is 1 lt lt 24 87 since 3 0
The code MessageBox code style constant for error icon behavior value is 1
The code MessageBox code style constant for information icon behavior value is 1 lt lt 1
The code MessageBox code style constant for question icon behavior value is 1 lt lt 2
The code MessageBox code style constant for warning icon behavior value is 1 lt lt 3
The code MessageBox code style constant for working icon behavior value is 1 lt lt 4
The code MessageBox code style constant for an OK button valid combinations are OK OK CANCEL value is 1 lt lt 5
The code MessageBox code style constant for YES button valid combinations are YES NO YES NO CANCEL value is 1 lt lt 6
The code MessageBox code style constant for NO button valid combinations are YES NO YES NO CANCEL value is 1 lt lt 7
The code MessageBox code style constant for a CANCEL button valid combinations are OK CANCEL YES NO CANCEL RETRY CANCEL value is 1 lt lt 8
The code MessageBox code style constant for an ABORT button the only valid combination is ABORT RETRY IGNORE value is 1 lt lt 9
The code MessageBox code style constant for a RETRY button valid combinations are ABORT RETRY IGNORE RETRY CANCEL value is 1 lt lt 10
The code MessageBox code style constant for an IGNORE button the only valid combination is ABORT RETRY IGNORE value is 1 lt lt 11
The code FileDialog code style constant for open file dialog behavior value is 1 lt lt 12
The code FileDialog code style constant for save file dialog behavior value is 1 lt lt 13
Default color white value is 1
Default color black value is 2
Default color red value is 3
Default color dark red value is 4
Default color green value is 5
Default color dark green value is 6
Default color yellow value is 7
Default color dark yello value is 8
Default color blue value is 9
Default color dark blue value is 10
Default color magenta value is 11
Default color dark magenta value is 12
Default color cyan value is 13
Default color dark cyan value is 14
Default color gray value is 15
Default color dark gray value is 16
System color used to paint dark shadow areas value is 17
System color used to paint normal shadow areas value is 18
System color used to paint light shadow areas value is 19
System color used to paint highlight shadow areas value is 20
System color used to paint foreground areas value is 21
System color used to paint background areas value is 22
System color used to paint border areas value is 23
System color used to paint list foreground areas value is 24
System color used to paint list background areas value is 25
System color used to paint list selection background areas value is 26
System color used to paint list selected text value is 27
System color used to paint tooltip text value is 28
System color used to paint tooltip background areas value is 29
System color used to paint title text value is 30
System color used to paint title background areas value is 31
System color used to paint title background gradient value is 32
System color used to paint inactive title text value is 33
System color used to paint inactive title background areas value is 34
System color used to paint inactive title background gradient value is 35
Draw constant indicating whether the drawing operation should fill the background value is 1 lt lt 0
Draw constant indicating whether the string drawing operation should handle line delimeters value is 1 lt lt 1
Draw constant indicating whether the string drawing operation should expand TAB characters value is 1 lt lt 2
Draw constant indicating whether the string drawing operation should handle mnemonics value is 1 lt lt 3
SWT error constant indicating that no error number was specified value is 1
SWT error constant indicating that no more handles for an operating system resource are available value is 2
SWT error constant indicating that no more callback resources are available value is 3
SWT error constant indicating that a null argument was passed in value is 4
SWT error constant indicating that an invalid argument was passed in value is 5
SWT error constant indicating that a value was found to be outside the allowable range value is 6
SWT error constant indicating that a value which can not be zero was found to be value is 7
SWT error constant indicating that the underlying operating system was unable to provide the value of an item value is 8
SWT error constant indicating that the underlying operating system was unable to provide the selection value is 9
SWT error constant indicating that the matrix is not invertible value is 10 since 3 1
SWT error constant indicating that the underlying operating system was unable to provide the height of an item value is 11
SWT error constant indicating that the underlying operating system was unable to provide the text of a widget value is 12
SWT error constant indicating that the underlying operating system was unable to set the text of a widget value is 13
SWT error constant indicating that the underlying operating system was unable to add an item value is 14
SWT error constant indicating that the underlying operating system was unable to remove an item value is 15
SWT error constant indicating that the graphics library is not available value is 16
SWT error constant indicating that a particular feature has not been implemented on this platform value is 20
SWT error constant indicating that a menu which needed to have the drop down style had some other style instead value is 21
SWT error constant indicating that an attempt was made to invoke an SWT operation which can only be executed by the user interface thread from some other thread value is 22
SWT error constant indicating that an attempt was made to invoke an SWT operation using a widget which had already been disposed value is 24
SWT error constant indicating that a menu item which needed to have the cascade style had some other style instead value is 27
SWT error constant indicating that the underlying operating system was unable to set the selection of a widget value is 28
SWT error constant indicating that the underlying operating system was unable to set the menu value is 29
SWT error constant indicating that the underlying operating system was unable to set the enabled state value is 30
SWT error constant indicating that the underlying operating system was unable to provide enabled disabled state information value is 31
SWT error constant indicating that a provided widget can not be used as a parent in the current operation value is 32
SWT error constant indicating that a menu which needed to have the menu bar style had some other style instead value is 33
SWT error constant indicating that the underlying operating system was unable to provide count information value is 36
SWT error constant indicating that a menu which needed to have the pop up menu style had some other style instead value is 37
SWT error constant indicating that a graphics operation was attempted with an image of an unsupported depth value is 38
SWT error constant indicating that an input output operation failed during the execution of an SWT operation value is 39
SWT error constant indicating that a graphics operation was attempted with an image having an invalid format value is 40
SWT error constant indicating that a graphics operation was attempted with an image having a valid but unsupported format value is 42
SWT error constant indicating that an attempt was made to subclass an SWT widget class without implementing the code checkSubclass code method value is 43 For additional information see the comment in code Widget checkSubclass code see org eclipse swt widgets Widget checkSubclass
SWT error constant indicating that an attempt was made to invoke an SWT operation using a graphics object which had already been disposed value is 44
SWT error constant indicating that an attempt was made to invoke an SWT operation using a device which had already been disposed value is 45
SWT error constant indicating that an exception happened when executing a runnable value is 46
SWT error constant indicating that an unsatisfied link error occured while attempting to load a library value is 47 since 3 1
SWT error constant indicating that a font is not valid value is 48 since 3 1
Traversal event detail field value indicating that no traversal action should be taken value is 0
Traversal event detail field value indicating that the key which designates that a dialog should be cancelled was pressed typically this is the ESC key value is 1 lt lt 1
Traversal event detail field value indicating that the key which activates the default button in a dialog was pressed typically this is the ENTER key value is 1 lt lt 2
Traversal event detail field value indicating that the key which designates that focus should be given to the previous tab group was pressed typically this is the SHIFT TAB key sequence value is 1 lt lt 3
Traversal event detail field value indicating that the key which designates that focus should be given to the next tab group was pressed typically this is the TAB key value is 1 lt lt 4
Traversal event detail field value indicating that the key which designates that focus should be given to the previous tab item was pressed typically this is either the LEFT ARROW or UP ARROW keys value is 1 lt lt 5
Traversal event detail field value indicating that the key which designates that focus should be given to the previous tab item was pressed typically this is either the RIGHT ARROW or DOWN ARROW keys value is 1 lt lt 6
Traversal event detail field value indicating that a mnemonic key sequence was pressed value is 1 lt lt 7
Traversal event detail field value indicating that the key which designates that the previous page of a multi page window should be shown was pressed typically this is the CTRL PAGEUP key sequence value is 1 lt lt 8
Traversal event detail field value indicating that the key which designates that the next page of a multi page window should be shown was pressed typically this is the CTRL PAGEDOWN key sequence value is 1 lt lt 9
Constant indicating that an image or operation is of type bitmap value is 0
Constant indicating that an image or operation is of type icon value is 1
The code Image code constructor argument indicating that the new image should be a copy of the image provided as an argument value is 0
The code Image code constructor argument indicating that the new image should have the appearance of a disabled using the platform s rules for how this should look copy of the image provided as an argument value is 1
The code Image code constructor argument indicating that the new image should have the appearance of a gray scaled copy of the image provided as an argument value is 2
The font style constant indicating a normal weight non italic font value is 0
The font style constant indicating a bold weight font value is 1 lt lt 0
The font style constant indicating an italic font value is 1 lt lt 1
System arrow cursor value is 0
System wait cursor value is 1
System cross hair cursor value is 2
System app startup cursor value is 3
System help cursor value is 4
System resize all directions cursor value is 5
System resize north east south west cursor value is 6
System resize north south cursor value is 7
System resize north west south east cursor value is 8
System resize west east cursor value is 9
System resize north cursor value is 10
System resize south cursor value is 11
System resize east cursor value is 12
System resize west cursor value is 13
System resize north east cursor value is 14
System resize south east cursor value is 15
System resize south west cursor value is 16
System resize north west cursor value is 17
System up arrow cursor value is 18
System i beam cursor value is 19
System not allowed cursor value is 20
System hand cursor value is 21
Line drawing style for flat end caps value is 1 see org eclipse swt graphics GC setLineCap int see org eclipse swt graphics GC getLineCap since 3 1
Line drawing style for rounded end caps value is 2 see org eclipse swt graphics GC setLineCap int see org eclipse swt graphics GC getLineCap since 3 1
Line drawing style for square end caps value is 3 see org eclipse swt graphics GC setLineCap int see org eclipse swt graphics GC getLineCap since 3 1
Line drawing style for miter joins value is 1 see org eclipse swt graphics GC setLineJoin int see org eclipse swt graphics GC getLineJoin since 3 1
Line drawing style for rounded joins value is 2 see org eclipse swt graphics GC setLineJoin int see org eclipse swt graphics GC getLineJoin since 3 1
Line drawing style for bevel joins value is 3 see org eclipse swt graphics GC setLineJoin int see org eclipse swt graphics GC getLineJoin since 3 1
Line drawing style for solid lines value is 1
Line drawing style for dashed lines value is 2
Line drawing style for dotted lines value is 3
Line drawing style for alternating dash dot lines value is 4
Line drawing style for dash dot dot lines value is 5
Line drawing style for custom dashed lines value is 6 see org eclipse swt graphics GC setLineDash int see org eclipse swt graphics GC getLineDash since 3 1
Path constant that represents a move to operation value is 1 since 3 1
Path constant that represents a line to operation value is 2 since 3 1
Path constant that represents a quadratic curve to operation value is 3 since 3 1
Path constant that represents a cubic curve to operation value is 4 since 3 1
Path constant that represents a close operation value is 5 since 3 1
Even odd rule for filling operations value is 1 since 3 1
Winding rule for filling operations value is 2 since 3 1
Image format constant indicating an unknown image type value is 1
Image format constant indicating a Windows BMP format image value is 0
Image format constant indicating a run length encoded Windows BMP format image value is 1
Image format constant indicating a GIF format image value is 2
Image format constant indicating a ICO format image value is 3
Image format constant indicating a PEG format image value is 4
Image format constant indicating a PNG format image value is 5
Image format constant indicating a TIFF format image value is 6
Image format constant indicating an OS 2 BMP format image value is 7
GIF image disposal method constants indicating that the disposal method is unspecified value is 0
GIF image disposal method constants indicating that the disposal method is to do nothing that is to leave the previous image in place value is 1
GIF image disposal method constants indicating that the the previous images should be covered with the background color before displaying the next image value is 2
GIF image disposal method constants indicating that the disposal method is to restore the previous picture value is 3
Image transparency constant indicating that the image contains no transparency information value is 0
Image transparency constant indicating that the image contains alpha transparency information value is 1 lt lt 0
Image transparency constant indicating that the image contains a transparency mask value is 1 lt lt 1
Image transparency constant indicating that the image contains a transparent pixel value is 1 lt lt 2
The character movement type value is 1 lt lt 0 see org eclipse swt graphics TextLayout getNextOffset int int see org eclipse swt graphics TextLayout getPreviousOffset int int since 3 0
The cluster movement type value is 1 lt lt 1 see org eclipse swt graphics TextLayout getNextOffset int int see org eclipse swt graphics TextLayout getPreviousOffset int int since 3 0
The word movement type value is 1 lt lt 2 see org eclipse swt graphics TextLayout getNextOffset int int see org eclipse swt graphics TextLayout getPreviousOffset int int since 3 0
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
Answers a concise human readable description of the error code param code the SWT error code return a description of the error code see SWT
Returns the NLS ed message for the given argument param key the key to look up return the message for the given key exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the key is null li ul
Returns the SWT platform name Examples win32 motif gtk photon carbon return the SWT platform name
Returns the SWT version number as an integer Example SWT051 51 return the SWT version number
Throws an appropriate exception based on the passed in error code param code the SWT error code
Throws an appropriate exception based on the passed in error code The code throwable code argument should be either null or the throwable which caused SWT to throw an exception p In SWT errors are reported by throwing one of three exceptions dl dd java lang IllegalArgumentException dd dt thrown whenever one of the API methods is invoked with an illegal argument dt dd org eclipse swt SWTException extends java lang RuntimeException dd dt thrown whenever a recoverable error happens internally in SWT dt dd org eclipse swt SWTError extends java lang Error dd dt thrown whenever a b non recoverable b error happens internally in SWT dt dl This method provides the logic which maps between error codes and one of the above exceptions p param code the SWT error code param throwable the exception which caused the error to occur see SWTError see SWTException see IllegalArgumentException
This code prevents the creation of chains of SWTErrors and SWTExceptions which in turn contain other SWTErrors and SWTExceptions as their throwable This can occur when low level code throws an exception past a point where a higher layer is being safe and catching all exceptions Note that this is a bad thing which we always try to avoid On the theory that the low level code is closest to the original problem we simply re throw the original exception here
Illegal Arguments non fatal
SWT Exceptions non fatal
Operation System Errors fatal may occur only on some platforms
SWT Errors fatal may occur only on some platforms
Unknown Undefined Error
Throws an appropriate exception based on the passed in error code The code throwable code argument should be either null or the throwable which caused SWT to throw an exception p In SWT errors are reported by throwing one of three exceptions dl dd java lang IllegalArgumentException dd dt thrown whenever one of the API methods is invoked with an illegal argument dt dd org eclipse swt SWTException extends java lang RuntimeException dd dt thrown whenever a recoverable error happens internally in SWT dt dd org eclipse swt SWTError extends java lang Error dd dt thrown whenever a b non recoverable b error happens internally in SWT dt dl This method provides the logic which maps between error codes and one of the above exceptions p param code the SWT error code param throwable the exception which caused the error to occur param detail more information about error see SWTError see SWTException see IllegalArgumentException since 3 0
These values represent bit masks that may need to expand in the future Therefore they are not initialized in the declaration to stop the compiler from inlining
These values can be different on different platforms Therefore they are not initialized in the declaration to stop the compiler from inlining
NON NLS 1
