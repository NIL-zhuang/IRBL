Constructs a new instance of this class given its parent which must be a code Table code and a style value describing its behavior and appearance The item is added to the end of the items maintained by its parent p The style value is either one of the style constants defined in class code SWT code which is applicable to instances of this class or must be built by em bitwise OR em ing together that is using the code int code operator two or more of those code SWT code style constants The class description lists the style constants that are applicable to the class Style bits are also inherited from superclasses p param parent a composite control which will be the parent of the new instance cannot be null param style the style of control to construct exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the parent is null li ul exception SWTException ul li ERROR THREAD INVALID ACCESS if not called from the thread that created the parent li li ERROR INVALID SUBCLASS if this class is not an allowed subclass li ul see SWT see Widget checkSubclass see Widget getStyle
Constructs a new instance of this class given its parent which must be a code Table code a style value describing its behavior and appearance and the index at which to place it in the items maintained by its parent p The style value is either one of the style constants defined in class code SWT code which is applicable to instances of this class or must be built by em bitwise OR em ing together that is using the code int code operator two or more of those code SWT code style constants The class description lists the style constants that are applicable to the class Style bits are also inherited from superclasses p param parent a composite control which will be the parent of the new instance cannot be null param style the style of control to construct param index the index to store the receiver in its parent exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the parent is null li ul exception SWTException ul li ERROR THREAD INVALID ACCESS if not called from the thread that created the parent li li ERROR INVALID SUBCLASS if this class is not an allowed subclass li ul see SWT see Widget checkSubclass see Widget getStyle
Returns the receiver s background color return the background color exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 2 0
Returns the background color at the given column index in the receiver param index the column index return the background color exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 0
public
Returns a rectangle describing the receiver s size and location relative to its parent at a column in the table param index the index that specifies the column return the receiver s bounding column rectangle exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Feature in Windows Calling LVM GETSUBITEMRECT with LVIR LABEL and zero for the column number gives the bounds of the first item without including the bounds of the icon This is undocumented When called with values greater than zero the icon bounds are included and this behavior is documented
Feature in Windows LVM GETSUBITEMRECT returns an image width even when the subitem does not contain an image The fix is to adjust the rectangle to represent the area the table is drawing
Bug in Windows In version 5 80 of COMCTL32 DLL the top of the rectangle returned by LVM GETSUBITEMRECT is off by the grid width when the grid is visible The fix is to move the top of the rectangle up by the grid width
Returns code true code if the receiver is checked and false otherwise When the parent does not have the code CHECK code style return false return the checked state of the checkbox exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the font that the receiver will use to paint textual information for this item return the receiver s font exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 0
Returns the font that the receiver will use to paint textual information for the specified cell in this item param index the column index return the receiver s font exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 0
Returns the foreground color that the receiver will use to draw return the receiver s foreground color exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 2 0
Returns the foreground color at the given column index in the receiver param index the column index return the foreground color exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 0
Returns code true code if the receiver is grayed and false otherwise When the parent does not have the code CHECK code style return false return the grayed state of the checkbox exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the image stored at the given column index in the receiver or null if the image has not been set or if the column does not exist param index the column index return the image stored at the given column index in the receiver exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns a rectangle describing the size and location relative to its parent of an image at a column in the table An empty rectangle is returned if index exceeds the index of the table s last column param index the index that specifies the column return the receiver s bounding image rectangle exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Gets the image indent return the indent exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
NON NLS 1
Returns the receiver s parent which must be a code Table code return the receiver s parent exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the text stored at the given column index in the receiver or empty string if the text has not been set param index the column index return the text stored at the given column index in the receiver exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Sets the receiver s background color to the color specified by the argument or to the default system color for the item if the argument is null param color the new color or null exception IllegalArgumentException ul li ERROR INVALID ARGUMENT if the argument has been disposed li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 2 0
Sets the background color at the given column index in the receiver to the color specified by the argument or to the default system color for the item if the argument is null param index the column index param color the new color or null exception IllegalArgumentException ul li ERROR INVALID ARGUMENT if the argument has been disposed li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 0
Sets the checked state of the checkbox for this item This state change only applies if the Table was created with the SWT CHECK style param checked the new checked state of the checkbox exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Bug in Windows Despite the fact that every item in the table always has LPSTR TEXTCALLBACK Windows caches the bounds for the selected items This means that when you change the string to be something else Windows correctly asks you for the new string but when the item is selected the selection draws using the bounds of the previous item The fix is to reset LPSTR TEXTCALLBACK even though it has not changed causing Windows to flush cached bounds
Sets the font that the receiver will use to paint textual information for this item to the font specified by the argument or to the default font for that kind of control if the argument is null param font the new font or null exception IllegalArgumentException ul li ERROR INVALID ARGUMENT if the argument has been disposed li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 0
Bug in Windows Despite the fact that every item in the table always has LPSTR TEXTCALLBACK Windows caches the bounds for the selected items This means that when you change the string to be something else Windows correctly asks you for the new string but when the item is selected the selection draws using the bounds of the previous item The fix is to reset LPSTR TEXTCALLBACK even though it has not changed causing Windows to flush cached bounds
Sets the font that the receiver will use to paint textual information for the specified cell in this item to the font specified by the argument or to the default font for that kind of control if the argument is null param index the column index param font the new font or null exception IllegalArgumentException ul li ERROR INVALID ARGUMENT if the argument has been disposed li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 0
Sets the receiver s foreground color to the color specified by the argument or to the default system color for the item if the argument is null param color the new color or null exception IllegalArgumentException ul li ERROR INVALID ARGUMENT if the argument has been disposed li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 2 0
Sets the foreground color at the given column index in the receiver to the color specified by the argument or to the default system color for the item if the argument is null param index the column index param color the new color or null exception IllegalArgumentException ul li ERROR INVALID ARGUMENT if the argument has been disposed li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 0
Sets the grayed state of the checkbox for this item This state change only applies if the Table was created with the SWT CHECK style param grayed the new grayed state of the checkbox exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Sets the image for multiple columns in the table param images the array of new images exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the array of images is null li li ERROR INVALID ARGUMENT if one of the images has been disposed li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Ensure that the image list is created
Sets the receiver s image at a column param index the column index param image the new image exception IllegalArgumentException ul li ERROR INVALID ARGUMENT if the image has been disposed li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Sets the indent of the first column s image expressed in terms of the image s width param indent the new indent ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul deprecated this functionality is not supported on most platforms
Sets the text for multiple columns in the table param strings the array of new strings exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the text is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Bug in Windows Despite the fact that every item in the table always has LPSTR TEXTCALLBACK Windows caches the bounds for the selected items This means that when you change the string to be something else Windows correctly asks you for the new string but when the item is selected the selection draws using the bounds of the previous item The fix is to reset LPSTR TEXTCALLBACK even though it has not changed causing Windows to flush cached bounds
Sets the receiver s text at a column param index the column index param string the new text exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the text is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
