Constructs a new instance of this class given its parent which must be a code CoolBar code and a style value describing its behavior and appearance The item is added to the end of the items maintained by its parent p The style value is either one of the style constants defined in class code SWT code which is applicable to instances of this class or must be built by em bitwise OR em ing together that is using the code int code operator two or more of those code SWT code style constants The class description lists the style constants that are applicable to the class Style bits are also inherited from superclasses p param parent a composite control which will be the parent of the new instance cannot be null param style the style of control to construct exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the parent is null li ul exception SWTException ul li ERROR THREAD INVALID ACCESS if not called from the thread that created the parent li li ERROR INVALID SUBCLASS if this class is not an allowed subclass li ul see SWT DROP DOWN see Widget checkSubclass see Widget getStyle
Constructs a new instance of this class given its parent which must be a code CoolBar code a style value describing its behavior and appearance and the index at which to place it in the items maintained by its parent p The style value is either one of the style constants defined in class code SWT code which is applicable to instances of this class or must be built by em bitwise OR em ing together that is using the code int code operator two or more of those code SWT code style constants The class description lists the style constants that are applicable to the class Style bits are also inherited from superclasses p param parent a composite control which will be the parent of the new instance cannot be null param style the style of control to construct param index the index at which to store the receiver in its parent exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the parent is null li ul exception SWTException ul li ERROR THREAD INVALID ACCESS if not called from the thread that created the parent li li ERROR INVALID SUBCLASS if this class is not an allowed subclass li ul see SWT DROP DOWN see Widget checkSubclass see Widget getStyle
Adds the listener to the collection of listeners that will be notified when the control is selected by sending it one of the messages defined in the code SelectionListener code interface p If code widgetSelected code is called when the mouse is over the drop down arrow or chevron portion of the cool item the event object detail field contains the value code SWT ARROW code and the x and y fields in the event object represent the point at the bottom left of the chevron where the menu should be popped up code widgetDefaultSelected code is not called p param listener the listener which should be notified exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see SelectionListener see removeSelectionListener see SelectionEvent since 2 0
Returns the preferred size of the receiver p The em preferred size em of a code CoolItem code is the size that it would best be displayed at The width hint and height hint arguments allow the caller to ask the instance questions such as Given a particular width how high does it need to be to show all of the contents To indicate that the caller does not wish to constrain a particular dimension the constant code SWT DEFAULT code is passed for the hint p param wHint the width hint can be code SWT DEFAULT code param hHint the height hint can be code SWT DEFAULT code return the preferred size exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see Layout see getBounds see getSize see Control getBorderWidth see Scrollable computeTrim see Scrollable getClientArea
Returns a rectangle describing the receiver s size and location relative to its parent return the receiver s bounding rectangle exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Not currently used
Returns the control that is associated with the receiver return the control that is contained by the receiver exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the receiver s parent which must be a code CoolBar code return the receiver s parent exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Feature in Windows When Windows sets the rebar band child it makes the new child visible and hides the old child and moves the new child to the top of the Z order The fix is to save and restore the visibility and Z order
Sets the control that is associated with the receiver to the argument param control the new control that will be contained by the receiver exception IllegalArgumentException ul li ERROR INVALID ARGUMENT if the control has been disposed li li ERROR INVALID PARENT if the control is not in the same widget tree li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns a point describing the receiver s ideal size The x coordinate of the result is the ideal width of the receiver The y coordinate of the result is the ideal height of the receiver return the receiver s ideal size exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Get the child size fields first so we don t overwrite them
Set the size fields we are currently modifying
Sets the receiver s ideal size to the point specified by the arguments param width the new ideal width for the receiver param height the new ideal height for the receiver exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Sets the receiver s ideal size to the point specified by the argument param size the new ideal size for the receiver exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the point is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns a point describing the receiver s size The x coordinate of the result is the width of the receiver The y coordinate of the result is the height of the receiver return the receiver s size exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Get the child size fields first so we don t overwrite them
Set the size fields we are currently modifying
Do not set the size for the last item on the row
Sets the receiver s size to the point specified by the arguments p Note Attempting to set the width or height of the receiver to a negative number will cause that value to be set to zero instead p param width the new width for the receiver param height the new height for the receiver exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Sets the receiver s size to the point specified by the argument p Note Attempting to set the width or height of the receiver to a negative number will cause them to be set to zero instead p param size the new size for the receiver exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the point is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the minimum size that the cool item can be resized to using the cool item s gripper return a point containing the minimum width and height of the cool item in pixels exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 2 0
Get the child size fields first so we don t overwrite them
Set the size fields we are currently modifying
Sets the minimum size that the cool item can be resized to using the cool item s gripper to the point specified by the arguments param width the minimum width of the cool item in pixels param height the minimum height of the cool item in pixels exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 2 0
Sets the minimum size that the cool item can be resized to using the cool item s gripper to the point specified by the argument param size a point representing the minimum width and height of the cool item in pixels exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the point is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 2 0
Removes the listener from the collection of listeners that will be notified when the control is selected param listener the listener which should no longer be notified exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see SelectionListener see addSelectionListener since 2 0
