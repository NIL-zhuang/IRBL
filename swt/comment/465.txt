Instances of this class are selectable user interface objects that represent a range of positive numeric values p At any given moment a given slider will have a single selection that is considered to be its value which is constrained to be within the range of values the slider represents that is between its em minimum em and em maximum em values p p Typically sliders will be made up of five areas ol li an arrow button for decrementing the value li li a page decrement area for decrementing the value by a larger amount li li a em thumb em for modifying the value by mouse dragging li li a page increment area for incrementing the value by a larger amount li li an arrow button for incrementing the value li ol Based on their style sliders are either code HORIZONTAL code which have a left facing button for decrementing the value and a right facing button for incrementing it or code VERTICAL code which have an upward facing button for decrementing the value and a downward facing buttons for incrementing it p p On some platforms the size of the slider s thumb can be varied relative to the magnitude of the range of values it represents that is relative to the difference between its maximum and minimum values Typically this is used to indicate some proportional value such as the ratio of the visible area of a document to the total amount of space that it would take to display it SWT supports setting the thumb size even if the underlying platform does not but in this case the appearance of the slider will not change p dl dt b Styles b dt dd HORIZONTAL VERTICAL dd dt b Events b dt dd Selection dd dl p Note Only one of the styles HORIZONTAL and VERTICAL may be specified p p IMPORTANT This class is em not em intended to be subclassed p see ScrollBar
Constructs a new instance of this class given its parent and a style value describing its behavior and appearance p The style value is either one of the style constants defined in class code SWT code which is applicable to instances of this class or must be built by em bitwise OR em ing together that is using the code int code operator two or more of those code SWT code style constants The class description lists the style constants that are applicable to the class Style bits are also inherited from superclasses p param parent a composite control which will be the parent of the new instance cannot be null param style the style of control to construct exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the parent is null li ul exception SWTException ul li ERROR THREAD INVALID ACCESS if not called from the thread that created the parent li li ERROR INVALID SUBCLASS if this class is not an allowed subclass li ul see SWT HORIZONTAL see SWT VERTICAL see Widget checkSubclass see Widget getStyle
Adds the listener to the collection of listeners who will be notified when the receiver s value changes by sending it one of the messages defined in the code SelectionListener code interface p When code widgetSelected code is called the event object detail field contains one of the following values code SWT NONE code for the end of a drag code SWT DRAG code code SWT HOME code code SWT END code code SWT ARROW DOWN code code SWT ARROW UP code code SWT PAGE DOWN code code SWT PAGE UP code code widgetDefaultSelected code is not called p param listener the listener which should be notified exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see SelectionListener see removeSelectionListener see SelectionEvent
Feature in Windows Windows runs a modal message loop when the user drags a scroll bar This means that mouse down events won t get delivered until after the loop finishes The fix is to run any deferred messages including mouse down messages before calling the scroll bar window proc
Set the intial values of the maximum to 100 and the thumb to 10 Note that info nPage needs to be 11 in order to get a thumb that is 10
Returns the amount that the receiver s value will be modified by when the up down or right left arrows are pressed return the increment exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the maximum value which the receiver will allow return the maximum exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the minimum value which the receiver will allow return the minimum exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the amount that the receiver s value will be modified by when the page increment decrement areas are selected return the page increment exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the selection which is the receiver s value return the selection exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the size of the receiver s thumb relative to the difference between its maximum and minimum values return the thumb value exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Removes the listener from the collection of listeners who will be notified when the receiver s value changes param listener the listener which should no longer be notified exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see SelectionListener see addSelectionListener
Bug in Windows If the scroll bar is resized when it has focus the flashing cursor that is used to show that the scroll bar has focus is not moved The fix is to post a fake WM SETFOCUS to get the scroll bar to recompute the size of the flashing cursor
Sets the amount that the receiver s value will be modified by when the up down or right left arrows are pressed to the argument which must be at least one param value the new increment must be greater than zero exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Sets the maximum If this value is negative or less than or equal to the minimum the value is ignored If necessary first the thumb and then the selection are adjusted to fit within the new range param value the new maximum which must be greater than the current minimum exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Sets the minimum value If this value is negative or greater than or equal to the maximum the value is ignored If necessary first the thumb and then the selection are adjusted to fit within the new range param value the new minimum exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Sets the amount that the receiver s value will be modified by when the page increment decrement areas are selected to the argument which must be at least one param value the page increment must be greater than zero exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Feature in Windows Using SIF DISABLENOSCROLL SetScrollInfo can change enabled and disabled state of the scroll bar causing a scroll bar that was disabled by the application to become enabled The fix is to disable the scroll bar again when the application has disabled the scroll bar
Bug in Windows If the thumb is resized when it has focus the flashing cursor that is used to show that the scroll bar has focus is not moved The fix is to post a fake WM SETFOCUS to get the scroll bar to recompute the size of the flashing cursor
Sets the selection which is the receiver s value to the argument which must be greater than or equal to zero param value the new selection must be zero or greater exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Sets the size of the receiver s thumb relative to the difference between its maximum and minimum values This new value will be ignored if it is less than one and will be clamped if it exceeds the receiver s current range param value the new thumb value which must be at least one and not larger than the size of the current range exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Sets the receiver s selection minimum value maximum value thumb increment and page increment all at once p Note This is equivalent to setting the values individually using the appropriate methods but may be implemented in a more efficient fashion on some platforms p param selection the new selection value param minimum the new minimum value param maximum the new maximum value param thumb the new thumb value param increment the new increment value param pageIncrement the new pageIncrement value exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Bug in Windows If a scroll bar control is given a border dragging the scroll bar thumb eats away parts of the border while the thumb is dragged The fix is to clear border for all scroll bars
Bug in Windows If a scroll bar control is given a border dragging the scroll bar thumb eats away parts of the border while the thumb is dragged The fix is to clear WS BORDER
Bug in Windows When a horizontal scroll bar is mirrored the native control does not correctly swap the arrow keys The fix is to swap them before calling the scroll bar window proc NOTE This fix is not ideal It breaks when the bug is fixed in the operating system
Feature in Windows Windows uses the WS TABSTOP style for the scroll bar to decide that focus should be set during WM LBUTTONDBLCLK This is not the desired behavior The fix is to clear and restore WS TABSTOP so that Windows will not assign focus
Feature in Windows Windows runs a modal message loop when the user drags a scroll bar that terminates when it sees an WM LBUTTONUP Unfortunately the WM LBUTTONUP is consumed The fix is to send a fake mouse up and release the automatic capture
Feature in Windows Windows uses the WS TABSTOP style for the scroll bar to decide that focus should be set during WM LBUTTONDOWN This is not the desired behavior The fix is to clear and restore WS TABSTOP so that Windows will not assign focus
Feature in Windows Windows runs a modal message loop when the user drags a scroll bar that terminates when it sees an WM LBUTTONUP Unfortunately the WM LBUTTONUP is consumed The fix is to send a fake mouse up and release the automatic capture
Do nothing when scrolling is ending
Move the thumb
Feature in Windows Windows runs a modal message loop when the user drags a scroll bar This means that selection event must be sent because WM HSCROLL and WM VSCROLL are sent from the modal message loop so that they are delivered during inside the loop
the widget could be destroyed at this point
