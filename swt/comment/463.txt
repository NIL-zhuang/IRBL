Prevents uninitialized instances from being created outside the package
Constructs a new instance of this class given its parent and a style value describing its behavior and appearance p The style value is either one of the style constants defined in class code SWT code which is applicable to instances of this class or must be built by em bitwise OR em ing together that is using the code int code operator two or more of those code SWT code style constants The class description lists the style constants that are applicable to the class Style bits are also inherited from superclasses p param parent a composite control which will be the parent of the new instance cannot be null param style the style of control to construct exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the parent is null li ul exception SWTException ul li ERROR THREAD INVALID ACCESS if not called from the thread that created the parent li li ERROR INVALID SUBCLASS if this class is not an allowed subclass li ul see SWT H SCROLL see SWT V SCROLL see Widget checkSubclass see Widget getStyle
Given a desired em client area em for the receiver as described by the arguments returns the bounding rectangle which would be required to produce that client area p In other words it returns a rectangle such that if the receiver s bounds were set to that rectangle the area of the receiver which is capable of displaying data that is not covered by the trimmings would be the rectangle described by the arguments relative to the receiver s parent p param x the desired x coordinate of the client area param y the desired y coordinate of the client area param width the desired width of the client area param height the desired height of the client area return the required bounds to produce the given client area exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see getClientArea
Returns a rectangle which describes the area of the receiver which is capable of displaying data that is not covered by the trimmings return the client area exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see computeTrim
Returns the receiver s horizontal scroll bar if it has one and null if it does not return the horizontal scroll bar or null exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the receiver s vertical scroll bar if it has one and null if it does not return the vertical scroll bar or null exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Bug on WinCE lParam should be NULL when the message is not sent by a scroll bar control but it contains the handle to the window When the message is sent by a scroll bar control it correctly contains the handle to the scroll bar The fix is to check for both
Translate WM MOUSEWHEEL to WM VSCROLL or WM HSCROLL
When the native widget scrolls inside WM MOUSEWHEEL it may or may not send a WM VSCROLL or WM HSCROLL to do the actual scrolling This depends on the implementation of each native widget In order to ensure that application code is notified when the scroll bar moves compare the scroll bar position before and after the WM MOUSEWHEEL If the native control sends a WM VSCROLL or WM HSCROLL then the application has already been notified If not explicity send the event
widget may be disposed at this point
Bug on WinCE lParam should be NULL when the message is not sent by a scroll bar control but it contains the handle to the window When the message is sent by a scroll bar control it correctly contains the handle to the scroll bar The fix is to check for both
Note On WinCE the value in SB THUMBPOSITION is relative to nMin Same for SB THUMBPOSITION except for the very first thumb track message which has the actual value of nMin This is a problem when nMin is not zero
