the handle to the OS cursor resource Warning This field is platform dependent p b IMPORTANT b This field is em not em part of the SWT public API It is marked public only so that it can be shared within the packages provided by SWT It is not available on all platforms and should never be accessed from application code p
data used to create a HAND cursor
Prevents uninitialized instances from being created outside the package
IDC HAND is supported only on Windows 2000 and Windows 98 Create a hand cursor if running in other Windows platforms
Constructs a new cursor given a device and a style constant describing the desired cursor appearance p You must dispose the cursor when it is no longer required p param device the device on which to allocate the cursor param style the style of cursor to allocate exception IllegalArgumentException ul li ERROR NULL ARGUMENT if device is null and there is no current device li li ERROR INVALID ARGUMENT when an unknown style is specified li ul exception SWTError ul li ERROR NO HANDLES if a handle could not be obtained for cursor creation li ul see SWT CURSOR ARROW see SWT CURSOR WAIT see SWT CURSOR CROSS see SWT CURSOR APPSTARTING see SWT CURSOR HELP see SWT CURSOR SIZEALL see SWT CURSOR SIZENESW see SWT CURSOR SIZENS see SWT CURSOR SIZENWSE see SWT CURSOR SIZEWE see SWT CURSOR SIZEN see SWT CURSOR SIZES see SWT CURSOR SIZEE see SWT CURSOR SIZEW see SWT CURSOR SIZENE see SWT CURSOR SIZESE see SWT CURSOR SIZESW see SWT CURSOR SIZENW see SWT CURSOR UPARROW see SWT CURSOR IBEAM see SWT CURSOR NO see SWT CURSOR HAND
Check the bounds Mask must be the same size as source
Check the hotspots
Convert depth to 1
Make sure source and mask scanline pad is 2
Create the cursor
Constructs a new cursor given a device image and mask data describing the desired cursor appearance and the x and y coordinates of the em hotspot em that is the point within the area covered by the cursor which is considered to be where the on screen pointer is pointing p The mask data is allowed to be null but in this case the source must be an ImageData representing an icon that specifies both color data and mask data p You must dispose the cursor when it is no longer required p param device the device on which to allocate the cursor param source the color data for the cursor param mask the mask data for the cursor or null param hotspotX the x coordinate of the cursor s hotspot param hotspotY the y coordinate of the cursor s hotspot exception IllegalArgumentException ul li ERROR NULL ARGUMENT if device is null and there is no current device li li ERROR NULL ARGUMENT if the source is null li li ERROR NULL ARGUMENT if the mask is null and the source does not have a mask li li ERROR INVALID ARGUMENT if the source and the mask are not the same size or if the hotspot is outside the bounds of the image li ul exception SWTError ul li ERROR NO HANDLES if a handle could not be obtained for cursor creation li ul
Check the hotspots
Create the icon
Constructs a new cursor given a device image data describing the desired cursor appearance and the x and y coordinates of the em hotspot em that is the point within the area covered by the cursor which is considered to be where the on screen pointer is pointing p You must dispose the cursor when it is no longer required p param device the device on which to allocate the cursor param source the image data for the cursor param hotspotX the x coordinate of the cursor s hotspot param hotspotY the y coordinate of the cursor s hotspot exception IllegalArgumentException ul li ERROR NULL ARGUMENT if device is null and there is no current device li li ERROR NULL ARGUMENT if the image is null li li ERROR INVALID ARGUMENT if the hotspot is outside the bounds of the image li ul exception SWTError ul li ERROR NO HANDLES if a handle could not be obtained for cursor creation li ul since 3 0
The MSDN states that one should not destroy a shared cursor that is one obtained from LoadCursor However it does not appear to do any harm so rather than keep track of how a cursor was created we just destroy them all If this causes problems in the future put the flag back in
Disposes of the operating system resources associated with the cursor Applications must dispose of all cursors which they allocate
Compares the argument to the receiver and returns true if they represent the em same em object using a class specific comparison param object the object to compare with this object return code true code if the object is the same as this object and code false code otherwise see hashCode
Returns an integer hash code for the receiver Any two objects that return code true code when passed to code equals code must return the same value for this method return the receiver s hash see equals
Returns code true code if the cursor has been disposed and code false code otherwise p This method gets the dispose state for the cursor When a cursor has been disposed it is an error to invoke any other method using the cursor return code true code when the cursor is disposed and code false code otherwise
Returns a string containing a concise human readable description of the receiver return a string representation of the receiver
Invokes platform specific functionality to allocate a new cursor p b IMPORTANT b This method is em not em part of the public API for code Cursor code It is marked public only so that it can be shared within the packages provided by SWT It is not available on all platforms and should never be called from application code p param device the device on which to allocate the color param handle the handle for the cursor return a new cursor object containing the specified device and handle
