Instances of this class represent paths through the two dimensional coordinate system Paths do not have to be continuous and can be described using lines rectangles arcs cubic or quadratic bezier curves glyphs or other paths p Application code must explicitly invoke the code Path dispose code method to release the operating system resources managed by each instance when those instances are no longer required p since 3 1
the OS resource for the Path Warning This field is platform dependent p b IMPORTANT b This field is em not em part of the SWT public API It is marked public only so that it can be shared within the packages provided by SWT It is not available on all platforms and should never be accessed from application code p
Constructs a new empty Path param device the device on which to allocate the path exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the device is null and there is no current device li ul exception SWTError ul li ERROR NO HANDLES if a handle for the path could not be obtained li ul see dispose
Adds to the receiver a circular or elliptical arc that lies within the specified rectangular area p The resulting arc begins at code startAngle code and extends for code arcAngle code degrees Angles are interpreted such that 0 degrees is at the 3 o clock position A positive value indicates a counter clockwise rotation while a negative value indicates a clockwise rotation p p The center of the arc is the center of the rectangle whose origin is code x code code y code and whose size is specified by the code width code and code height code arguments p p The resulting arc covers an area code width 1 code pixels wide by code height 1 code pixels tall p param x the x coordinate of the upper left corner of the arc param y the y coordinate of the upper left corner of the arc param width the width of the arc param height the height of the arc param startAngle the beginning angle param arcAngle the angular extent of the arc relative to the start angle exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
TODO expose connect
Adds to the receiver the path described by the parameter param path the path to add to the receiver exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the parameter is null li li ERROR INVALID ARGUMENT if the parameter has been disposed li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Adds to the receiver the rectangle specified by x y width and height param x the x coordinate of the rectangle to add param y the y coordinate of the rectangle to add param width the width of the rectangle to add param height the height of the rectangle to add exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Adds to the receiver the pattern of glyphs generated by drawing the given string using the given font starting at the point x y param string the text to use param x the x coordinate of the starting point param y the y coordinate of the starting point param font the font to use exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the font is null li li ERROR INVALID ARGUMENT if the font has been disposed li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Feature in GDI CloseFigure does affect the last point so GetLastPoint does not return the starting point of the subpath after calling CloseFigure The fix is to remember the subpath starting point and use it instead
Closes the current sub path by adding to the receiver a line from the current point of the path back to the starting point of the sub path exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
TODO should use GC transformation
Returns code true code if the specified point is contained by the receiver and false otherwise p If outline is code true code the point x y checked for containment in the receiver s outline If outline is code false code the point is checked to see if it is contained within the bounds of the closed area covered by the receiver param x the x coordinate of the point to test for containment param y the y coordinate of the point to test for containment param gc the GC to use when testing for containment param outline controls wether to check the outline or contained area of the path return code true code if the path contains the point and code false code otherwise exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the gc is null li li ERROR INVALID ARGUMENT if the gc has been disposed li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Adds to the receiver a cubic bezier curve based on the parameters param cx1 the x coordinate of the first control point of the spline param cy1 the y coordinate of the first control of the spline param cx2 the x coordinate of the second control of the spline param cy2 the y coordinate of the second control of the spline param x the x coordinate of the end point of the spline param y the y coordinate of the end point of the spline exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Disposes of the operating system resources associated with the Path Applications must dispose of all Paths that they allocate
Replaces the first four elements in the parameter with values that describe the smallest rectangle that will completely contain the receiver i e the bounding box param bounds the array to hold the result exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the parameter is null li li ERROR INVALID ARGUMENT if the parameter is too small to hold the bounding box li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Replaces the first two elements in the parameter with values that describe the current point of the path param point the array to hold the result exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the parameter is null li li ERROR INVALID ARGUMENT if the parameter is too small to hold the end point li ul exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Returns a device independent representation of the receiver return the PathData for the receiver exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul see PathData
Adds to the receiver a line from the current point to the point specified by x y param x the x coordinate of the end of the line to add param y the y coordinate of the end of the line to add exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Returns code true code if the Path has been disposed and code false code otherwise p This method gets the dispose state for the Path When a Path has been disposed it is an error to invoke any other method using the Path return code true code when the Path is disposed and code false code otherwise
Sets the current point of the receiver to the point specified by x y Note that this starts a new sub path param x the x coordinate of the new end point param y the y coordinate of the new end point exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Adds to the receiver a quadratic curve based on the parameters param cx the x coordinate of the control point of the spline param cy the y coordinate of the control point of the spline param x the x coordinate of the end point of the spline param y the y coordinate of the end point of the spline exception SWTException ul li ERROR GRAPHIC DISPOSED if the receiver has been disposed li ul
Returns a string containing a concise human readable description of the receiver return a string representation of the receiver
