A TableTree is a selectable user interface object that displays a hierarchy of items and issues notification when an item is selected A TableTree may be single or multi select p The item children that may be added to instances of this class must be of type code TableTreeItem code p p Note that although this class is a subclass of code Composite code it does not make sense to add code Control code children to it or set a layout on it p p dl dt b Styles b dd SINGLE MULTI CHECK FULL SELECTION dt b Events b dd Selection DefaultSelection Collapse Expand dl p Note Only one of the styles SINGLE and MULTI may be specified p deprecated As of 3 1 use Tree TreeItem and TreeColumn
TableTreeItems are not treated as children but rather as items When the TableTree is disposed all children are disposed because TableTree inherits this behaviour from Composite The items must be disposed separately Because TableTree is not part of the org eclipse swt widgets package the method releaseWidget can not be overriden this is how items are disposed of in Table and Tree Instead the items are disposed of in response to the dispose event on the TableTree The inDispose flag is used to distinguish between disposing one TableTreeItem e g when removing an entry from the TableTree and disposing the entire TableTree
NON NLS 1
Constructs a new instance of this class given its parent and a style value describing its behavior and appearance p The style value is either one of the style constants defined in class code SWT code which is applicable to instances of this class or must be built by em bitwise OR em ing together that is using the code int code operator two or more of those code SWT code style constants The class description lists the style constants that are applicable to the class Style bits are also inherited from superclasses p param parent a widget which will be the parent of the new instance cannot be null param style the style of widget to construct exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the parent is null li ul exception SWTException ul li ERROR THREAD INVALID ACCESS if not called from the thread that created the parent li ul see SWT SINGLE see SWT MULTI see SWT CHECK see SWT FULL SELECTION see getStyle
Return the index in the table where this table should be inserted
Adds the listener to the collection of listeners who will be notified when the receiver s selection changes by sending it one of the messages defined in the code SelectionListener code interface p When code widgetSelected code is called the item field of the event object is valid If the reciever has code SWT CHECK code style set and the check selection changes the event object detail field contains the value code SWT CHECK code code widgetDefaultSelected code is typically called when an item is double clicked The item field of the event object is valid for default selection but the detail field is not used p param listener the listener which should be notified exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see SelectionListener see removeSelectionListener see SelectionEvent
Adds the listener to the collection of listeners who will be notified when an item in the receiver is expanded or collapsed by sending it one of the messages defined in the code TreeListener code interface param listener the listener which should be notified exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see TreeListener see removeTreeListener
Deselects all items p If an item is selected it is deselected If an item is not selected it remains unselected exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li ERROR WIDGET DISPOSED when the widget has been disposed ul
Expand upward from the specified leaf item
the TableTree adapting to changes in the System color settings
checkWidget
Gets the number of items p return the number of items in the widget
Gets the height of one item p This operation will fail if the height of one item could not be queried from the OS return the height of one item in the widget exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li ERROR WIDGET DISPOSED when the widget has been disposed ul
checkWidget
Gets the items p return the items in the widget
Gets the selected items p This operation will fail if the selected items cannot be queried from the OS return the selected items in the widget exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li li ERROR WIDGET DISPOSED when the widget has been disposed li ul
Gets the number of selected items p This operation will fail if the number of selected items cannot be queried from the OS return the number of selected items in the widget exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li li ERROR WIDGET DISPOSED when the widget has been disposed li ul
checkWidget
Returns the underlying Table control return the underlying Table control
Leave at least a 6 pixel border
size must be an even number
Plus image
Minus image
checkWidget
Gets the index of an item p The widget is searched starting at 0 until an item is found that is equal to the search item If no item is found 1 is returned Indexing is zero based This index is relative to the parent only param item the search item return the index of the item or 1
Usually when an item is disposed destroyItem will change the size of the items array and dispose of the underlying table items Since the whole table tree is being disposed this is not necessary For speed the inDispose flag is used to skip over this part of the item dispose
Returns the item at the given zero relative index in the receiver Throws an exception if the index is out of range param index the index of the item to return return the item at the given index exception IllegalArgumentException ul li ERROR INVALID RANGE if the index is not between 0 and the number of elements in the list minus 1 inclusive li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 1
Returns the item at the given point in the receiver or null if no such item exists The point is in the coordinate system of the receiver param point the point used to locate the item return the item at the given point exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the point is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
If user clicked on the or expand or collapse the tree
Removes all items p This operation will fail when an item could not be removed in the OS exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li ERROR WIDGET DISPOSED when the widget has been disposed ul
Removes the listener from the collection of listeners who will be notified when the receiver s selection changes param listener the listener which should no longer be notified exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see SelectionListener see addSelectionListener
Removes the listener from the collection of listeners who will be notified when items in the receiver are expanded or collapsed param listener the listener which should no longer be notified exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see TreeListener see addTreeListener
Selects all of the items in the receiver p If the receiver is single select do nothing exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li ERROR WIDGET DISPOSED when the widget has been disposed ul
Sets the receiver s selection to be the given array of items The current selection is cleared before the new items are selected p Items that are not in the receiver are ignored If the receiver is single select and multiple items are specified then all items are ignored param items the array of items exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the array of items is null li li ERROR INVALID ARGUMENT if one of the item has been disposed li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see TableTree deselectAll
Shows the item If the item is already showing in the receiver this method simply returns Otherwise the items are scrolled and expanded until the item is visible param item the item to be shown exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the item is null li li ERROR INVALID ARGUMENT if the item has been disposed li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see TableTree showSelection
Shows the selection p If there is no selection or the selection is already visible this method does nothing If the selection is scrolled out of view the top index of the widget is changed such that selection becomes visible exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li ERROR WIDGET DISPOSED when the widget has been disposed ul
