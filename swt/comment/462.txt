Constructs a new instance of this class given its parent and a style value describing its behavior and appearance p The style value is either one of the style constants defined in class code SWT code which is applicable to instances of this class or must be built by em bitwise OR em ing together that is using the code int code operator two or more of those code SWT code style constants The class description lists the style constants that are applicable to the class Style bits are also inherited from superclasses p param parent a composite control which will be the parent of the new instance cannot be null param style the style of control to construct exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the parent is null li ul exception SWTException ul li ERROR THREAD INVALID ACCESS if not called from the thread that created the parent li li ERROR INVALID SUBCLASS if this class is not an allowed subclass li ul see SWT HORIZONTAL see SWT VERTICAL see Widget checkSubclass see Widget getStyle
Adds the listener to the collection of listeners who will be notified when the receiver s value changes by sending it one of the messages defined in the code SelectionListener code interface p When code widgetSelected code is called the event object detail field contains one of the following values code SWT NONE code for the end of a drag code SWT DRAG code code SWT HOME code code SWT END code code SWT ARROW DOWN code code SWT ARROW UP code code SWT PAGE DOWN code code SWT PAGE UP code code widgetDefaultSelected code is not called p param listener the listener which should be notified exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see SelectionListener see removeSelectionListener see SelectionEvent
checkWidget
Not currently used
Returns code true code if the receiver is enabled and code false code otherwise A disabled control is typically not selectable from the user interface and draws with an inactive or grayed look return the receiver s enabled state exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see isEnabled
Returns the amount that the receiver s value will be modified by when the up down or right left arrows are pressed return the increment exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the maximum value which the receiver will allow return the maximum exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the minimum value which the receiver will allow return the minimum exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the amount that the receiver s value will be modified by when the page increment decrement areas are selected return the page increment exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the receiver s parent which must be a Scrollable return the receiver s parent exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the single selection that is the receiver s value return the selection exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns a point describing the receiver s size The x coordinate of the result is the width of the receiver The y coordinate of the result is the height of the receiver return the receiver s size exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Answers the size of the receiver s thumb relative to the difference between its maximum and minimum values return the thumb value exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see ScrollBar
Returns code true code if the receiver is visible and code false code otherwise p If one of the receiver s ancestors is not visible or some other condition makes the receiver not visible this method may still indicate that it is considered visible even though it may not actually be showing p return the receiver s visibility state exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns code true code if the receiver is enabled and all of the receiver s ancestors are enabled and code false code otherwise A disabled control is typically not selectable from the user interface and draws with an inactive or grayed look return the receiver s enabled state exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see getEnabled
Returns code true code if the receiver is visible and all of the receiver s ancestors are visible and code false code otherwise return the receiver s visibility state exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see getVisible
Removes the listener from the collection of listeners who will be notified when the receiver s value changes param listener the listener which should no longer be notified exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see SelectionListener see addSelectionListener
if style SWT HORIZONTAL 0 return OS SB HORZ
if OS IsWinCE error SWT ERROR NOT IMPLEMENTED
Enables the receiver if the argument is code true code and disables it otherwise A disabled control is typically not selectable from the user interface and draws with an inactive or grayed look param enabled the new enabled state exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Sets the amount that the receiver s value will be modified by when the up down or right left arrows are pressed to the argument which must be at least one param value the new increment must be greater than zero exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Sets the maximum If this value is negative or less than or equal to the minimum the value is ignored If necessary first the thumb and then the selection are adjusted to fit within the new range param value the new maximum exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Sets the minimum value If this value is negative or greater than or equal to the maximum the value is ignored If necessary first the thumb and then the selection are adjusted to fit within the new range param value the new minimum exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Sets the amount that the receiver s value will be modified by when the page increment decrement areas are selected to the argument which must be at least one param value the page increment must be greater than zero exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Bug in Windows For some reason when SetScrollInfo is used with SIF POS and the scroll bar is hidden the opposite scroll bar is incorrectly made visible so that the next time the parent is resized or another scroll bar operation is performed the opposite scroll bar draws The fix is to hide both scroll bars
if OS IsWinCE error SWT ERROR NOT IMPLEMENTED
Bug in Windows For some reason when the widget is a standard scroll bar and SetScrollInfo is called with SIF RANGE or SIF PAGE the widget is incorrectly made visible so that the next time the parent is resized or another scroll bar operation is performed the scroll bar draws The fix is to hide the scroll bar again when already hidden
if OS IsWinCE error SWT ERROR NOT IMPLEMENTED
Feature in Windows Using SIF DISABLENOSCROLL SetScrollInfo can change enabled and disabled state of the scroll bar causing a scroll bar that was disabled by the application to become enabled The fix is to disable the scroll bar again when the application has disabled the scroll bar
Sets the single em selection em that is the receiver s value to the argument which must be greater than or equal to zero param selection the new selection must be zero or greater exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Sets the size of the receiver s thumb relative to the difference between its maximum and minimum values This new value will be ignored if it is less than one and will be clamped if it exceeds the receiver s current range param value the new thumb value which must be at least one and not larger than the size of the current range exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Sets the receiver s selection minimum value maximum value thumb increment and page increment all at once p Note This is equivalent to setting the values individually using the appropriate methods but may be implemented in a more efficient fashion on some platforms p param selection the new selection value param minimum the new minimum value param maximum the new maximum value param thumb the new thumb value param increment the new increment value param pageIncrement the new pageIncrement value exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Bug in Windows When the only changed flag to SetScrollInfo is OS SIF DISABLENOSCROLL Windows does not update the scroll bar state The fix is to increase and then decrease the maximum causing Windows to honour the flag
On Windows CE use SIF DISABLENOSCROLL to show and hide the scroll bar when the page size is equal to the range
Set the state bits before calling ShowScrollBar because hiding and showing the scroll bar can cause WM SIZE messages when the client area is resized Setting the state before the call means that code that runs during WM SIZE that queries the visibility of the scroll bar will get the correct value
Bug in Windows For some reason when the widget is a standard scroll bar and SetScrollInfo is called with SIF RANGE or SIF PAGE while the widget is not visible the widget is incorrectly disabled even though the values for SIF RANGE and SIF PAGE when set for a visible scroll bar would not disable the scroll bar The fix is to enable the scroll bar when not disabled by the application and the current scroll bar ranges would cause the scroll bar to be enabled had they been set when the scroll bar was visible
Marks the receiver as visible if the argument is code true code and marks it invisible otherwise p If one of the receiver s ancestors is not visible or some other condition makes the receiver not visible marking it visible may not actually cause it to be displayed p param visible the new visibility state exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Do nothing when scrolling is ending
Send the event because WM HSCROLL and WM VSCROLL are sent from a modal message loop in Windows that is active when the user is scrolling
the widget could be destroyed at this point
