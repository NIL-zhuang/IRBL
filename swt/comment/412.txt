OleAutomation provides a generic mechanism for accessing functionality that is specific to a particular ActiveX Control or OLE Document p The OLE Document or ActiveX Control must support the IDispatch interface in order to provide OleAutomation support The additional functionality provided by the OLE Object is specified in its IDL file The additional methods can either be to get property values code getProperty code to set property values code setProperty code or to invoke a method code invoke code or code invokeNoReply code Arguments are passed around in the form of code Variant code objects p Here is a sample IDL fragment pre interface IMyControl IDispatch propget id 0 HRESULT maxFileCount retval out int c propput id 0 HRESULT maxFileCount in int c id 1 HRESULT AddFile in BSTR fileName pre p An example of how to interact with this extended functionality is shown below code pre OleAutomation automation new OleAutomation myControlSite Look up the ID of the maxFileCount parameter int rgdispid automation getIDsOfNames new String maxFileCount int maxFileCountID rgdispid 0 Set the property maxFileCount to 100 if automation setProperty maxFileCountID new Variant 100 System out println Max File Count was successfully set Get the new value of the maxFileCount parameter Variant pVarResult automation getProperty maxFileCountID if pVarResult null System out println Max File Count is pVarResult getInt Invoke the AddFile method Look up the IDs of the AddFile method and its parameter rgdispid automation getIDsOfNames new String AddFile fileName int dispIdMember rgdispid 0 int rgdispidNamedArgs new int rgdispid 1 Convert arguments to Variant objects Variant rgvarg new Variant 1 String fileName C testfile rgvarg 0 new Variant fileName Call the method Variant pVarResult automation invoke dispIdMember rgvarg rgdispidNamedArgs Check the return value if pVarResult null pVarResult getInt OLE S OK System out println Failed to add file fileName automation dispose pre code
Creates an OleAutomation object for the specified client param clientSite the site for the OLE Document or ActiveX Control whose additional functionality you need to access exception IllegalArgumentException ul li ERROR INVALID INTERFACE ADDRESS when called with an invalid client site ul
Disposes the automation object p This method releases the IDispatch interface on the OLE Document or ActiveX Control Do not use the OleAutomation object after it has been disposed
Returns the positive integer values IDs that are associated with the specified names by the IDispatch implementor If you are trying to get the names of the parameters in a method the first String in the names array must be the name of the method followed by the names of the parameters param names an array of names for which you require the identifiers return positive integer values that are associated with the specified names in the same order as the names where provided or null if the names are unknown
Returns a description of the last error encountered return a description of the last error encountered
Returns the value of the property specified by the dispIdMember param dispIdMember the ID of the property as specified by the IDL of the ActiveX Control the value for the ID can be obtained using OleAutomation getIDsOfNames return the value of the property specified by the dispIdMember or null
Returns the value of the property specified by the dispIdMember param dispIdMember the ID of the property as specified by the IDL of the ActiveX Control the value for the ID can be obtained using OleAutomation getIDsOfNames param rgvarg an array of arguments for the method All arguments are considered to be read only unless the Variant is a By Reference Variant type return the value of the property specified by the dispIdMember or null since 2 0
Returns the value of the property specified by the dispIdMember param dispIdMember the ID of the property as specified by the IDL of the ActiveX Control the value for the ID can be obtained using OleAutomation getIDsOfNames param rgvarg an array of arguments for the method All arguments are considered to be read only unless the Variant is a By Reference Variant type param rgdispidNamedArgs an array of identifiers for the arguments specified in rgvarg the parameter IDs must be in the same order as their corresponding values all arguments must have an identifier identifiers can be obtained using OleAutomation getIDsOfNames return the value of the property specified by the dispIdMember or null since 2 0
Invokes a method on the OLE Object the method has no parameters param dispIdMember the ID of the method as specified by the IDL of the ActiveX Control the value for the ID can be obtained using OleAutomation getIDsOfNames return the result of the method or null if the method failed to give result information
Invokes a method on the OLE Object the method has no optional parameters param dispIdMember the ID of the method as specified by the IDL of the ActiveX Control the value for the ID can be obtained using OleAutomation getIDsOfNames param rgvarg an array of arguments for the method All arguments are considered to be read only unless the Variant is a By Reference Variant type return the result of the method or null if the method failed to give result information
Invokes a method on the OLE Object the method has optional parameters It is not necessary to specify all the optional parameters only include the parameters for which you are providing values param dispIdMember the ID of the method as specified by the IDL of the ActiveX Control the value for the ID can be obtained using OleAutomation getIDsOfNames param rgvarg an array of arguments for the method All arguments are considered to be read only unless the Variant is a By Reference Variant type param rgdispidNamedArgs an array of identifiers for the arguments specified in rgvarg the parameter IDs must be in the same order as their corresponding values all arguments must have an identifier identifiers can be obtained using OleAutomation getIDsOfNames return the result of the method or null if the method failed to give result information
get the IDispatch interface for the control
create a DISPPARAMS structure for the input parameters
store arguments in rgvarg
if arguments have ids store the ids in rgdispidNamedArgs
invoke the method
free the Dispparams resources
save error string and cleanup EXCEPINFO
Invokes a method on the OLE Object the method has no parameters In the early days of OLE the IDispatch interface was not well defined and some applications mainly Word did not support a return value For these applications call this method instead of calling code public void invoke int dispIdMember code param dispIdMember the ID of the method as specified by the IDL of the ActiveX Control the value for the ID can be obtained using OleAutomation getIDsOfNames exception SWTException ul li ERROR ACTION NOT PERFORMED when method invocation fails ul
Invokes a method on the OLE Object the method has no optional parameters In the early days of OLE the IDispatch interface was not well defined and some applications mainly Word did not support a return value For these applications call this method instead of calling code public void invoke int dispIdMember Variant rgvarg code param dispIdMember the ID of the method as specified by the IDL of the ActiveX Control the value for the ID can be obtained using OleAutomation getIDsOfNames param rgvarg an array of arguments for the method All arguments are considered to be read only unless the Variant is a By Reference Variant type exception SWTException ul li ERROR ACTION NOT PERFORMED when method invocation fails ul
Invokes a method on the OLE Object the method has optional parameters It is not necessary to specify all the optional parameters only include the parameters for which you are providing values In the early days of OLE the IDispatch interface was not well defined and some applications mainly Word did not support a return value For these applications call this method instead of calling code public void invoke int dispIdMember Variant rgvarg int rgdispidNamedArgs code param dispIdMember the ID of the method as specified by the IDL of the ActiveX Control the value for the ID can be obtained using OleAutomation getIDsOfNames param rgvarg an array of arguments for the method All arguments are considered to be read only unless the Variant is a By Reference Variant type param rgdispidNamedArgs an array of identifiers for the arguments specified in rgvarg the parameter IDs must be in the same order as their corresponding values all arguments must have an identifier identifiers can be obtained using OleAutomation getIDsOfNames exception SWTException ul li ERROR ACTION NOT PERFORMED when method invocation fails ul
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
NON NLS 1
extract exception info
cleanup EXCEPINFO struct
Sets the property specified by the dispIdMember to a new value param dispIdMember the ID of the property as specified by the IDL of the ActiveX Control the value for the ID can be obtained using OleAutomation getIDsOfNames param rgvarg the new value of the property return true if the operation was successful
Sets the property specified by the dispIdMember to a new value param dispIdMember the ID of the property as specified by the IDL of the ActiveX Control the value for the ID can be obtained using OleAutomation getIDsOfNames param rgvarg an array of arguments for the method All arguments are considered to be read only unless the Variant is a By Reference Variant type return true if the operation was successful since 2 0
