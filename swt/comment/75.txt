A TableCursor provides a way for the user to navigate around a Table using the keyboard It also provides a mechanism for selecting an individual cell in a table p Here is an example of using a TableCursor to navigate to a cell and then edit it code pre public static void main String args Display display new Display Shell shell new Shell display shell setLayout new GridLayout create a a table with 3 columns and fill with data final Table table new Table shell SWT BORDER SWT MULTI SWT FULL SELECTION table setLayoutData new GridData GridData FILL BOTH TableColumn column1 new TableColumn table SWT NONE TableColumn column2 new TableColumn table SWT NONE TableColumn column3 new TableColumn table SWT NONE for int i 0 i lt 100 i TableItem item new TableItem table SWT NONE item setText new String cell i 0 cell i 1 cell i 2 column1 pack column2 pack column3 pack create a TableCursor to navigate around the table final TableCursor cursor new TableCursor table SWT NONE create an editor to edit the cell when the user hits ENTER while over a cell in the table final ControlEditor editor new ControlEditor cursor editor grabHorizontal true editor grabVertical true cursor addSelectionListener new SelectionAdapter when the TableEditor is over a cell select the corresponding row in the table public void widgetSelected SelectionEvent e table setSelection new TableItem cursor getRow when the user hits ENTER in the TableCursor pop up a text editor so that they can change the text of the cell public void widgetDefaultSelected SelectionEvent e final Text text new Text cursor SWT NONE TableItem row cursor getRow int column cursor getColumn text setText row getText column text addKeyListener new KeyAdapter public void keyPressed KeyEvent e close the text editor and copy the data over when the user hits ENTER if e character SWT CR TableItem row cursor getRow int column cursor getColumn row setText column text getText text dispose close the text editor when the user hits ESC if e character SWT ESC text dispose editor setEditor text text setFocus Hide the TableCursor when the user hits the MOD1 or MOD2 key This alows the user to select multiple items in the table cursor addKeyListener new KeyAdapter public void keyPressed KeyEvent e if e keyCode SWT MOD1 e keyCode SWT MOD2 e stateMask SWT MOD1 0 e stateMask SWT MOD2 0 cursor setVisible false Show the TableCursor when the user releases the MOD2 or MOD1 key This signals the end of the multiple selection task table addKeyListener new KeyAdapter public void keyReleased KeyEvent e if e keyCode SWT MOD1 e stateMask SWT MOD2 0 return if e keyCode SWT MOD2 e stateMask SWT MOD1 0 return if e keyCode SWT MOD1 e stateMask SWT MOD1 0 return if e keyCode SWT MOD2 e stateMask SWT MOD2 0 return TableItem selection table getSelection TableItem row selection length 0 table getItem table getTopIndex selection 0 table showItem row cursor setSelection row 0 cursor setVisible true cursor setFocus shell open while shell isDisposed if display readAndDispatch display sleep display dispose pre code dl dt b Styles b dt dd BORDER dd dt b Events b dt dd Selection DefaultSelection dd dl since 2 0
By default invert the list selection colors
Constructs a new instance of this class given its parent table and a style value describing its behavior and appearance p The style value is either one of the style constants defined in class code SWT code which is applicable to instances of this class or must be built by em bitwise OR em ing together that is using the code int code operator two or more of those code SWT code style constants The class description lists the style constants that are applicable to the class Style bits are also inherited from superclasses p param parent a Table control which will be the parent of the new instance cannot be null param style the style of control to construct exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the parent is null li ul exception SWTException ul li ERROR THREAD INVALID ACCESS if not called from the thread that created the parent li li ERROR INVALID SUBCLASS if this class is not an allowed subclass li ul see SWT BORDER see Widget checkSubclass see Widget getStyle
Adds the listener to the collection of listeners who will be notified when the receiver s selection changes by sending it one of the messages defined in the code SelectionListener code interface p When code widgetSelected code is called the item field of the event object is valid If the reciever has code SWT CHECK code style set and the check selection changes the event object detail field contains the value code SWT CHECK code code widgetDefaultSelected code is typically called when an item is double clicked p param listener the listener which should be notified exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see SelectionListener see SelectionEvent see removeSelectionListener SelectionListener
NON NLS 1
Temporary code need a better way to determine table trim
NON NLS 1
Removes the listener from the collection of listeners who will be notified when the receiver s selection changes param listener the listener which should no longer be notified exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see SelectionListener see addSelectionListener SelectionListener since 3 0
Returns the column over which the TableCursor is positioned return the column for the current position exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Returns the row over which the TableCursor is positioned return the item for the current position exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Positions the TableCursor over the cell at the given row and column in the parent table param row the index of the row for the cell to select param column the index of column for the cell to select exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Positions the TableCursor over the cell at the given row and column in the parent table param row the TableItem of the row for the cell to select param column the index of column for the cell to select exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
