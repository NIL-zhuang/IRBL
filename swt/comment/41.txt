marginWidth specifies the number of pixels of horizontal margin that will be placed along the left and right edges of the form The default value is 0
marginHeight specifies the number of pixels of vertical margin that will be placed along the top and bottom edges of the form The default value is 0
A multiple of the tab height that specifies the minimum width to which a tab will be compressed before scrolling arrows are used to navigate the tabs NOTE This field is badly named and can not be fixed for backwards compatability It should not be capitalized deprecated This field is no longer used See setMinimumCharacters int
Color of innermost line of drop shadow border NOTE This field is badly named and can not be fixed for backwards compatability It should be capitalized deprecated drop shadow border is no longer drawn in 3 0
Color of middle line of drop shadow border NOTE This field is badly named and can not be fixed for backwards compatability It should be capitalized deprecated drop shadow border is no longer drawn in 3 0
Color of outermost line of drop shadow border NOTE This field is badly named and can not be fixed for backwards compatability It should be capitalized deprecated drop shadow border is no longer drawn in 3 0
sizing positioning
item management
index of the left most visible tab
External Listener management
support for deprecated listener mechanism
Selected item appearance
Unselected item appearance
close min max and chevron buttons
borders and shapes
change the selection as each child is destroyed
on Resize
tooltip
internal constants
showMax style2 SWT MAX 0 conflicts with SWT BOTTOM
set up default colors
Add all listeners
FALL THROUGH
Constructs a new instance of this class given its parent and a style value describing its behavior and appearance p The style value is either one of the style constants defined in class code SWT code which is applicable to instances of this class or must be built by em bitwise OR em ing together that is using the code int code operator two or more of those code SWT code style constants The class description lists the style constants that are applicable to the class Style bits are also inherited from superclasses p param parent a widget which will be the parent of the new instance cannot be null param style the style of widget to construct exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the parent is null li ul exception SWTException ul li ERROR THREAD INVALID ACCESS if not called from the thread that created the parent li ul see SWT TOP see SWT BOTTOM see SWT FLAT see SWT BORDER see SWT SINGLE see SWT MULTI see getStyle
TOP is the default
MULTI is the default
reduce the flash by not redrawing the entire area on a Resize event
The default background on carbon and some GTK themes is not a solid color but a texture To show the correct default background we must allow the operating system to draw it and therefore we can not use the NO BACKGROUND style The NO BACKGROUND style is not required on platforms that use double buffering which is true in both of these cases
NON NLS 1 NON NLS 2
In Right To Left orientation on Windows all GC calls that use a brush are drawing offset by one pixel This results in some parts of the CTabFolder not drawing correctly To alleviate some of the appearance problems allow the OS to draw the background This does not draw correctly but the result is less obviously wrong
NOTE region passed in to this function will be modified
add to array
Adds the listener to the collection of listeners who will be notified when a tab item is closed minimized maximized restored or to show the list of items that are not currently visible param listener the listener which should be notified exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li li ERROR WIDGET DISPOSED when the widget has been disposed li ul see CTabFolder2Listener see removeCTabFolder2Listener CTabFolder2Listener since 3 0
add to array
display close button to be backwards compatible
Adds the listener to the collection of listeners who will be notified when a tab item is closed param listener the listener which should be notified exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li li ERROR WIDGET DISPOSED when the widget has been disposed li ul see CTabFolderListener see removeCTabFolderListener CTabFolderListener deprecated use addCTabFolder2Listener CTabFolder2Listener
Adds the listener to receive events p param listener the listener exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li li ERROR WIDGET DISPOSED when the widget has been disposed li ul
NON NLS 1
Don t perform anti aliasing on low resolution displays
move the selection if this item is selected
draw a solid background using default background in shape
horizontal gradient
draw gradient
draw the background image in shape
If horizontal gradient show gradient across the whole area
Draw highlight margin
Draw client area
fill in body
left
right
bottom
top
draw 1 pixel border around outside
draw chevron 10x7
NON NLS 1
5x4 or 7x9
5x4 or 9x3
If horizontal gradient show gradient across the whole area
draw 1 pixel border
Draw Tab Header
Fill in background
Fill in parent background for non rectangular shape
Draw the unselected tabs
if no selected tab draw line across bottom of all tabs
Draw selected tab
Draw Buttons
Draw border line
Returns code true code if the receiver s border is visible return the receiver s border visibility state exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 0
checkWidget
Return the tab that is located at the specified index param index the index of the tab item return the item at the specified index exception IllegalArgumentException ul li ERROR INVALID RANGE if the index is out of range li ul exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li li ERROR WIDGET DISPOSED when the widget has been disposed li ul
checkWidget
Gets the item at a point in the widget param pt the point in coordinates relative to the CTabFolder return the item at a point or null exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li li ERROR WIDGET DISPOSED when the widget has been disposed li ul
checkWidget
Return the number of tabs in the folder return the number of tabs in the folder exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li li ERROR WIDGET DISPOSED when the widget has been disposed li ul
checkWidget
Return the tab items return the tab items exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li li ERROR WIDGET DISPOSED when the widget has been disposed li ul
Returns code true code if the receiver is minimized return the receiver s minimized state exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 0
Returns code true code if the minimize button is visible return the visibility of the minimized button exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 0
Returns the number of characters that will appear in a fully compressed tab return number of characters that will appear in a fully compressed tab since 3 0
Returns code true code if the receiver is maximized p return the receiver s maximized state exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 0
Returns code true code if the maximize button is visible return the visibility of the maximized button exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 0
Returns code true code if the receiver displays most recently used tabs and code false code otherwise p When there is not enough horizontal space to show all the tabs by default tabs are shown sequentially from left to right in order of their index When the MRU visibility is turned on the tabs that are visible will be the tabs most recently selected Tabs will still maintain their left to right order based on index but only the most recently selected tabs are visible p For example consider a CTabFolder that contains Tab 1 Tab 2 Tab 3 and Tab 4 in order by index The user selects Tab 1 and then Tab 3 If the CTabFolder is now compressed so that only two tabs are visible by default Tab 2 and Tab 3 will be shown Tab 3 since it is currently selected and Tab 2 because it is the previous item in index order If MRU visibility is enabled the two visible tabs will be Tab 1 and Tab 3 in that order from left to right p return the receiver s header s visibility state exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 1
checkWidget
Return the selected tab item or an empty array if there is no selection return the selected tab item exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li li ERROR WIDGET DISPOSED when the widget has been disposed li ul
Returns the receiver s selection background color return the selection background color of the receiver exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 0
Returns the receiver s selection foreground color return the selection foreground color of the receiver exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 0
checkWidget
Return the index of the selected tab item or 1 if there is no selection return the index of the selected tab item or 1 exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li li ERROR WIDGET DISPOSED when the widget has been disposed li ul
Returns code true code if the CTabFolder is rendered with a simple traditional shape return code true code if the CTabFolder is rendered with a simple shape since 3 0
Returns code true code if the CTabFolder only displys the selected tab and code false code if the CTabFolder displays multiple tabs return code true code if the CTabFolder only displys the selected tab and code false code if the CTabFolder displays multiple tabs since 3 0
1 for line drawn across top of tab
Returns the height of the tab return the height of the tab exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li li ERROR WIDGET DISPOSED when the widget has been disposed li ul
Returns the position of the tab Possible values are SWT TOP or SWT BOTTOM return the position of the tab exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li li ERROR WIDGET DISPOSED when the widget has been disposed li ul
Returns the control in the top right corner of the tab folder Typically this is a close button or a composite with a menu and close button return the control in the top right corner of the tab folder or null exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li li ERROR WIDGET DISPOSED when the widget has been disposed li ul since 2 1
Returns code true code if the close button appears when the user hovers over an unselected tabs return code true code if the close button appears on unselected tabs since 3 0
Returns code true code if an image appears in unselected tabs return code true code if an image appears in unselected tabs since 3 0
Return the index of the specified tab or 1 if the tab is not in the receiver param item the tab item for which the index is required return the index of the specified tab item or 1 exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li li ERROR WIDGET DISPOSED when the widget has been disposed li ul
NON NLS 1
NON NLS 1
Usually when an item is disposed destroyItem will change the size of the items array reset the bounds of all the tabs and manage the widget associated with the tab Since the whole folder is being disposed this is not necessary For speed the inDispose flag is used to skip over this part of the item dispose
handle case where default font changes
rounded top right corner
Removes the listener param listener the listener exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li li ERROR WIDGET DISPOSED when the widget has been disposed li ul see addCTabFolder2Listener CTabFolder2Listener since 3 0
Removes the listener param listener the listener exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li li ERROR WIDGET DISPOSED when the widget has been disposed li ul deprecated see removeCTabFolderCloseListener CTabFolderListener
Removes the listener param listener the listener exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li li ERROR WIDGET DISPOSED when the widget has been disposed li ul
Specify a gradient of colours to be drawn in the background of the unselected tabs For example to draw a gradient that varies from dark blue to blue and then to white use the following call to setBackground pre cfolder setBackground new Color display getSystemColor SWT COLOR DARK BLUE display getSystemColor SWT COLOR BLUE display getSystemColor SWT COLOR WHITE display getSystemColor SWT COLOR WHITE new int 25 50 100 pre param colors an array of Color that specifies the colors to appear in the gradient in order of appearance left to right The value code null code clears the background gradient The value code null code can be used inside the array of Color to specify the background color param percents an array of integers between 0 and 100 specifying the percent of the width of the widget at which the color should change The size of the percents array must be one less than the size of the colors array exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li li ERROR WIDGET DISPOSED when the widget has been disposed li ul since 3 0
Don t use gradients on low color displays
Are these settings the same as before
Store the new settings
Refresh with the new settings
Specify a gradient of colours to be drawn in the background of the unselected tab For example to draw a vertical gradient that varies from dark blue to blue and then to white use the following call to setBackground pre cfolder setBackground new Color display getSystemColor SWT COLOR DARK BLUE display getSystemColor SWT COLOR BLUE display getSystemColor SWT COLOR WHITE display getSystemColor SWT COLOR WHITE new int 25 50 100 true pre param colors an array of Color that specifies the colors to appear in the gradient in order of appearance left to right The value code null code clears the background gradient The value code null code can be used inside the array of Color to specify the background color param percents an array of integers between 0 and 100 specifying the percent of the width of the widget at which the color should change The size of the percents array must be one less than the size of the colors array param vertical indicate the direction of the gradient True is vertical and false is horizontal exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li li ERROR WIDGET DISPOSED when the widget has been disposed li ul since 3 0
Set the image to be drawn in the background of the unselected tab Image is stretched or compressed to cover entire unselected tab area param image the image to be drawn in the background exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 0
Toggle the visibility of the border param show true if the border should be displayed exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
max button
min button
top right control
fill size is 0 if chevron showing
fill size is 0 if item compressed
chevron button
Display an insert marker before or after the specified tab item A value of null will clear the mark param item the item with which the mark is associated or null param after true if the mark should be displayed after the specified item exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Display an insert marker before or after the specified tab item A value of 1 will clear the mark param index the index of the item with which the mark is associated or null param after true if the mark should be displayed after the specified item exception IllegalArgumentException ul ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
off screen
off screen
First try the minimum tab size at full compression
determine compression for each item
no compression required
full compression required and a chevron
display maximize button
Marks the receiver s maximize button as visible if the argument is code true code and marks it invisible otherwise param visible the new visibility state exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 0
Sets the layout which is associated with the receiver to be the argument which may be null p Note No Layout can be set on this Control because it already manages the size and position of its children p param layout the receiver s new layout or null exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Sets the maximized state of the receiver param maximize the new maximized state exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 0
display maximize button
Marks the receiver s minimize button as visible if the argument is code true code and marks it invisible otherwise param visible the new visibility state exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 0
Sets the minimized state of the receiver param minimize the new minimized state exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 0
Sets the minimum number of characters that will be displayed in a fully compressed tab param count the minimum number of characters that will be displayed in a fully compressed tab exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li li ERROR INVALID RANGE if the count is less than zero li ul since 3 0
When there is not enough horizontal space to show all the tabs by default tabs are shown sequentially from left to right in order of their index When the MRU visibility is turned on the tabs that are visible will be the tabs most recently selected Tabs will still maintain their left to right order based on index but only the most recently selected tabs are visible p For example consider a CTabFolder that contains Tab 1 Tab 2 Tab 3 and Tab 4 in order by index The user selects Tab 1 and then Tab 3 If the CTabFolder is now compressed so that only two tabs are visible by default Tab 2 and Tab 3 will be shown Tab 3 since it is currently selected and Tab 2 because it is the previous item in index order If MRU visibility is enabled the two visible tabs will be Tab 1 and Tab 3 in that order from left to right p param show the new visibility state exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 1
Set the selection to the tab at the specified item param item the tab item to be selected exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the listener is null li ul exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li li ERROR WIDGET DISPOSED when the widget has been disposed li ul
Set the selection to the tab at the specified index param index the index of the tab item to be selected exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Sets the receiver s selection background color to the color specified by the argument or to the default system color for the control if the argument is null param color the new color or null exception IllegalArgumentException ul li ERROR INVALID ARGUMENT if the argument has been disposed li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 0
Specify a gradient of colours to be draw in the background of the selected tab For example to draw a gradient that varies from dark blue to blue and then to white use the following call to setBackground pre cfolder setBackground new Color display getSystemColor SWT COLOR DARK BLUE display getSystemColor SWT COLOR BLUE display getSystemColor SWT COLOR WHITE display getSystemColor SWT COLOR WHITE new int 25 50 100 pre param colors an array of Color that specifies the colors to appear in the gradient in order of appearance left to right The value code null code clears the background gradient The value code null code can be used inside the array of Color to specify the background color param percents an array of integers between 0 and 100 specifying the percent of the width of the widget at which the color should change The size of the percents array must be one less than the size of the colors array exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li li ERROR WIDGET DISPOSED when the widget has been disposed li ul
Don t use gradients on low color displays
Are these settings the same as before
Store the new settings
Refresh with the new settings
Specify a gradient of colours to be draw in the background of the selected tab For example to draw a vertical gradient that varies from dark blue to blue and then to white use the following call to setBackground pre cfolder setBackground new Color display getSystemColor SWT COLOR DARK BLUE display getSystemColor SWT COLOR BLUE display getSystemColor SWT COLOR WHITE display getSystemColor SWT COLOR WHITE new int 25 50 100 true pre param colors an array of Color that specifies the colors to appear in the gradient in order of appearance left to right The value code null code clears the background gradient The value code null code can be used inside the array of Color to specify the background color param percents an array of integers between 0 and 100 specifying the percent of the width of the widget at which the color should change The size of the percents array must be one less than the size of the colors array param vertical indicate the direction of the gradient True is vertical and false is horizontal exception SWTException ul li ERROR THREAD INVALID ACCESS when called from the wrong thread li li ERROR WIDGET DISPOSED when the widget has been disposed li ul since 3 0
Set the image to be drawn in the background of the selected tab Image is stretched or compressed to cover entire selection tab area param image the image to be drawn in the background exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Set the foreground color of the selected tab param color the color of the text displayed in the selected tab exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul
Sets the shape that the CTabFolder will use to render itself param simple code true code if the CTabFolder should render itself in a simple traditional style exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 0
Sets the number of tabs that the CTabFolder should display param single code true code if only the selected tab should be displayed otherwise multiple tabs will be shown exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 0
Specify a fixed height for the tab items If no height is specified the default height is the height of the text or the image whichever is greater Specifying a height of 1 will revert to the default height param height the pixel value of the height or 1 exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li li ERROR INVALID ARGUMENT if called with a height of less than 0 li ul
Specify whether the tabs should appear along the top of the folder or along the bottom of the folder param position code SWT TOP code for tabs along the top or code SWT BOTTOM code for tabs along the bottom exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li li ERROR INVALID ARGUMENT if the position value is not either SWT TOP or SWT BOTTOM li ul since 3 0
Set the control that appears in the top right corner of the tab folder Typically this is a close button or a composite with a Menu and close button The topRight control is optional Setting the top right control to null will remove it from the tab folder param control the control to be displayed in the top right corner or null exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li li ERROR INVALID ARGUMENT if the control is not a child of this CTabFolder li ul since 2 1
Set the control that appears in the top right corner of the tab folder Typically this is a close button or a composite with a Menu and close button The topRight control is optional Setting the top right control to null will remove it from the tab folder p The alignment parameter sets the layout of the control in the tab area code SWT RIGHT code will cause the control to be positioned on the far right of the folder and it will have its default size code SWT FILL code will size the control to fill all the available space to the right of the last tab If there is no available space the control will not be visible p param control the control to be displayed in the top right corner or null param alignment code SWT RIGHT code or code SWT FILL code exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li li ERROR INVALID ARGUMENT if the control is not a child of this CTabFolder li ul since 3 0
display close button when mouse hovers
Specify whether the close button appears when the user hovers over an unselected tabs param visible code true code makes the close button appear exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 0
display image on unselected items
Specify whether the image appears on unselected tabs param visible code true code makes the image appear exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul since 3 0
move to front of mru order
Shows the item If the item is already showing in the receiver this method simply returns Otherwise the items are scrolled until the item is visible param item the item to be shown exception IllegalArgumentException ul li ERROR NULL ARGUMENT if the item is null li li ERROR INVALID ARGUMENT if the item has been disposed li ul exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see CTabFolder showSelection since 2 0
NON NLS 1
Shows the selection If the selection is already showing in the receiver this method simply returns Otherwise the items are scrolled until the selection is visible exception SWTException ul li ERROR WIDGET DISPOSED if the receiver has been disposed li li ERROR THREAD INVALID ACCESS if not called from the thread that created the receiver li ul see CTabFolder showItem CTabItem since 2 0
make sure selected item will be showing
NON NLS 1
1 for line drawn across top of tab
NON NLS 1 NON NLS 2
NON NLS 1 NON NLS 2
NON NLS 1
NON NLS 1
On some platforms there is a minimum size for a shell which may be greater than the label size To avoid having the background of the tip shell showing around the label force the label to fill the entire client area
Position the tooltip and ensure that it is not located off the screen
the arrow cursor on Windows
